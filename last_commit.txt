Repository: plone.app.content


Branch: refs/heads/3.5.x
Date: 2020-01-14T13:28:58+01:00
Author: Matthias Osswald (busykoala) <m@osswald.li>
Commit: https://github.com/plone/plone.app.content/commit/81c248156574c99b90ddf3a1caac65ab198ab781

Fix unicode error.

Files changed:
M plone/app/content/browser/contents/workflow.py

b"diff --git a/plone/app/content/browser/contents/workflow.py b/plone/app/content/browser/contents/workflow.py\nindex ffbc358..4aceb0a 100644\n--- a/plone/app/content/browser/contents/workflow.py\n+++ b/plone/app/content/browser/contents/workflow.py\n@@ -2,6 +2,7 @@\n from DateTime import DateTime\n from plone.app.content.browser.contents import ContentsBaseAction\n from plone.app.content.interfaces import IStructureAction\n+from plone.dexterity.utils import safe_unicode\n from Products.CMFCore.interfaces._content import IFolderish\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n@@ -60,7 +61,8 @@ def __call__(self):\n                 for transition in self.pworkflow.getTransitionsFor(obj):\n                     tdata = {\n                         'id': transition['id'],\n-                        'title': self.context.translate(transition['name'])\n+                        'title': self.context.translate(\n+                            safe_unicode(transition['name']))\n                     }\n                     if tdata not in transitions:\n                         transitions.append(tdata)\n"

Repository: plone.app.content


Branch: refs/heads/3.5.x
Date: 2020-01-14T13:29:06+01:00
Author: Matthias Osswald (busykoala) <m@osswald.li>
Commit: https://github.com/plone/plone.app.content/commit/2ce0d34a625ef42aa2009289f3742a42a4f31333

Add changelog entry.

Files changed:
A news/191.bugfix

b'diff --git a/news/191.bugfix b/news/191.bugfix\nnew file mode 100644\nindex 0000000..8ee5e00\n--- /dev/null\n+++ b/news/191.bugfix\n@@ -0,0 +1 @@\n+Fix error when having non-ASCII characters in workflow state titles. [busykoala]\n'

Repository: plone.app.content


Branch: refs/heads/3.5.x
Date: 2020-01-15T16:05:34+01:00
Author: Matthias Osswald (busykoala) <m@osswald.li>
Commit: https://github.com/plone/plone.app.content/commit/7ea7405fbc0ff6d738d37f305ca5afeee7225e45

Test non-ascii characters in workflow state title.

Files changed:
A plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml
A plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml
A plone/app/content/tests/profiles/non-ascii-workflow.zcml
A plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py
M plone/app/content/testing.py

b'diff --git a/plone/app/content/testing.py b/plone/app/content/testing.py\nindex 792077a..513b465 100644\n--- a/plone/app/content/testing.py\n+++ b/plone/app/content/testing.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE\n+from plone.app.testing import applyProfile\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import IntegrationTesting\n from plone.app.testing import PLONE_FIXTURE\n@@ -107,6 +108,20 @@ def setUpPloneSite(self, portal):\n         portal.portal_workflow.setDefaultChain("simple_publication_workflow")\n \n \n+class NonAsciiLayer(PloneSandboxLayer):\n+\n+    def setUpZope(self, app, configurationContext):\n+        import plone.app.content.tests\n+\n+        xmlconfig.file(\'profiles/non-ascii-workflow.zcml\',\n+                       plone.app.content.tests,\n+                       context=configurationContext)\n+\n+    def setUpPloneSite(self, portal):\n+        # applyProfile which has non-ascii characters in state titles\n+        applyProfile(portal, \'plone.app.content.tests:non-ascii-workflow\')\n+\n+\n if HAS_AT:\n     class PloneAppContentAT(PloneAppContent):\n \n@@ -141,6 +156,13 @@ def setUpPloneSite(self, portal):\n     name="PloneAppContentDX:Functional")\n \n \n+# Test layer with a workflow containing non-ascii characters in state titles.\n+PLONE_APP_CONTENT_NON_ASCII_LAYER = NonAsciiLayer()\n+PLONE_APP_CONTENT_NON_ASCII_INTEGRATION_TESTING = IntegrationTesting(\n+    bases=(PLONE_APP_CONTENT_NON_ASCII_LAYER, ),\n+    name="PloneAppContentNonAscii:Integration")\n+\n+\n if HAS_AT:\n     # AT test layers\n     PLONE_APP_CONTENT_AT_FIXTURE = PloneAppContentAT()\ndiff --git a/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml\nnew file mode 100644\nindex 0000000..12fd9c2\n--- /dev/null\n+++ b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml\n@@ -0,0 +1,6 @@\n+<?xml version="1.0"?>\n+<object name="portal_workflow" meta_type="Plone Workflow Tool">\n+\n+    <object name="non-ascii-workflow" meta_type="Workflow" />\n+\n+</object>\ndiff --git a/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml\nnew file mode 100644\nindex 0000000..308dc6a\n--- /dev/null\n+++ b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml\n@@ -0,0 +1,55 @@\n+<?xml version="1.0"?>\n+<dc-workflow xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+             i18n:domain="plone.app.content.tests"\n+             workflow_id="non-ascii-workflow"\n+             title="Workflow for non-ascii characters"\n+             description=""\n+             state_variable="review_state"\n+             initial_state="initial"\n+             i18n:attributes="title">\n+\n+ <permission>View</permission>\n+\n+ <state state_id="initial" title="\xc3\x8fnitial" i18n:attributes="title">\n+  <exit-transition transition_id="to_after"/>\n+  <permission-map name="View permission for testing non-ascii title"\n+                  acquired="False">\n+   <permission-role>Manager</permission-role>\n+  </permission-map>\n+ </state>\n+\n+ <state state_id="after" title="\xc3\x84fter" i18n:attributes="title">\n+  <exit-transition transition_id="to_initial"/>\n+  <permission-map name="View permission for testing non-ascii title"\n+                  acquired="False">\n+   <permission-role>Manager</permission-role>\n+  </permission-map>\n+ </state>\n+\n+ <transition transition_id="to_after" new_state="after"\n+             title="To \xc3\x84fter!"\n+             trigger="USER"\n+             before_script="" after_script=""\n+             i18n:attributes="title">\n+  <action url="%(content_url)s/content_status_modify?workflow_action=to_after"\n+          category="workflow"\n+          i18n:translate="">To \xc3\x84fter!</action>\n+  <guard>\n+   <guard-permission>Modify portal content</guard-permission>\n+  </guard>\n+ </transition>\n+\n+ <transition transition_id="to_initial" new_state="initial"\n+             title="To \xc3\x8fnitial!"\n+             trigger="USER"\n+             before_script="" after_script=""\n+             i18n:attributes="title">\n+  <action url="%(content_url)s/content_status_modify?workflow_action=to_initial"\n+          category="workflow"\n+          i18n:translate="">To \xc3\x8fnitial!</action>\n+  <guard>\n+   <guard-permission>Modify portal content</guard-permission>\n+  </guard>\n+ </transition>\n+\n+</dc-workflow>\ndiff --git a/plone/app/content/tests/profiles/non-ascii-workflow.zcml b/plone/app/content/tests/profiles/non-ascii-workflow.zcml\nnew file mode 100644\nindex 0000000..2f4ff41\n--- /dev/null\n+++ b/plone/app/content/tests/profiles/non-ascii-workflow.zcml\n@@ -0,0 +1,15 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone.app.content.tests">\n+\n+    <genericsetup:registerProfile\n+        name="non-ascii-workflow"\n+        title="plone.app.content.tests: non-ascii-workflow"\n+        directory="non-ascii-workflow-profile"\n+        description=""\n+        provides="Products.GenericSetup.interfaces.EXTENSION"\n+        />\n+\n+</configure>\n+\ndiff --git a/plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py b/plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py\nnew file mode 100644\nindex 0000000..ca94ab2\n--- /dev/null\n+++ b/plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py\n@@ -0,0 +1,57 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.content.testing import PLONE_APP_CONTENT_NON_ASCII_INTEGRATION_TESTING\n+from plone.app.testing import login\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_NAME\n+from plone.dexterity.fti import DexterityFTI\n+from Products.CMFCore.utils import getToolByName\n+from plone.uuid.interfaces import IUUID\n+\n+import unittest\n+import json\n+\n+\n+class TestNonAsciiCharactersWorkflow(unittest.TestCase):\n+\n+    layer = PLONE_APP_CONTENT_NON_ASCII_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        login(self.portal, TEST_USER_NAME)\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+\n+        # create an object having the non-ascii-workflow assigned\n+        portal_types = getToolByName(self.portal, "portal_types")\n+        if \'Document\' not in portal_types.objectIds():\n+            fti = DexterityFTI(\'Document\')\n+            portal_types._setObject(\'Document\', fti)\n+        self.portal.invokeFactory(\'Document\', \'doc\')\n+\n+        # set non-ascii-workflow for Documents\n+        wf_tool = getToolByName(self.portal, \'portal_workflow\')\n+        wf_tool.setChainForPortalTypes([\'Document\'], \'non-ascii-workflow\')\n+\n+    def test_non_ascii_characters_in_workflow_title(self):\n+        wf_tool = getToolByName(self.portal, \'portal_workflow\')\n+        workflow_matching_id = list(filter(\n+                lambda workflow: (\'non-ascii-workflow\' in workflow.id),\n+                wf_tool.getWorkflowsFor(self.portal.doc)))\n+\n+        # Make sure that the non-ascii-workflow was assigned to the Document\n+        self.assertTrue(workflow_matching_id)\n+\n+        # Build POST request to get state title for the Document\n+        documents_uid = IUUID(self.portal.doc)\n+        self.request.form[\'selection\'] = json.dumps(documents_uid)\n+        self.request.form[\'transitions\'] = True\n+        self.request.form[\'render\'] = \'yes\'\n+\n+        try:\n+            # try to do the json request which among other things returns\n+            # the workflow state title containing non-ascii characters.\n+            self.portal.unrestrictedTraverse(\'@@fc-workflow\')()\n+        except UnicodeDecodeError:\n+            self.fail(\'Calling @@fc-workflow raised UnicodeDecodeError \\\n+                       unexpectedly.\')\n'

Repository: plone.app.content


Branch: refs/heads/3.5.x
Date: 2020-01-16T10:02:41+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/282f7b0bbe1211ab88ce5a03b7e6824cae06c036

Merge pull request #192 from 4teamwork/mo/fix_non_ascii_chars_in_workflow_state_title

Fix UnicodeError when there are non ascii chars in workflow state title.

Files changed:
A news/191.bugfix
A plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml
A plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml
A plone/app/content/tests/profiles/non-ascii-workflow.zcml
A plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py
M plone/app/content/browser/contents/workflow.py
M plone/app/content/testing.py

b'diff --git a/news/191.bugfix b/news/191.bugfix\nnew file mode 100644\nindex 0000000..8ee5e00\n--- /dev/null\n+++ b/news/191.bugfix\n@@ -0,0 +1 @@\n+Fix error when having non-ASCII characters in workflow state titles. [busykoala]\ndiff --git a/plone/app/content/browser/contents/workflow.py b/plone/app/content/browser/contents/workflow.py\nindex ffbc358..4aceb0a 100644\n--- a/plone/app/content/browser/contents/workflow.py\n+++ b/plone/app/content/browser/contents/workflow.py\n@@ -2,6 +2,7 @@\n from DateTime import DateTime\n from plone.app.content.browser.contents import ContentsBaseAction\n from plone.app.content.interfaces import IStructureAction\n+from plone.dexterity.utils import safe_unicode\n from Products.CMFCore.interfaces._content import IFolderish\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n@@ -60,7 +61,8 @@ def __call__(self):\n                 for transition in self.pworkflow.getTransitionsFor(obj):\n                     tdata = {\n                         \'id\': transition[\'id\'],\n-                        \'title\': self.context.translate(transition[\'name\'])\n+                        \'title\': self.context.translate(\n+                            safe_unicode(transition[\'name\']))\n                     }\n                     if tdata not in transitions:\n                         transitions.append(tdata)\ndiff --git a/plone/app/content/testing.py b/plone/app/content/testing.py\nindex 792077a..513b465 100644\n--- a/plone/app/content/testing.py\n+++ b/plone/app/content/testing.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FIXTURE\n+from plone.app.testing import applyProfile\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import IntegrationTesting\n from plone.app.testing import PLONE_FIXTURE\n@@ -107,6 +108,20 @@ def setUpPloneSite(self, portal):\n         portal.portal_workflow.setDefaultChain("simple_publication_workflow")\n \n \n+class NonAsciiLayer(PloneSandboxLayer):\n+\n+    def setUpZope(self, app, configurationContext):\n+        import plone.app.content.tests\n+\n+        xmlconfig.file(\'profiles/non-ascii-workflow.zcml\',\n+                       plone.app.content.tests,\n+                       context=configurationContext)\n+\n+    def setUpPloneSite(self, portal):\n+        # applyProfile which has non-ascii characters in state titles\n+        applyProfile(portal, \'plone.app.content.tests:non-ascii-workflow\')\n+\n+\n if HAS_AT:\n     class PloneAppContentAT(PloneAppContent):\n \n@@ -141,6 +156,13 @@ def setUpPloneSite(self, portal):\n     name="PloneAppContentDX:Functional")\n \n \n+# Test layer with a workflow containing non-ascii characters in state titles.\n+PLONE_APP_CONTENT_NON_ASCII_LAYER = NonAsciiLayer()\n+PLONE_APP_CONTENT_NON_ASCII_INTEGRATION_TESTING = IntegrationTesting(\n+    bases=(PLONE_APP_CONTENT_NON_ASCII_LAYER, ),\n+    name="PloneAppContentNonAscii:Integration")\n+\n+\n if HAS_AT:\n     # AT test layers\n     PLONE_APP_CONTENT_AT_FIXTURE = PloneAppContentAT()\ndiff --git a/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml\nnew file mode 100644\nindex 0000000..12fd9c2\n--- /dev/null\n+++ b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows.xml\n@@ -0,0 +1,6 @@\n+<?xml version="1.0"?>\n+<object name="portal_workflow" meta_type="Plone Workflow Tool">\n+\n+    <object name="non-ascii-workflow" meta_type="Workflow" />\n+\n+</object>\ndiff --git a/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml\nnew file mode 100644\nindex 0000000..308dc6a\n--- /dev/null\n+++ b/plone/app/content/tests/profiles/non-ascii-workflow-profile/workflows/non-ascii-workflow/definition.xml\n@@ -0,0 +1,55 @@\n+<?xml version="1.0"?>\n+<dc-workflow xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+             i18n:domain="plone.app.content.tests"\n+             workflow_id="non-ascii-workflow"\n+             title="Workflow for non-ascii characters"\n+             description=""\n+             state_variable="review_state"\n+             initial_state="initial"\n+             i18n:attributes="title">\n+\n+ <permission>View</permission>\n+\n+ <state state_id="initial" title="\xc3\x8fnitial" i18n:attributes="title">\n+  <exit-transition transition_id="to_after"/>\n+  <permission-map name="View permission for testing non-ascii title"\n+                  acquired="False">\n+   <permission-role>Manager</permission-role>\n+  </permission-map>\n+ </state>\n+\n+ <state state_id="after" title="\xc3\x84fter" i18n:attributes="title">\n+  <exit-transition transition_id="to_initial"/>\n+  <permission-map name="View permission for testing non-ascii title"\n+                  acquired="False">\n+   <permission-role>Manager</permission-role>\n+  </permission-map>\n+ </state>\n+\n+ <transition transition_id="to_after" new_state="after"\n+             title="To \xc3\x84fter!"\n+             trigger="USER"\n+             before_script="" after_script=""\n+             i18n:attributes="title">\n+  <action url="%(content_url)s/content_status_modify?workflow_action=to_after"\n+          category="workflow"\n+          i18n:translate="">To \xc3\x84fter!</action>\n+  <guard>\n+   <guard-permission>Modify portal content</guard-permission>\n+  </guard>\n+ </transition>\n+\n+ <transition transition_id="to_initial" new_state="initial"\n+             title="To \xc3\x8fnitial!"\n+             trigger="USER"\n+             before_script="" after_script=""\n+             i18n:attributes="title">\n+  <action url="%(content_url)s/content_status_modify?workflow_action=to_initial"\n+          category="workflow"\n+          i18n:translate="">To \xc3\x8fnitial!</action>\n+  <guard>\n+   <guard-permission>Modify portal content</guard-permission>\n+  </guard>\n+ </transition>\n+\n+</dc-workflow>\ndiff --git a/plone/app/content/tests/profiles/non-ascii-workflow.zcml b/plone/app/content/tests/profiles/non-ascii-workflow.zcml\nnew file mode 100644\nindex 0000000..2f4ff41\n--- /dev/null\n+++ b/plone/app/content/tests/profiles/non-ascii-workflow.zcml\n@@ -0,0 +1,15 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"\n+    i18n_domain="plone.app.content.tests">\n+\n+    <genericsetup:registerProfile\n+        name="non-ascii-workflow"\n+        title="plone.app.content.tests: non-ascii-workflow"\n+        directory="non-ascii-workflow-profile"\n+        description=""\n+        provides="Products.GenericSetup.interfaces.EXTENSION"\n+        />\n+\n+</configure>\n+\ndiff --git a/plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py b/plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py\nnew file mode 100644\nindex 0000000..ca94ab2\n--- /dev/null\n+++ b/plone/app/content/tests/test_non_ascii_characters_in_workflow_state.py\n@@ -0,0 +1,57 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.content.testing import PLONE_APP_CONTENT_NON_ASCII_INTEGRATION_TESTING\n+from plone.app.testing import login\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_NAME\n+from plone.dexterity.fti import DexterityFTI\n+from Products.CMFCore.utils import getToolByName\n+from plone.uuid.interfaces import IUUID\n+\n+import unittest\n+import json\n+\n+\n+class TestNonAsciiCharactersWorkflow(unittest.TestCase):\n+\n+    layer = PLONE_APP_CONTENT_NON_ASCII_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        login(self.portal, TEST_USER_NAME)\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+\n+        # create an object having the non-ascii-workflow assigned\n+        portal_types = getToolByName(self.portal, "portal_types")\n+        if \'Document\' not in portal_types.objectIds():\n+            fti = DexterityFTI(\'Document\')\n+            portal_types._setObject(\'Document\', fti)\n+        self.portal.invokeFactory(\'Document\', \'doc\')\n+\n+        # set non-ascii-workflow for Documents\n+        wf_tool = getToolByName(self.portal, \'portal_workflow\')\n+        wf_tool.setChainForPortalTypes([\'Document\'], \'non-ascii-workflow\')\n+\n+    def test_non_ascii_characters_in_workflow_title(self):\n+        wf_tool = getToolByName(self.portal, \'portal_workflow\')\n+        workflow_matching_id = list(filter(\n+                lambda workflow: (\'non-ascii-workflow\' in workflow.id),\n+                wf_tool.getWorkflowsFor(self.portal.doc)))\n+\n+        # Make sure that the non-ascii-workflow was assigned to the Document\n+        self.assertTrue(workflow_matching_id)\n+\n+        # Build POST request to get state title for the Document\n+        documents_uid = IUUID(self.portal.doc)\n+        self.request.form[\'selection\'] = json.dumps(documents_uid)\n+        self.request.form[\'transitions\'] = True\n+        self.request.form[\'render\'] = \'yes\'\n+\n+        try:\n+            # try to do the json request which among other things returns\n+            # the workflow state title containing non-ascii characters.\n+            self.portal.unrestrictedTraverse(\'@@fc-workflow\')()\n+        except UnicodeDecodeError:\n+            self.fail(\'Calling @@fc-workflow raised UnicodeDecodeError \\\n+                       unexpectedly.\')\n'

