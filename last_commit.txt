Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/4283d85f618fb6f22136715233b8c1a867b84290

open files in binary mode

Files changed:
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_image.py
M plone/app/contenttypes/tests/test_indexes.py
M plone/app/contenttypes/tests/test_webdav.py

b'diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py\nindex 5377c749..ff1a2d32 100644\n--- a/plone/app/contenttypes/tests/test_collection.py\n+++ b/plone/app/contenttypes/tests/test_collection.py\n@@ -37,7 +37,7 @@ def dummy_image():\n     from plone.namedfile.file import NamedBlobImage\n     filename = os.path.join(os.path.dirname(__file__), u\'image.png\')\n     return NamedBlobImage(\n-        data=open(filename, \'r\').read(),\n+        data=open(filename, \'rb\').read(),\n         filename=filename\n     )\n \ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex e86bbe3b..a29b09fe 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -22,7 +22,7 @@ def dummy_image(filename=u\'image.jpg\'):\n     from plone.namedfile.file import NamedBlobImage\n     filename = os.path.join(os.path.dirname(__file__), filename)\n     return NamedBlobImage(\n-        data=open(filename, \'r\').read(),\n+        data=open(filename, \'rb\').read(),\n         filename=filename\n     )\n \ndiff --git a/plone/app/contenttypes/tests/test_indexes.py b/plone/app/contenttypes/tests/test_indexes.py\nindex 52fa7fc4..115b56de 100644\n--- a/plone/app/contenttypes/tests/test_indexes.py\n+++ b/plone/app/contenttypes/tests/test_indexes.py\n@@ -358,7 +358,7 @@ def test_getobjsize_file(self):\n         from plone.namedfile.file import NamedBlobFile\n \n         filename = os.path.join(os.path.dirname(__file__), u\'image.jpg\')\n-        test_file = NamedBlobFile(data=open(filename, \'r\').read(),\n+        test_file = NamedBlobFile(data=open(filename, \'rb\').read(),\n                                   filename=filename)\n \n         primary_field_info = IPrimaryFieldInfo(self.file)\ndiff --git a/plone/app/contenttypes/tests/test_webdav.py b/plone/app/contenttypes/tests/test_webdav.py\nindex 0b516541..a4ee5d33 100644\n--- a/plone/app/contenttypes/tests/test_webdav.py\n+++ b/plone/app/contenttypes/tests/test_webdav.py\n@@ -38,7 +38,7 @@ def test_image_put(self):\n         """Upload an image through webdav."""\n         filename = os.path.join(os.path.dirname(__file__), u\'image.jpg\')\n         request = DAVTestRequest(environ={\n-            \'BODYFILE\': open(filename),\n+            \'BODYFILE\': open(filename, \'rb\'),\n             \'PATH_INFO\': \'/foo/bar/image.jpg\',\n         })\n         self.image.REQUEST = request\n@@ -51,7 +51,7 @@ def test_file_put(self):\n         """Upload a file through webdav."""\n         filename = os.path.join(os.path.dirname(__file__), u\'file.pdf\')\n         request = DAVTestRequest(environ={\n-            \'BODYFILE\': open(filename),\n+            \'BODYFILE\': open(filename, \'rb\'),\n             \'PATH_INFO\': \'/foo/bar/file.pdf\',\n         })\n         self.file.REQUEST = request\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/07f884b34ed65a7476efe3d7412e11f342ea1fc0

do not concatenate None to a string

Files changed:
M plone/app/contenttypes/indexers.py

b'diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py\nindex 2273ae41..625db434 100644\n--- a/plone/app/contenttypes/indexers.py\n+++ b/plone/app/contenttypes/indexers.py\n@@ -137,7 +137,10 @@ def SearchableText_file(obj):\n \n @indexer(ILink)\n def SearchableText_link(obj):\n-    return _unicode_save_string_concat(SearchableText(obj), obj.remoteUrl)\n+    if obj.remoteUrl:\n+        return _unicode_save_string_concat(SearchableText(obj), obj.remoteUrl)\n+    else:\n+        SearchableText(obj)\n \n \n @indexer(IFolder)\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/ecd0df3e94253d986ae78d4867d3d4d9f4d8cfab

py3 has no assertItemsEqual

Files changed:
M plone/app/contenttypes/tests/test_content_profile.py

b"diff --git a/plone/app/contenttypes/tests/test_content_profile.py b/plone/app/contenttypes/tests/test_content_profile.py\nindex befdee18..86d33d06 100644\n--- a/plone/app/contenttypes/tests/test_content_profile.py\n+++ b/plone/app/contenttypes/tests/test_content_profile.py\n@@ -174,5 +174,5 @@ def test_news_aggregator_settings(self):\n         collection = self.portal['news']['aggregator']\n         self.assertEqual(collection.sort_on, u'effective')\n         self.assertEqual(collection.sort_reversed, True)\n-        self.assertItemsEqual(collection.query, query)\n+        self.assertEqual(collection.query, query)\n         self.assertEqual(collection.getLayout(), 'summary_view')\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8faec64161ea479cb6234b5d2b93a0c937a631f3

fix link-redirect in py3

Files changed:
M plone/app/contenttypes/browser/link_redirect_view.py

b"diff --git a/plone/app/contenttypes/browser/link_redirect_view.py b/plone/app/contenttypes/browser/link_redirect_view.py\nindex b9c385f3..3287fd2e 100644\n--- a/plone/app/contenttypes/browser/link_redirect_view.py\n+++ b/plone/app/contenttypes/browser/link_redirect_view.py\n@@ -7,6 +7,8 @@\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from zope.component import getUtility\n \n+import six\n+\n \n # links starting with these URL scheme should not be redirected to\n NON_REDIRECTABLE_URL_SCHEMES = [\n@@ -53,8 +55,10 @@ def __call__(self):\n             and not self._url_uses_scheme(NON_REDIRECTABLE_URL_SCHEMES)\n \n         if redirect_links and not can_edit:\n-            return self.request.RESPONSE.redirect(\n-                self.absolute_target_url().encode('utf-8'))\n+            target_url = self.absolute_target_url()\n+            if six.PY2:\n+                target_url = target_url.encode('utf-8')\n+            return self.request.RESPONSE.redirect(target_url)\n         else:\n             return self.index()\n \n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Thomas Lotze (tlotze) <thomas@thomas-lotze.net>
Commit: https://github.com/plone/plone.app.contenttypes/commit/4609a775d82d6de81e7a83b8f2b6dfc99910a810

update deprecated assert method calls

Files changed:
M plone/app/contenttypes/tests/test_collection.py
M plone/app/contenttypes/tests/test_document.py
M plone/app/contenttypes/tests/test_event.py
M plone/app/contenttypes/tests/test_file.py
M plone/app/contenttypes/tests/test_folder.py
M plone/app/contenttypes/tests/test_image.py
M plone/app/contenttypes/tests/test_link.py
M plone/app/contenttypes/tests/test_news_item.py

b'diff --git a/plone/app/contenttypes/tests/test_collection.py b/plone/app/contenttypes/tests/test_collection.py\nindex ff1a2d32..b8467b92 100644\n--- a/plone/app/contenttypes/tests/test_collection.py\n+++ b/plone/app/contenttypes/tests/test_collection.py\n@@ -115,7 +115,7 @@ def test_schema(self):\n     def test_fti(self):\n         fti = queryUtility(IDexterityFTI,\n                            name=\'Collection\')\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(IDexterityFTI,\ndiff --git a/plone/app/contenttypes/tests/test_document.py b/plone/app/contenttypes/tests/test_document.py\nindex 62c79f87..81655a29 100644\n--- a/plone/app/contenttypes/tests/test_document.py\n+++ b/plone/app/contenttypes/tests/test_document.py\n@@ -39,7 +39,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Document\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_event.py b/plone/app/contenttypes/tests/test_event.py\nindex f0c50f64..40b53ed7 100644\n--- a/plone/app/contenttypes/tests/test_event.py\n+++ b/plone/app/contenttypes/tests/test_event.py\n@@ -40,7 +40,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Event\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_file.py b/plone/app/contenttypes/tests/test_file.py\nindex 147aaa21..e58bd90a 100644\n--- a/plone/app/contenttypes/tests/test_file.py\n+++ b/plone/app/contenttypes/tests/test_file.py\n@@ -43,7 +43,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'File\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_folder.py b/plone/app/contenttypes/tests/test_folder.py\nindex fa3717a4..f8566534 100644\n--- a/plone/app/contenttypes/tests/test_folder.py\n+++ b/plone/app/contenttypes/tests/test_folder.py\n@@ -38,7 +38,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Folder\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex a29b09fe..a83367a2 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -49,7 +49,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Image\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\n@@ -110,7 +110,7 @@ def test_image_view(self):\n     def test_svg_image(self):\n         self.image.image = dummy_image(u\'image.svg\')\n         scale = self.image.restrictedTraverse(\'@@images\')\n-        self.assertRegexpMatches(\n+        self.assertRegex(\n             scale.scale(\'image\', scale=\'large\').tag(),\n             r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="768" width="768" />\'  # noqa E501\n         )\ndiff --git a/plone/app/contenttypes/tests/test_link.py b/plone/app/contenttypes/tests/test_link.py\nindex 69e7324a..5f729ba2 100644\n--- a/plone/app/contenttypes/tests/test_link.py\n+++ b/plone/app/contenttypes/tests/test_link.py\n@@ -48,7 +48,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'Link\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\ndiff --git a/plone/app/contenttypes/tests/test_news_item.py b/plone/app/contenttypes/tests/test_news_item.py\nindex b1277ab6..a2299aa3 100644\n--- a/plone/app/contenttypes/tests/test_news_item.py\n+++ b/plone/app/contenttypes/tests/test_news_item.py\n@@ -47,7 +47,7 @@ def test_fti(self):\n             IDexterityFTI,\n             name=\'News Item\'\n         )\n-        self.assertNotEquals(None, fti)\n+        self.assertNotEqual(None, fti)\n \n     def test_factory(self):\n         fti = queryUtility(\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/9d8c848ad82ef26d64c55a798ecb131fd6dd2e60

do not ruin bytes in py3

Files changed:
M plone/app/contenttypes/indexers.py

b"diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py\nindex 625db434..afea3e15 100644\n--- a/plone/app/contenttypes/indexers.py\n+++ b/plone/app/contenttypes/indexers.py\n@@ -113,7 +113,9 @@ def SearchableText_file(obj):\n     if transforms._findPath(mimetype, 'text/plain') is None:\n         # check if there is a valid transform available first\n         return SearchableText(obj)\n-    value = str(primary_field.value.data)\n+    value = primary_field.value.data\n+    if six.PY2:\n+        value = str(value)\n     filename = primary_field.value.filename\n     try:\n         transformed_value = transforms.convertTo('text/plain', value,\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1756df9a8956b3e3c82ec2588091bab90edc5979

test test-indexing with unicode

Files changed:
M plone/app/contenttypes/tests/test_indexes.py

b"diff --git a/plone/app/contenttypes/tests/test_indexes.py b/plone/app/contenttypes/tests/test_indexes.py\nindex 115b56de..d703584f 100644\n--- a/plone/app/contenttypes/tests/test_indexes.py\n+++ b/plone/app/contenttypes/tests/test_indexes.py\n@@ -244,6 +244,28 @@ def test_raw_text_searchable_text_index(self):\n         self.assertEqual(index_data['SearchableText'].count('script'), 0)\n         self.assertEqual(index_data['SearchableText'].count('text'), 0)\n \n+    def test_file_fulltext_in_searchable_text_plain(self):\n+        from plone.namedfile.file import NamedBlobFile\n+        data = ('Lorem ipsum. K\xc3\xb6ln <!-- ...oder M\xc3\xbcnchen, das ist hier die '\n+                'Frage. -->')\n+        test_file = NamedBlobFile(data=data, filename=u'string.txt')\n+\n+        primary_field_info = IPrimaryFieldInfo(self.file)\n+        primary_field_info.field.set(self.file, test_file)\n+        self.file.reindexObject()\n+\n+        brains = self.catalog.searchResults(dict(\n+            SearchableText=u'Lorem ipsum'))\n+        self.assertEqual(len(brains), 1)\n+\n+        brains = self.catalog.searchResults(dict(\n+            SearchableText=u'K\xc3\xb6ln'))\n+        self.assertEqual(len(brains), 1)\n+\n+        brains = self.catalog.searchResults(dict(\n+            SearchableText=u'M\xc3\xbcnchen'))\n+        self.assertEqual(len(brains), 1)\n+\n     def test_file_fulltext_in_searchable_text_index_string(self):\n         from plone.namedfile.file import NamedBlobFile\n         data = ('Lorem ipsum. K\xc3\xb6ln <!-- ...oder M\xc3\xbcnchen, das ist hier die '\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/87b44ca52198f7f0e21474b22eadad035ea73cbb

setDefaultRoles is deprecated. addPermission from AccessControl.Permission is used.

Files changed:
M plone/app/contenttypes/permissions.py

b"diff --git a/plone/app/contenttypes/permissions.py b/plone/app/contenttypes/permissions.py\nindex 486ede08..cacfbba0 100644\n--- a/plone/app/contenttypes/permissions.py\n+++ b/plone/app/contenttypes/permissions.py\n@@ -1,8 +1,7 @@\n # -*- coding: utf-8 -*-\n+from AccessControl.Permission import addPermission\n from AccessControl.SecurityInfo import ModuleSecurityInfo\n from plone.app.contenttypes.utils import DEFAULT_TYPES\n-from Products.CMFCore.permissions import setDefaultRoles\n-\n \n security = ModuleSecurityInfo('plone.app.contenttypes')\n \n@@ -14,7 +13,7 @@\n     permid = 'Add' + typename\n     permname = 'plone.app.contenttypes: Add ' + typename\n     security.declarePublic(permid)\n-    setDefaultRoles(permname, TYPE_ROLES)\n+    addPermission(permname, default_roles=TYPE_ROLES)\n \n AddCollection = 'plone.app.contenttypes: Add Collection'\n AddDocument = 'plone.app.contenttypes: Add Document'\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: hvelarde (hvelarde) <hector.velarde@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c45dee6a59b46aeffbeda85a58c2a7116b1c77dc

Fix exception-message-attribute

Files changed:
M plone/app/contenttypes/tests/test_migration_browser.py

b"diff --git a/plone/app/contenttypes/tests/test_migration_browser.py b/plone/app/contenttypes/tests/test_migration_browser.py\nindex d98d7c70..0b7c389c 100644\n--- a/plone/app/contenttypes/tests/test_migration_browser.py\n+++ b/plone/app/contenttypes/tests/test_migration_browser.py\n@@ -126,6 +126,6 @@ def test_install_dx_type_if_needed_wrong_type_name(self):\n             installTypeIfNeeded('Unknown')\n         except KeyError as e:\n             self.assertEqual(\n-                e.message,\n+                str(e),\n                 'Unknown is not one of the default types'\n             )\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: hvelarde (hvelarde) <hector.velarde@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/be1ef7424c435b1963047c763ba93cd376ee1b52

Fix old-division

Files changed:
M plone/app/contenttypes/migration/browser.py

b'diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py\nindex b02ed140..167c1b16 100644\n--- a/plone/app/contenttypes/migration/browser.py\n+++ b/plone/app/contenttypes/migration/browser.py\n@@ -481,7 +481,7 @@ def objects_to_be_migrated(self):\n     def estimated_migration_time(self):\n         """ Return the estimated migration time """\n         total_time = self.objects_to_be_migrated() * ONE_OBJECT_MIGRATION_TIME\n-        hours, remainder = divmod(total_time / 1000, 3600)\n+        hours, remainder = divmod(total_time // 1000, 3600)\n         minutes, seconds = divmod(remainder, 60)\n         return {\n             \'hours\': hours,\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: hvelarde (hvelarde) <hector.velarde@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b834504526a47abcb71b654efe3e0e9e6c69ab5d

Fix dict-keys-not-iterating

Files changed:
M plone/app/contenttypes/migration/browser.py
M plone/app/contenttypes/migration/topics.py

b"diff --git a/plone/app/contenttypes/migration/browser.py b/plone/app/contenttypes/migration/browser.py\nindex 167c1b16..13a2d8f0 100644\n--- a/plone/app/contenttypes/migration/browser.py\n+++ b/plone/app/contenttypes/migration/browser.py\n@@ -375,7 +375,7 @@ def updateWidgets(self):\n         # Only override when rendering the form. When you unselect\n         # everything the value will be [], not ())\n         if ct_widget.value == ():\n-            ct_widget.value = ATCT_LIST.keys()\n+            ct_widget.value = list(ATCT_LIST)\n             # Call update again since the list-items checked-states are\n             # assigned in z3c.form.browser.checkbox.CheckBoxWidget.update\n             # using the widget.value.\ndiff --git a/plone/app/contenttypes/migration/topics.py b/plone/app/contenttypes/migration/topics.py\nindex fb021fa9..d843cde9 100644\n--- a/plone/app/contenttypes/migration/topics.py\n+++ b/plone/app/contenttypes/migration/topics.py\n@@ -573,7 +573,7 @@ def last_migrate_layout(self):\n             return\n \n         old_layout = self.old.getLayout() or getattr(self.old, 'layout', None)\n-        if old_layout in LISTING_VIEW_MAPPING.keys():\n+        if old_layout in LISTING_VIEW_MAPPING:\n             self.new.setLayout(LISTING_VIEW_MAPPING[old_layout])\n \n \n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/890d8506bdf8185a0bfe4030a737c225af481e1f

More test fixes

Files changed:
M plone/app/contenttypes/tests/test_collection_rss.py
M plone/app/contenttypes/tests/test_image.py
M plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py

b'diff --git a/plone/app/contenttypes/tests/test_collection_rss.py b/plone/app/contenttypes/tests/test_collection_rss.py\nindex ed17d42c..caa07cf2 100644\n--- a/plone/app/contenttypes/tests/test_collection_rss.py\n+++ b/plone/app/contenttypes/tests/test_collection_rss.py\n@@ -10,10 +10,8 @@\n from Products.CMFPlone.interfaces.syndication import ISiteSyndicationSettings\n from zope.component import getUtility\n \n-import unittest\n-\n-\n import six\n+import unittest\n \n \n query = [{\n@@ -69,4 +67,4 @@ def test_view(self):\n     def test_view_is_valid(self):\n         view = self.collection.restrictedTraverse(\'@@RSS\')\n         result = self.assertIsValidRSS(view())\n-        self.assertTrue(\'Collection Test Page\' in etree.tostring(result))\n+        self.assertTrue(b\'Collection Test Page\' in etree.tostring(result))\ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex a83367a2..1ab94e94 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -15,6 +15,7 @@\n \n import io\n import os.path\n+import six\n import unittest\n \n \n@@ -72,6 +73,15 @@ class ImageViewIntegrationTest(unittest.TestCase):\n \n     layer = PLONE_APP_CONTENTTYPES_INTEGRATION_TESTING\n \n+    if six.PY2:\n+        def assertRegex(self, value, pattern):\n+            # Python 2 backwards compatibility\n+            import re\n+            if not re.search(pattern, value):\n+                raise self.failureException(\n+                    \'%r not found in %s\' % (pattern, value)\n+                )\n+\n     def setUp(self):\n         self.portal = self.layer[\'portal\']\n         self.request = self.layer[\'request\']\n@@ -112,7 +122,7 @@ def test_svg_image(self):\n         scale = self.image.restrictedTraverse(\'@@images\')\n         self.assertRegex(\n             scale.scale(\'image\', scale=\'large\').tag(),\n-            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="768" width="768" />\'  # noqa E501\n+            r\'<img src="http://nohost/plone/image/@@images/[a-z0-9--]*.svg" alt="My Image" title="My Image" height="768" width="768" />\'  # noqa: E501\n         )\n \n \ndiff --git a/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py b/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py\nindex ecd92f12..b494254b 100644\n--- a/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py\n+++ b/plone/app/contenttypes/tests/test_upgrades_migrate_to_pa_event.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from datetime import datetime\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_MIGRATION_TESTING  # noqa\n+from plone.app.contenttypes.testing import TEST_MIGRATION\n from plone.app.contenttypes.tests.oldtypes import create1_0EventType\n from plone.app.testing import applyProfile\n from plone.app.testing import login\n@@ -73,6 +74,10 @@ def createOldEvent(self, container, id, start_date, end_date):\n             outputMimeType=\'text/x-html-safe\'\n         )\n \n+    @unittest.skipUnless(\n+        TEST_MIGRATION,\n+        \'Migration tests require ATContentTypes\',\n+    )\n     def test_pact_1_0_dxevent_is_migrated(self):\n         def getNewEventDetail(obj):\n             acc = IEventAccessor(obj)\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b37fc5f8c86e6d8092760650e7205b7e454ce665

return 0 if there is no size

Files changed:
M plone/app/contenttypes/content.py

b"diff --git a/plone/app/contenttypes/content.py b/plone/app/contenttypes/content.py\nindex 053262d5..766fa379 100644\n--- a/plone/app/contenttypes/content.py\n+++ b/plone/app/contenttypes/content.py\n@@ -100,7 +100,7 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         return response\n \n     def get_size(self):\n-        return getattr(self.file, 'size', None)\n+        return getattr(self.file, 'size', 0)\n \n     def content_type(self):\n         return getattr(self.file, 'contentType', None)\n@@ -134,7 +134,7 @@ def PUT(self, REQUEST=None, RESPONSE=None):\n         return response\n \n     def get_size(self):\n-        return getattr(self.image, 'size', None)\n+        return getattr(self.image, 'size', 0)\n \n     def content_type(self):\n         return getattr(self.image, 'contentType', None)\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f0e646d3389bd2d1d1efa4db028e7c942673ac2e

add changenote

Files changed:
M CHANGES.rst
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 3d683f9a..c1fa3f92 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -42,6 +42,9 @@ Bug fixes:\n - pep8 cleanup.\n   [iham]\n \n+- Fix various issues in py3\n+  [pbauer]\n+\n \n 1.4.11 (2018-06-18)\n -------------------\ndiff --git a/setup.py b/setup.py\nindex df00e59c..a4b2f6f6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -27,9 +27,12 @@ def read(*rnames):\n           "Development Status :: 6 - Mature",\n           "Framework :: Plone",\n           "Framework :: Plone :: 5.1",\n+          "Framework :: Plone :: 5.2",\n           "License :: OSI Approved :: GNU General Public License (GPL)",\n           "Programming Language :: Python",\n           "Programming Language :: Python :: 2.7",\n+          "Programming Language :: Python :: 3.6",\n+          "Programming Language :: Python :: 3.7",\n       ],\n       keywords=\'plone content types dexterity\',\n       author=\'Plone Foundation\',\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/339f9fc661e86e50cd2ad2b7576c32b628d66200

fix and simplify test

Files changed:
M plone/app/contenttypes/tests/test_migration_browser.py

b"diff --git a/plone/app/contenttypes/tests/test_migration_browser.py b/plone/app/contenttypes/tests/test_migration_browser.py\nindex 0b7c389c..f36432a1 100644\n--- a/plone/app/contenttypes/tests/test_migration_browser.py\n+++ b/plone/app/contenttypes/tests/test_migration_browser.py\n@@ -121,11 +121,9 @@ def test_install_dx_type_if_needed(self):\n \n     def test_install_dx_type_if_needed_wrong_type_name(self):\n         from plone.app.contenttypes.migration.utils import installTypeIfNeeded\n-        self.assertRaises(KeyError, installTypeIfNeeded, ['Unknown'])\n-        try:\n+        with self.assertRaises(KeyError) as e:\n             installTypeIfNeeded('Unknown')\n-        except KeyError as e:\n-            self.assertEqual(\n-                str(e),\n-                'Unknown is not one of the default types'\n-            )\n+        self.assertEqual(\n+            e.args[0],\n+            'Unknown is not one of the default types'\n+        )\n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-09-17T06:16:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/fa98935df8e92978e73160f16ef182d91f38e272

fix test

Files changed:
M plone/app/contenttypes/tests/test_migration_browser.py

b"diff --git a/plone/app/contenttypes/tests/test_migration_browser.py b/plone/app/contenttypes/tests/test_migration_browser.py\nindex f36432a1..f9e4e1c3 100644\n--- a/plone/app/contenttypes/tests/test_migration_browser.py\n+++ b/plone/app/contenttypes/tests/test_migration_browser.py\n@@ -124,6 +124,6 @@ def test_install_dx_type_if_needed_wrong_type_name(self):\n         with self.assertRaises(KeyError) as e:\n             installTypeIfNeeded('Unknown')\n         self.assertEqual(\n-            e.args[0],\n+            e.exception.args[0],\n             'Unknown is not one of the default types'\n         )\n"

