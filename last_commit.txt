Repository: plone.autoform


Branch: refs/heads/master
Date: 2018-09-18T15:24:26+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.autoform/commit/a7a9ca54c69747f576e1751b0e129b5d1ca4a31f

fix sorting when group.order is None

Files changed:
M plone/autoform/base.py

b"diff --git a/plone/autoform/base.py b/plone/autoform/base.py\nindex 7addd53..ba7a740 100644\n--- a/plone/autoform/base.py\n+++ b/plone/autoform/base.py\n@@ -259,4 +259,7 @@ def _process_field_moves(self, rules):\n             self._process_field_moves(rule.get('with', {}))\n \n     def _process_group_order(self):\n-        self.groups.sort(key=attrgetter('order'))\n+        try:\n+            self.groups.sort(key=attrgetter('order'))\n+        except TypeError:\n+            pass\n"

Repository: plone.autoform


Branch: refs/heads/master
Date: 2018-09-18T15:24:26+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.autoform/commit/64f4d7ddeff02f1a0fe29ddd65fa762f40d79b77

fix check for exception-message for py3

Files changed:
M plone/autoform/base.py

b"diff --git a/plone/autoform/base.py b/plone/autoform/base.py\nindex ba7a740..0d3a337 100644\n--- a/plone/autoform/base.py\n+++ b/plone/autoform/base.py\n@@ -11,6 +11,7 @@\n from z3c.form.util import expandPrefix\n \n import logging\n+import six\n \n \n logger = logging.getLogger(__name__)\n@@ -242,9 +243,13 @@ def _process_field_moves(self, rules):\n                 try:\n                     move(self, name, before=before, after=after, prefix=prefix)\n                 except KeyError as e:\n+                    if six.PY2:\n+                        message = e.message\n+                    else:\n+                        message = e.args[0]\n                     if (\n-                        e.message.startswith('Field ') and\n-                        e.message.endswith(' not found')\n+                        message.startswith('Field ') and\n+                        message.endswith(' not found')\n                     ):\n                         # The relative_to field doesn't exist\n                         logger.warning(\n"

Repository: plone.autoform


Branch: refs/heads/master
Date: 2018-09-18T15:24:26+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.autoform/commit/e5b403b518bc758c81622d123b54cb9b5f9ed67b

fix some tests for py3

Files changed:
M plone/autoform/tests/test_supermodel_handler.py

b'diff --git a/plone/autoform/tests/test_supermodel_handler.py b/plone/autoform/tests/test_supermodel_handler.py\nindex 0044458..c8bd266 100644\n--- a/plone/autoform/tests/test_supermodel_handler.py\n+++ b/plone/autoform/tests/test_supermodel_handler.py\n@@ -353,9 +353,9 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field><ns0:widget\'\n-            \' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n-            \' type="foo"/></field>\'\n+            b\'<field><ns0:widget\'\n+            b\' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n+            b\' type="foo"/></field>\'\n         )\n \n     def test_write_parameterized_widget_default(self):\n@@ -372,7 +372,7 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field/>\'\n+            b\'<field/>\'\n         )\n \n     def test_write_parameterized_widget_with_handler(self):\n@@ -389,12 +389,12 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field><ns0:widget\'\n-            \' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n-            \' type="plone.autoform.tests.test_supermodel_handler.\'\n-            \'DummyWidget">\'\n-            \'<klass>custom</klass>\'\n-            \'</ns0:widget></field>\')\n+            b\'<field><ns0:widget\'\n+            b\' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n+            b\' type="plone.autoform.tests.test_supermodel_handler.\'\n+            b\'DummyWidget">\'\n+            b\'<klass>custom</klass>\'\n+            b\'</ns0:widget></field>\')\n \n     def test_write_parameterized_widget_default_with_handler(self):\n         from plone.autoform.widgets import ParameterizedWidget\n@@ -410,9 +410,9 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field><ns0:widget\'\n-            \' xmlns:ns0="http://namespaces.plone.org/supermodel/form">\'\n-            \'<klass>custom</klass></ns0:widget></field>\')\n+            b\'<field><ns0:widget\'\n+            b\' xmlns:ns0="http://namespaces.plone.org/supermodel/form">\'\n+            b\'<klass>custom</klass></ns0:widget></field>\')\n \n \n class TestSecuritySchema(unittest.TestCase):\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2018-09-18T15:24:26+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.autoform/commit/ee53b27627126e52e003b90f66803ee066f0a06f

fix doctests in py3

Files changed:
M plone/autoform/autoform.rst
M plone/autoform/supermodel.txt
M plone/autoform/tests/subform.txt
M plone/autoform/tests/test_doctests.py
M plone/autoform/view.txt

b'diff --git a/plone/autoform/autoform.rst b/plone/autoform/autoform.rst\nindex 6251cf8..c57e1a8 100644\n--- a/plone/autoform/autoform.rst\n+++ b/plone/autoform/autoform.rst\n@@ -44,7 +44,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests::\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \n@@ -313,9 +314,9 @@ has taken the label and description from the first definition::\n     >>> len(test_form.groups)\n     1\n     >>> test_form.groups[0].label\n-    u\'Fieldset one\'\n+    \'Fieldset one\'\n     >>> test_form.groups[0].description\n-    u\'Description of fieldset one\'\n+    \'Description of fieldset one\'\n     >>> test_form.groups[0].fields.keys()\n     [\'three\', \'IOtherSchema.three\']\n \ndiff --git a/plone/autoform/supermodel.txt b/plone/autoform/supermodel.txt\nindex 3fec8a0..d624af6 100644\n--- a/plone/autoform/supermodel.txt\n+++ b/plone/autoform/supermodel.txt\n@@ -19,7 +19,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests:\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \ndiff --git a/plone/autoform/tests/subform.txt b/plone/autoform/tests/subform.txt\nindex 6a681a4..a2d2864 100644\n--- a/plone/autoform/tests/subform.txt\n+++ b/plone/autoform/tests/subform.txt\n@@ -32,7 +32,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests:\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \ndiff --git a/plone/autoform/tests/test_doctests.py b/plone/autoform/tests/test_doctests.py\nindex 271d8a4..1f8262b 100644\n--- a/plone/autoform/tests/test_doctests.py\n+++ b/plone/autoform/tests/test_doctests.py\n@@ -4,6 +4,8 @@\n from plone.testing.zca import UNIT_TESTING\n \n import doctest\n+import re\n+import six\n import unittest\n \n \n@@ -15,12 +17,21 @@\n ]\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+            # want = re.sub("b\'(.*?)\'", "\'\\\\1\'", want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     tests = [\n         layered(\n             doctest.DocFileSuite(\n                 test_file,\n                 optionflags=optionflags,\n+                checker=Py23DocChecker(),\n             ),\n             layer=UNIT_TESTING,\n         )\ndiff --git a/plone/autoform/view.txt b/plone/autoform/view.txt\nindex ea2c002..9264f5a 100644\n--- a/plone/autoform/view.txt\n+++ b/plone/autoform/view.txt\n@@ -15,7 +15,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests:\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \n@@ -79,7 +80,7 @@ set up.\n     >>> context.summary = u"Summary"\n \n     >>> view = TestView(context, request)\n-    >>> print view()\n+    >>> print(view())\n     <div>My title widget says\n         <span id="form-widgets-title"\n               class="text-widget...textline-field">Test title</span>\n@@ -96,9 +97,10 @@ updated, we have access to widgets in the default fieldset:\n There is also a shortcut to allow access to any widget by (possibly prefixed)\n name:\n \n-    >>> view.w.items()\n-    [(\'body\', <TextAreaWidget \'form.widgets.body\'>),\n-     (\'ISecondarySchema.summary\', <TextAreaWidget \'form.widgets.ISecondarySchema.summary\'>),\n+    >>> items = sorted(list(view.w.items()))\n+    >>> items\n+    [(\'ISecondarySchema.summary\', <TextAreaWidget \'form.widgets.ISecondarySchema.summary\'>),\n+     (\'body\', <TextAreaWidget \'form.widgets.body\'>),\n      (\'title\', <TextWidget \'form.widgets.title\'>)]\n \n You can also see fieldsets (groups) either in order:\n@@ -108,7 +110,7 @@ You can also see fieldsets (groups) either in order:\n \n or looked up by name:\n \n-    >>> view.fieldsets.items()\n+    >>> list(view.fieldsets.items())\n     [(\'secondary\', <plone.z3cform.fieldsets.group.Group object at ...>)]\n \n Note how the schema name is used as a prefix to all additional schemata. If\n@@ -117,7 +119,8 @@ you wish to flatten the namespace, you can set ignorePrefix to true:\n     >>> view = TestView(context, request)\n     >>> view.ignorePrefix = True\n     >>> view.update()\n-    >>> view.w.items()\n+    >>> items = sorted(view.w.items())\n+    >>> items\n     [(\'body\', <TextAreaWidget \'form.widgets.body\'>),\n      (\'summary\', <TextAreaWidget \'form.widgets.summary\'>),\n      (\'title\', <TextWidget \'form.widgets.title\'>)]\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2018-09-18T15:24:26+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.autoform/commit/316b00e05904d607b04f4ab1b86669e8e4e8bf18

fix test in py3

Files changed:
M plone/autoform/supermodel.txt

b"diff --git a/plone/autoform/supermodel.txt b/plone/autoform/supermodel.txt\nindex d624af6..c823ed5 100644\n--- a/plone/autoform/supermodel.txt\n+++ b/plone/autoform/supermodel.txt\n@@ -97,7 +97,7 @@ The interface defined in the model should now have the relevant form data:\n     [(<InterfaceClass zope.interface.Interface>, 'one', 'true'), (<InterfaceClass z3c.form.interfaces.IForm>, 'three', 'true'), (<InterfaceClass z3c.form.interfaces.IEditForm>, 'three', 'false')]\n     >>> model.schema.getTaggedValue(ORDER_KEY)\n     [('one', 'after', 'two'), ('three', 'before', 'two')]\n-    >>> model.schema.getTaggedValue(MODES_KEY)\n+    >>> sorted(model.schema.getTaggedValue(MODES_KEY))\n     [(<InterfaceClass z3c.form.interfaces.IEditForm>, 'three', 'input'), (<InterfaceClass zope.interface.Interface>, 'two', 'hidden')]\n     >>> model.schema.getTaggedValue(READ_PERMISSIONS_KEY)\n     {'one': 'zope2.View'}\n"

Repository: plone.autoform


Branch: refs/heads/master
Date: 2018-09-18T15:24:54+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.autoform/commit/2c45d4b079634be7965ae03914ccbd881e6449c7

add changenote and classifiers

Files changed:
M CHANGES.rst
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex fdcb184..affefdc 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,7 +10,8 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Add support for python 3\n+  [pbauer]\n \n Bug fixes:\n \ndiff --git a/setup.py b/setup.py\nindex fb248f6..4dd28bb 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -23,9 +23,12 @@ def read(*rnames):\n     classifiers=[\n         "Framework :: Plone",\n         "Framework :: Plone :: 5.1",\n+        "Framework :: Plone :: 5.2",\n         "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 2.7",\n+        "Programming Language :: Python :: 3.6",\n+        "Programming Language :: Python :: 3.7",\n         "Topic :: Software Development :: Libraries :: Python Modules",\n     ],\n     keywords=\'plone form z3c.form\',\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2018-09-18T19:55:57+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.autoform/commit/dec28e5cc89e0b006878c6fff3dbb62041f92ee0

Merge pull request #34 from plone/python3

fix sorting when group.order is None

Files changed:
M CHANGES.rst
M plone/autoform/autoform.rst
M plone/autoform/base.py
M plone/autoform/supermodel.txt
M plone/autoform/tests/subform.txt
M plone/autoform/tests/test_doctests.py
M plone/autoform/tests/test_supermodel_handler.py
M plone/autoform/view.txt
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex fdcb184..affefdc 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,7 +10,8 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Add support for python 3\n+  [pbauer]\n \n Bug fixes:\n \ndiff --git a/plone/autoform/autoform.rst b/plone/autoform/autoform.rst\nindex 6251cf8..c57e1a8 100644\n--- a/plone/autoform/autoform.rst\n+++ b/plone/autoform/autoform.rst\n@@ -44,7 +44,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests::\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \n@@ -313,9 +314,9 @@ has taken the label and description from the first definition::\n     >>> len(test_form.groups)\n     1\n     >>> test_form.groups[0].label\n-    u\'Fieldset one\'\n+    \'Fieldset one\'\n     >>> test_form.groups[0].description\n-    u\'Description of fieldset one\'\n+    \'Description of fieldset one\'\n     >>> test_form.groups[0].fields.keys()\n     [\'three\', \'IOtherSchema.three\']\n \ndiff --git a/plone/autoform/base.py b/plone/autoform/base.py\nindex 7addd53..0d3a337 100644\n--- a/plone/autoform/base.py\n+++ b/plone/autoform/base.py\n@@ -11,6 +11,7 @@\n from z3c.form.util import expandPrefix\n \n import logging\n+import six\n \n \n logger = logging.getLogger(__name__)\n@@ -242,9 +243,13 @@ def _process_field_moves(self, rules):\n                 try:\n                     move(self, name, before=before, after=after, prefix=prefix)\n                 except KeyError as e:\n+                    if six.PY2:\n+                        message = e.message\n+                    else:\n+                        message = e.args[0]\n                     if (\n-                        e.message.startswith(\'Field \') and\n-                        e.message.endswith(\' not found\')\n+                        message.startswith(\'Field \') and\n+                        message.endswith(\' not found\')\n                     ):\n                         # The relative_to field doesn\'t exist\n                         logger.warning(\n@@ -259,4 +264,7 @@ def _process_field_moves(self, rules):\n             self._process_field_moves(rule.get(\'with\', {}))\n \n     def _process_group_order(self):\n-        self.groups.sort(key=attrgetter(\'order\'))\n+        try:\n+            self.groups.sort(key=attrgetter(\'order\'))\n+        except TypeError:\n+            pass\ndiff --git a/plone/autoform/supermodel.txt b/plone/autoform/supermodel.txt\nindex 3fec8a0..c823ed5 100644\n--- a/plone/autoform/supermodel.txt\n+++ b/plone/autoform/supermodel.txt\n@@ -19,7 +19,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests:\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \n@@ -96,7 +97,7 @@ The interface defined in the model should now have the relevant form data:\n     [(<InterfaceClass zope.interface.Interface>, \'one\', \'true\'), (<InterfaceClass z3c.form.interfaces.IForm>, \'three\', \'true\'), (<InterfaceClass z3c.form.interfaces.IEditForm>, \'three\', \'false\')]\n     >>> model.schema.getTaggedValue(ORDER_KEY)\n     [(\'one\', \'after\', \'two\'), (\'three\', \'before\', \'two\')]\n-    >>> model.schema.getTaggedValue(MODES_KEY)\n+    >>> sorted(model.schema.getTaggedValue(MODES_KEY))\n     [(<InterfaceClass z3c.form.interfaces.IEditForm>, \'three\', \'input\'), (<InterfaceClass zope.interface.Interface>, \'two\', \'hidden\')]\n     >>> model.schema.getTaggedValue(READ_PERMISSIONS_KEY)\n     {\'one\': \'zope2.View\'}\ndiff --git a/plone/autoform/tests/subform.txt b/plone/autoform/tests/subform.txt\nindex 6a681a4..a2d2864 100644\n--- a/plone/autoform/tests/subform.txt\n+++ b/plone/autoform/tests/subform.txt\n@@ -32,7 +32,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests:\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \ndiff --git a/plone/autoform/tests/test_doctests.py b/plone/autoform/tests/test_doctests.py\nindex 271d8a4..1f8262b 100644\n--- a/plone/autoform/tests/test_doctests.py\n+++ b/plone/autoform/tests/test_doctests.py\n@@ -4,6 +4,8 @@\n from plone.testing.zca import UNIT_TESTING\n \n import doctest\n+import re\n+import six\n import unittest\n \n \n@@ -15,12 +17,21 @@\n ]\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+            # want = re.sub("b\'(.*?)\'", "\'\\\\1\'", want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     tests = [\n         layered(\n             doctest.DocFileSuite(\n                 test_file,\n                 optionflags=optionflags,\n+                checker=Py23DocChecker(),\n             ),\n             layer=UNIT_TESTING,\n         )\ndiff --git a/plone/autoform/tests/test_supermodel_handler.py b/plone/autoform/tests/test_supermodel_handler.py\nindex 0044458..c8bd266 100644\n--- a/plone/autoform/tests/test_supermodel_handler.py\n+++ b/plone/autoform/tests/test_supermodel_handler.py\n@@ -353,9 +353,9 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field><ns0:widget\'\n-            \' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n-            \' type="foo"/></field>\'\n+            b\'<field><ns0:widget\'\n+            b\' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n+            b\' type="foo"/></field>\'\n         )\n \n     def test_write_parameterized_widget_default(self):\n@@ -372,7 +372,7 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field/>\'\n+            b\'<field/>\'\n         )\n \n     def test_write_parameterized_widget_with_handler(self):\n@@ -389,12 +389,12 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field><ns0:widget\'\n-            \' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n-            \' type="plone.autoform.tests.test_supermodel_handler.\'\n-            \'DummyWidget">\'\n-            \'<klass>custom</klass>\'\n-            \'</ns0:widget></field>\')\n+            b\'<field><ns0:widget\'\n+            b\' xmlns:ns0="http://namespaces.plone.org/supermodel/form"\'\n+            b\' type="plone.autoform.tests.test_supermodel_handler.\'\n+            b\'DummyWidget">\'\n+            b\'<klass>custom</klass>\'\n+            b\'</ns0:widget></field>\')\n \n     def test_write_parameterized_widget_default_with_handler(self):\n         from plone.autoform.widgets import ParameterizedWidget\n@@ -410,9 +410,9 @@ class IDummy(Interface):\n \n         self.assertEqual(\n             etree.tostring(fieldNode),\n-            \'<field><ns0:widget\'\n-            \' xmlns:ns0="http://namespaces.plone.org/supermodel/form">\'\n-            \'<klass>custom</klass></ns0:widget></field>\')\n+            b\'<field><ns0:widget\'\n+            b\' xmlns:ns0="http://namespaces.plone.org/supermodel/form">\'\n+            b\'<klass>custom</klass></ns0:widget></field>\')\n \n \n class TestSecuritySchema(unittest.TestCase):\ndiff --git a/plone/autoform/view.txt b/plone/autoform/view.txt\nindex ea2c002..9264f5a 100644\n--- a/plone/autoform/view.txt\n+++ b/plone/autoform/view.txt\n@@ -15,7 +15,8 @@ First, let\'s load this package\'s ZCML so that we can run the tests:\n     ...\n     ... </configure>\n     ... """\n-    >>> from StringIO import StringIO\n+    >>> import six\n+    >>> from six import StringIO\n     >>> from zope.configuration import xmlconfig\n     >>> xmlconfig.xmlconfig(StringIO(configuration))\n \n@@ -79,7 +80,7 @@ set up.\n     >>> context.summary = u"Summary"\n \n     >>> view = TestView(context, request)\n-    >>> print view()\n+    >>> print(view())\n     <div>My title widget says\n         <span id="form-widgets-title"\n               class="text-widget...textline-field">Test title</span>\n@@ -96,9 +97,10 @@ updated, we have access to widgets in the default fieldset:\n There is also a shortcut to allow access to any widget by (possibly prefixed)\n name:\n \n-    >>> view.w.items()\n-    [(\'body\', <TextAreaWidget \'form.widgets.body\'>),\n-     (\'ISecondarySchema.summary\', <TextAreaWidget \'form.widgets.ISecondarySchema.summary\'>),\n+    >>> items = sorted(list(view.w.items()))\n+    >>> items\n+    [(\'ISecondarySchema.summary\', <TextAreaWidget \'form.widgets.ISecondarySchema.summary\'>),\n+     (\'body\', <TextAreaWidget \'form.widgets.body\'>),\n      (\'title\', <TextWidget \'form.widgets.title\'>)]\n \n You can also see fieldsets (groups) either in order:\n@@ -108,7 +110,7 @@ You can also see fieldsets (groups) either in order:\n \n or looked up by name:\n \n-    >>> view.fieldsets.items()\n+    >>> list(view.fieldsets.items())\n     [(\'secondary\', <plone.z3cform.fieldsets.group.Group object at ...>)]\n \n Note how the schema name is used as a prefix to all additional schemata. If\n@@ -117,7 +119,8 @@ you wish to flatten the namespace, you can set ignorePrefix to true:\n     >>> view = TestView(context, request)\n     >>> view.ignorePrefix = True\n     >>> view.update()\n-    >>> view.w.items()\n+    >>> items = sorted(view.w.items())\n+    >>> items\n     [(\'body\', <TextAreaWidget \'form.widgets.body\'>),\n      (\'summary\', <TextAreaWidget \'form.widgets.summary\'>),\n      (\'title\', <TextWidget \'form.widgets.title\'>)]\ndiff --git a/setup.py b/setup.py\nindex fb248f6..4dd28bb 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -23,9 +23,12 @@ def read(*rnames):\n     classifiers=[\n         "Framework :: Plone",\n         "Framework :: Plone :: 5.1",\n+        "Framework :: Plone :: 5.2",\n         "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 2.7",\n+        "Programming Language :: Python :: 3.6",\n+        "Programming Language :: Python :: 3.7",\n         "Topic :: Software Development :: Libraries :: Python Modules",\n     ],\n     keywords=\'plone form z3c.form\',\n'

