Repository: plone.app.i18n


Branch: refs/heads/master
Date: 2018-06-15T20:29:37+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.i18n/commit/bf84944a0d368946f73faf0c5170f55826c8f99e

fix tests for py3

Files changed:
M plone/app/i18n/locales/browser/selector.py
M plone/app/i18n/locales/browser/tests.py
M plone/app/i18n/locales/tests/countries.txt
M plone/app/i18n/locales/tests/languages.txt
M plone/app/i18n/locales/tests/test_doctests.py

b'diff --git a/plone/app/i18n/locales/browser/selector.py b/plone/app/i18n/locales/browser/selector.py\nindex 3122291..138a5a1 100644\n--- a/plone/app/i18n/locales/browser/selector.py\n+++ b/plone/app/i18n/locales/browser/selector.py\n@@ -53,9 +53,11 @@ class LanguageSelector(BrowserView):\n       >>> ls.available()\n       True\n \n-      >>> ls.languages()\n-      [{\'code\': \'en\', \'selected\': True}, {\'code\': \'ar\', \'selected\': False},\n-       {\'code\': \'nl\', \'selected\': False}]\n+      >>> result = [{\'code\': \'en\', \'selected\': True}, {\'code\': \'ar\', \'selected\': False},\n+      ...           {\'code\': \'nl\', \'selected\': False}]\n+      >>> ls.languages() == result\n+      True\n+\n       >>> ls.showFlags()\n       True\n \n@@ -67,10 +69,10 @@ class LanguageSelector(BrowserView):\n       >>> ls.available()\n       True\n \n-      >>> from zope.interface import implements\n+      >>> from zope.interface import implementer\n       >>> from OFS.interfaces import IItem\n-      >>> class Dummy(object):\n-      ...     implements(IItem)\n+      >>> @implementer(IItem)\n+      ... class Dummy(object):\n       ...     def getPortalObject(self):\n       ...         return self\n       ...     def absolute_url(self):\ndiff --git a/plone/app/i18n/locales/browser/tests.py b/plone/app/i18n/locales/browser/tests.py\nindex 4a3c142..e31fc33 100644\n--- a/plone/app/i18n/locales/browser/tests.py\n+++ b/plone/app/i18n/locales/browser/tests.py\n@@ -1,15 +1,26 @@\n # -*- coding: UTF-8 -*-\n+from zope.component.testing import setUp, tearDown\n \n+import doctest\n+import re\n+import six\n import unittest\n \n-from zope.component.testing import setUp, tearDown\n-import doctest\n+\n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", got)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \n def test_suite():\n     return unittest.TestSuite((\n-        doctest.DocTestSuite(\'plone.app.i18n.locales.browser.selector\',\n-                     setUp=setUp(),\n-                     tearDown=tearDown,\n-                     optionflags=doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE),\n+        doctest.DocTestSuite(\n+            \'plone.app.i18n.locales.browser.selector\',\n+            setUp=setUp(),\n+            tearDown=tearDown,\n+            optionflags=doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE,\n+            checker=Py23DocChecker(),\n+            )\n         ))\ndiff --git a/plone/app/i18n/locales/tests/countries.txt b/plone/app/i18n/locales/tests/countries.txt\nindex 5062928..b648307 100644\n--- a/plone/app/i18n/locales/tests/countries.txt\n+++ b/plone/app/i18n/locales/tests/countries.txt\n@@ -23,10 +23,10 @@ Country tests.\n \n   >>> de = countries[u\'de\']\n   >>> de[u\'name\']\n-  u\'Germany\'\n+  \'Germany\'\n \n   >>> de[u\'flag\']\n-  u\'/++resource++country-flags/de.gif\'\n+  \'/++resource++country-flags/de.gif\'\n \n   >>> old = util.getAvailableCountries()\n   >>> countries = [\'de\']\ndiff --git a/plone/app/i18n/locales/tests/languages.txt b/plone/app/i18n/locales/tests/languages.txt\nindex d196a2a..d599ac9 100644\n--- a/plone/app/i18n/locales/tests/languages.txt\n+++ b/plone/app/i18n/locales/tests/languages.txt\n@@ -22,7 +22,7 @@ Language tests\n   >>> old = util.getAvailableLanguages()\n   >>> util.setAvailableLanguages((u\'en\', u\'de\'))\n   >>> util.getAvailableLanguages()\n-  [u\'en\', u\'de\']\n+  [\'en\', \'de\']\n \n   >>> util.setAvailableLanguages(old)\n \ndiff --git a/plone/app/i18n/locales/tests/test_doctests.py b/plone/app/i18n/locales/tests/test_doctests.py\nindex f133a9b..3374bc8 100644\n--- a/plone/app/i18n/locales/tests/test_doctests.py\n+++ b/plone/app/i18n/locales/tests/test_doctests.py\n@@ -1,16 +1,24 @@\n # -*- coding: UTF-8 -*-\n+from plone.app.testing import PLONE_INTEGRATION_TESTING\n+from plone.testing import layered\n \n-import unittest\n import doctest\n-\n-from plone.app.testing.bbb import PTC_FUNCTIONAL_TESTING\n-from plone.testing import layered\n+import re\n+import six\n+import unittest\n \n OPTIONFLAGS = (doctest.REPORT_ONLY_FIRST_FAILURE |\n                doctest.ELLIPSIS |\n                doctest.NORMALIZE_WHITESPACE)\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", got)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     return unittest.TestSuite((\n         doctest.DocTestSuite(\'plone.app.i18n.locales.countries\'),\n@@ -18,9 +26,11 @@ def test_suite():\n         layered(doctest.DocFileSuite(\'countries.txt\',\n             optionflags=OPTIONFLAGS,\n             package=\'plone.app.i18n.locales.tests\',\n-            ), layer=PTC_FUNCTIONAL_TESTING),\n+            checker=Py23DocChecker(),\n+            ), layer=PLONE_INTEGRATION_TESTING),\n         layered(doctest.DocFileSuite(\'languages.txt\',\n             optionflags=OPTIONFLAGS,\n             package=\'plone.app.i18n.locales.tests\',\n-            ), layer=PTC_FUNCTIONAL_TESTING)\n+            checker=Py23DocChecker(),\n+            ), layer=PLONE_INTEGRATION_TESTING)\n         ))\n'

Repository: plone.app.i18n


Branch: refs/heads/master
Date: 2018-09-17T08:48:01+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.i18n/commit/f1b2203929f19f802c01f72684643f97ee100d19

add changenote and classifiers

Files changed:
M CHANGES.rst
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 4668e68..c842f38 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix tests with py3.\n+  [pbauer]\n \n \n 3.0.4 (2016-11-19)\ndiff --git a/setup.py b/setup.py\nindex 00702c3..ba060a8 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -13,11 +13,14 @@\n           "Framework :: Plone",\n           "Framework :: Plone :: 5.0",\n           "Framework :: Plone :: 5.1",\n+          "Framework :: Plone :: 5.2",\n           "Framework :: Zope2",\n           "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n           "Operating System :: OS Independent",\n           "Programming Language :: Python",\n           "Programming Language :: Python :: 2.7",\n+          "Programming Language :: Python :: 3.6",\n+          "Programming Language :: Python :: 3.7",\n       ],\n       keywords=\'plone i18n\',\n       author=\'Plone Foundation\',\n@@ -34,6 +37,7 @@\n       extras_require={\n           \'test\': [\n               \'plone.app.testing\',\n+              \'six\',\n           ]\n       },\n       )\n'

Repository: plone.app.i18n


Branch: refs/heads/master
Date: 2018-09-17T09:48:40+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.i18n/commit/27a0733bf402759e52decf737dc7f87b8cdde1b7

Merge pull request #7 from plone/python3

fix tests for py3

Files changed:
M CHANGES.rst
M plone/app/i18n/locales/browser/selector.py
M plone/app/i18n/locales/browser/tests.py
M plone/app/i18n/locales/tests/countries.txt
M plone/app/i18n/locales/tests/languages.txt
M plone/app/i18n/locales/tests/test_doctests.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 4668e68..c842f38 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix tests with py3.\n+  [pbauer]\n \n \n 3.0.4 (2016-11-19)\ndiff --git a/plone/app/i18n/locales/browser/selector.py b/plone/app/i18n/locales/browser/selector.py\nindex 3122291..138a5a1 100644\n--- a/plone/app/i18n/locales/browser/selector.py\n+++ b/plone/app/i18n/locales/browser/selector.py\n@@ -53,9 +53,11 @@ class LanguageSelector(BrowserView):\n       >>> ls.available()\n       True\n \n-      >>> ls.languages()\n-      [{\'code\': \'en\', \'selected\': True}, {\'code\': \'ar\', \'selected\': False},\n-       {\'code\': \'nl\', \'selected\': False}]\n+      >>> result = [{\'code\': \'en\', \'selected\': True}, {\'code\': \'ar\', \'selected\': False},\n+      ...           {\'code\': \'nl\', \'selected\': False}]\n+      >>> ls.languages() == result\n+      True\n+\n       >>> ls.showFlags()\n       True\n \n@@ -67,10 +69,10 @@ class LanguageSelector(BrowserView):\n       >>> ls.available()\n       True\n \n-      >>> from zope.interface import implements\n+      >>> from zope.interface import implementer\n       >>> from OFS.interfaces import IItem\n-      >>> class Dummy(object):\n-      ...     implements(IItem)\n+      >>> @implementer(IItem)\n+      ... class Dummy(object):\n       ...     def getPortalObject(self):\n       ...         return self\n       ...     def absolute_url(self):\ndiff --git a/plone/app/i18n/locales/browser/tests.py b/plone/app/i18n/locales/browser/tests.py\nindex 4a3c142..e31fc33 100644\n--- a/plone/app/i18n/locales/browser/tests.py\n+++ b/plone/app/i18n/locales/browser/tests.py\n@@ -1,15 +1,26 @@\n # -*- coding: UTF-8 -*-\n+from zope.component.testing import setUp, tearDown\n \n+import doctest\n+import re\n+import six\n import unittest\n \n-from zope.component.testing import setUp, tearDown\n-import doctest\n+\n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", got)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \n def test_suite():\n     return unittest.TestSuite((\n-        doctest.DocTestSuite(\'plone.app.i18n.locales.browser.selector\',\n-                     setUp=setUp(),\n-                     tearDown=tearDown,\n-                     optionflags=doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE),\n+        doctest.DocTestSuite(\n+            \'plone.app.i18n.locales.browser.selector\',\n+            setUp=setUp(),\n+            tearDown=tearDown,\n+            optionflags=doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE,\n+            checker=Py23DocChecker(),\n+            )\n         ))\ndiff --git a/plone/app/i18n/locales/tests/countries.txt b/plone/app/i18n/locales/tests/countries.txt\nindex 5062928..b648307 100644\n--- a/plone/app/i18n/locales/tests/countries.txt\n+++ b/plone/app/i18n/locales/tests/countries.txt\n@@ -23,10 +23,10 @@ Country tests.\n \n   >>> de = countries[u\'de\']\n   >>> de[u\'name\']\n-  u\'Germany\'\n+  \'Germany\'\n \n   >>> de[u\'flag\']\n-  u\'/++resource++country-flags/de.gif\'\n+  \'/++resource++country-flags/de.gif\'\n \n   >>> old = util.getAvailableCountries()\n   >>> countries = [\'de\']\ndiff --git a/plone/app/i18n/locales/tests/languages.txt b/plone/app/i18n/locales/tests/languages.txt\nindex d196a2a..d599ac9 100644\n--- a/plone/app/i18n/locales/tests/languages.txt\n+++ b/plone/app/i18n/locales/tests/languages.txt\n@@ -22,7 +22,7 @@ Language tests\n   >>> old = util.getAvailableLanguages()\n   >>> util.setAvailableLanguages((u\'en\', u\'de\'))\n   >>> util.getAvailableLanguages()\n-  [u\'en\', u\'de\']\n+  [\'en\', \'de\']\n \n   >>> util.setAvailableLanguages(old)\n \ndiff --git a/plone/app/i18n/locales/tests/test_doctests.py b/plone/app/i18n/locales/tests/test_doctests.py\nindex f133a9b..3374bc8 100644\n--- a/plone/app/i18n/locales/tests/test_doctests.py\n+++ b/plone/app/i18n/locales/tests/test_doctests.py\n@@ -1,16 +1,24 @@\n # -*- coding: UTF-8 -*-\n+from plone.app.testing import PLONE_INTEGRATION_TESTING\n+from plone.testing import layered\n \n-import unittest\n import doctest\n-\n-from plone.app.testing.bbb import PTC_FUNCTIONAL_TESTING\n-from plone.testing import layered\n+import re\n+import six\n+import unittest\n \n OPTIONFLAGS = (doctest.REPORT_ONLY_FIRST_FAILURE |\n                doctest.ELLIPSIS |\n                doctest.NORMALIZE_WHITESPACE)\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", got)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     return unittest.TestSuite((\n         doctest.DocTestSuite(\'plone.app.i18n.locales.countries\'),\n@@ -18,9 +26,11 @@ def test_suite():\n         layered(doctest.DocFileSuite(\'countries.txt\',\n             optionflags=OPTIONFLAGS,\n             package=\'plone.app.i18n.locales.tests\',\n-            ), layer=PTC_FUNCTIONAL_TESTING),\n+            checker=Py23DocChecker(),\n+            ), layer=PLONE_INTEGRATION_TESTING),\n         layered(doctest.DocFileSuite(\'languages.txt\',\n             optionflags=OPTIONFLAGS,\n             package=\'plone.app.i18n.locales.tests\',\n-            ), layer=PTC_FUNCTIONAL_TESTING)\n+            checker=Py23DocChecker(),\n+            ), layer=PLONE_INTEGRATION_TESTING)\n         ))\ndiff --git a/setup.py b/setup.py\nindex 00702c3..ba060a8 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -13,11 +13,14 @@\n           "Framework :: Plone",\n           "Framework :: Plone :: 5.0",\n           "Framework :: Plone :: 5.1",\n+          "Framework :: Plone :: 5.2",\n           "Framework :: Zope2",\n           "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n           "Operating System :: OS Independent",\n           "Programming Language :: Python",\n           "Programming Language :: Python :: 2.7",\n+          "Programming Language :: Python :: 3.6",\n+          "Programming Language :: Python :: 3.7",\n       ],\n       keywords=\'plone i18n\',\n       author=\'Plone Foundation\',\n@@ -34,6 +37,7 @@\n       extras_require={\n           \'test\': [\n               \'plone.app.testing\',\n+              \'six\',\n           ]\n       },\n       )\n'

