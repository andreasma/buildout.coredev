Repository: plone.app.theming


Branch: refs/heads/master
Date: 2019-12-03T20:15:49+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.theming/commit/87d21ea0c39bda63c1a862378686f6819de1a198

Fix creating a new theme ttw in py2 with Zope 4.1.3

Files changed:
A news/166.bugfix
M src/plone/app/theming/utils.py

b"diff --git a/news/166.bugfix b/news/166.bugfix\nnew file mode 100644\nindex 0000000..bc06f5f\n--- /dev/null\n+++ b/news/166.bugfix\n@@ -0,0 +1,2 @@\n+Fix creating a new theme ttw in py2 with Zope 4.1.3.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py\nindex 82fbeec..aedd66d 100644\n--- a/src/plone/app/theming/utils.py\n+++ b/src/plone/app/theming/utils.py\n@@ -570,20 +570,15 @@ def createThemeFromTemplate(title, description, baseOn='template'):\n             val = val.replace(template_prefix, '++%s++%s/' % (THEME_RESOURCE_NAME, themeName))\n             manifest.set('theme', var_path, val)\n \n-    if six.PY2:\n-        manifestContents = six.StringIO()\n-        manifest.write(manifestContents)\n-\n-    else:\n-        # in py3 plone.resource is BytesIO objects\n-        # but configparser can only deal with text (StringIO).\n-        # So we need to do this stupid dance to write manifest.cfg\n-        tempfile = six.StringIO()\n-        manifest.write(tempfile)\n-        tempfile.seek(0)\n-        data = tempfile.read()\n-        tempfile.close()\n-        manifestContents = six.BytesIO(data.encode('utf8'))\n+    # plone.resource uses OFS.File which is a BytesIO objects\n+    # but configparser can only deal with text (StringIO).\n+    # So we need to do this stupid dance to write manifest.cfg\n+    tempfile = six.StringIO()\n+    manifest.write(tempfile)\n+    tempfile.seek(0)\n+    data = tempfile.read()\n+    tempfile.close()\n+    manifestContents = six.BytesIO(data.encode('utf8'))\n \n     target.writeFile(MANIFEST_FILENAME, manifestContents)\n     return themeName\n"

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2019-12-03T20:23:28+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.theming/commit/fd5b69f425d6800652c840392b7d32c03eacc6e4

make it safe with older versions

Files changed:
M src/plone/app/theming/utils.py

b"diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py\nindex aedd66d..360894f 100644\n--- a/src/plone/app/theming/utils.py\n+++ b/src/plone/app/theming/utils.py\n@@ -23,6 +23,7 @@\n from plone.subrequest import subrequest\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFCore.interfaces import ISiteRoot\n+from Products.CMFPlone.utils import safe_encode\n from Products.CMFPlone.utils import safe_unicode\n from Products.PageTemplates.Expressions import getEngine\n from six.moves.urllib.parse import urlsplit\n@@ -578,7 +579,7 @@ def createThemeFromTemplate(title, description, baseOn='template'):\n     tempfile.seek(0)\n     data = tempfile.read()\n     tempfile.close()\n-    manifestContents = six.BytesIO(data.encode('utf8'))\n+    manifestContents = six.BytesIO(safe_encode(data))\n \n     target.writeFile(MANIFEST_FILENAME, manifestContents)\n     return themeName\n"

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2019-12-03T21:12:39+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.theming/commit/1992b66bbdfbd13b27614c6541dff7c23cde9d58

Merge pull request #167 from plone/fix_ttw_theme

Fix creating a new theme ttw in py2 with Zope 4.1.3

Files changed:
A news/166.bugfix
M src/plone/app/theming/utils.py

b"diff --git a/news/166.bugfix b/news/166.bugfix\nnew file mode 100644\nindex 0000000..bc06f5f\n--- /dev/null\n+++ b/news/166.bugfix\n@@ -0,0 +1,2 @@\n+Fix creating a new theme ttw in py2 with Zope 4.1.3.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py\nindex 82fbeec..360894f 100644\n--- a/src/plone/app/theming/utils.py\n+++ b/src/plone/app/theming/utils.py\n@@ -23,6 +23,7 @@\n from plone.subrequest import subrequest\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFCore.interfaces import ISiteRoot\n+from Products.CMFPlone.utils import safe_encode\n from Products.CMFPlone.utils import safe_unicode\n from Products.PageTemplates.Expressions import getEngine\n from six.moves.urllib.parse import urlsplit\n@@ -570,20 +571,15 @@ def createThemeFromTemplate(title, description, baseOn='template'):\n             val = val.replace(template_prefix, '++%s++%s/' % (THEME_RESOURCE_NAME, themeName))\n             manifest.set('theme', var_path, val)\n \n-    if six.PY2:\n-        manifestContents = six.StringIO()\n-        manifest.write(manifestContents)\n-\n-    else:\n-        # in py3 plone.resource is BytesIO objects\n-        # but configparser can only deal with text (StringIO).\n-        # So we need to do this stupid dance to write manifest.cfg\n-        tempfile = six.StringIO()\n-        manifest.write(tempfile)\n-        tempfile.seek(0)\n-        data = tempfile.read()\n-        tempfile.close()\n-        manifestContents = six.BytesIO(data.encode('utf8'))\n+    # plone.resource uses OFS.File which is a BytesIO objects\n+    # but configparser can only deal with text (StringIO).\n+    # So we need to do this stupid dance to write manifest.cfg\n+    tempfile = six.StringIO()\n+    manifest.write(tempfile)\n+    tempfile.seek(0)\n+    data = tempfile.read()\n+    tempfile.close()\n+    manifestContents = six.BytesIO(safe_encode(data))\n \n     target.writeFile(MANIFEST_FILENAME, manifestContents)\n     return themeName\n"

