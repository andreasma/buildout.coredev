Repository: plone.event


Branch: refs/heads/master
Date: 2018-10-09T16:44:07+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.event/commit/ccc0a1491c0470183057d131709f8ddcfb30ed9b

Test fixes for improved icalender &gt;4.0.2

Files changed:
A plone/event/recurrence.rst
A plone/event/recurrence_dateutil.rst
A plone/event/utils.rst
M CHANGES.rst
M plone/event/tests/test_doctest.py
M setup.py
D plone/event/recurrence.txt
D plone/event/recurrence_dateutil.txt
D plone/event/utils.txt

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 148e6f3..1f427eb 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,12 +1,13 @@\n Changelog\n =========\n \n-1.3.5 (unreleased)\n+1.4.0 (unreleased)\n ------------------\n \n Breaking changes:\n \n-- *add item here*\n+- Needs icalender >4.0.2 which depends on python-dateutil 2.7.3 which has itself some minor but breaking changes comparedto the 2.6-series.\n+  [jensens]\n \n New features:\n \n@@ -15,7 +16,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Test fixes for improved icalender >4.0.2\n+  [jensens]\n \n \n 1.3.4 (2017-08-04)\ndiff --git a/plone/event/recurrence.txt b/plone/event/recurrence.rst\nsimilarity index 100%\nrename from plone/event/recurrence.txt\nrename to plone/event/recurrence.rst\ndiff --git a/plone/event/recurrence_dateutil.txt b/plone/event/recurrence_dateutil.rst\nsimilarity index 88%\nrename from plone/event/recurrence_dateutil.txt\nrename to plone/event/recurrence_dateutil.rst\nindex 91b95df..685f700 100644\n--- a/plone/event/recurrence_dateutil.txt\n+++ b/plone/event/recurrence_dateutil.rst\n@@ -17,21 +17,19 @@ around it by using a different content item for events after a DST change.\n For reference, see: https://bugs.launchpad.net/dateutil/+bug/890196\n                     https://bugs.launchpad.net/dateutil/+bug/890197\n \n-1) Why we should let rrule calculate Timezone naive dates and applying\n-timezones to the sequence afterwards\n-======================================================================\n+1) Why we should let rrule calculate Timezone naive dates and applyingtimezones to the sequence afterwards\n+==========================================================================================================\n \n dateutil does not normalize/adjust the timezone over Daylight Saving Time\n boundaries. E.g. in Austria in 2010, dst change from summertime (UTC+2) to\n standard time (UTC+1) happened on 2010-10-31 at 3:00 in the morning.\n-dateutil gives us:\n+dateutil gives us::\n \n     >>> from datetime import datetime\n     >>> import pytz\n     >>> at = pytz.timezone(\'Europe/Vienna\')\n     >>> start = at.localize(datetime(2010,10,30))\n     >>> recrule = """RRULE:FREQ=DAILY;INTERVAL=1;COUNT=3"""\n-\n     >>> from dateutil import rrule\n     >>> list(rrule.rrulestr(recrule, dtstart=start))\n     [datetime.datetime(2010, 10, 30, 0, 0, tzinfo=<DstTzInfo \'Europe/Vienna\' CEST+2:00:00 DST>),\n@@ -41,6 +39,8 @@ dateutil gives us:\n Note, that for 1st November, the UTC offset is wrong.\n This issue is corrected by plone.event.util.utcoffset_normalize:\n \n+::\n+\n     >>> from plone.event.recurrence import recurrence_sequence_ical\n     >>> list(recurrence_sequence_ical(start, recrule=recrule))\n     [datetime.datetime(2010, 10, 30, 0, 0, tzinfo=<DstTzInfo \'Europe/Vienna\' CEST+2:00:00 DST>),\n@@ -57,12 +57,16 @@ sequence.\n See here... This is our recurrence rule. We want to substract from the sequence\n the date 2010-10-31, 23:30 in UTC, which is 2010-11-01, 0:30 in Austria, UTC+1\n \n+::\n+\n     >>> recrule = """RRULE:FREQ=DAILY;INTERVAL=1;COUNT=3\n     ...              EXDATE:20101031T233000Z"""\n \n If we let the sequence start from 1st November, the 1st November is correctly\n substracted, since the sequence has all correct timezones.\n \n+::\n+\n     >>> start = at.localize(datetime(2010, 11, 1, 0, 30))\n     >>> list(rrule.rrulestr(recrule, dtstart=start, forceset=True))\n     [datetime.datetime(2010, 11, 2, 0, 30, tzinfo=<DstTzInfo \'Europe/Vienna\' CET+1:00:00 STD>),\n@@ -71,6 +75,9 @@ substracted, since the sequence has all correct timezones.\n But if we start from 30th October, where UTC+2 offset is still active, the\n sequence has incorrect timezones and substracting does not work as expected\n anymore.\n+\n+::\n+\n     >>> start = at.localize(datetime(2010,10,30,0,30))\n     >>> list(rrule.rrulestr(recrule, dtstart=start, forceset=True))\n     [datetime.datetime(2010, 10, 30, 0, 30, tzinfo=<DstTzInfo \'Europe/Vienna\' CEST+2:00:00 DST>),\n@@ -79,11 +86,10 @@ anymore.\n \n \n \n-2) python-dateutil does not accept VALUE parameter to distinguish between date\n-and datetime in date components\n-===============================================================================\n+2) python-dateutil does not accept VALUE parameter to distinguish between dateand datetime in date components\n+=============================================================================================================\n \n-General imports used in here\n+General imports used in here::\n \n     >>> from datetime import datetime\n     >>> import pytz\n@@ -93,51 +99,42 @@ General imports used in here\n Using the VALUE parameter in DTSTART or any other date component does not work.\n The value parameter can be used to distinguish between DATE and DATE-TIME.\n Please note, that DATE-TIME is the default.\n+The result is an empty list.\n+\n+::\n \n     >>> start = at.localize(datetime(2010, 1, 1, 0, 0))\n     >>> recrule = """DTSTART;VALUE=DATE:20101029"""\n     >>> list(rrule.rrulestr(recrule, dtstart=start, forceset=True))\n-    Traceback (most recent call last):\n-    ...\n-    ValueError: unsupported DTSTART parm: VALUE=DATE\n+    []\n \n \n 3) python-dateutil does not accept Timezone identifiers for Date components\n ===========================================================================\n \n-General imports used in here\n+General imports used in here::\n \n     >>> from datetime import datetime\n     >>> import pytz\n     >>> at = pytz.timezone(\'Europe/Vienna\')\n \n \n-Timezone aware parsing regarding RFC2445 does not work\n-\n-    >>> start = at.localize(datetime(2010, 1, 1, 0, 0))\n-    >>> recrule = """DTSTART;TZID=Europe/Vienna:20101029T090000\n-    ... RRULE:FREQ=DAILY;INTERVAL=1;COUNT=4\n-    ... """\n-    >>> list(rrule.rrulestr(recrule, dtstart=start, forceset=True))\n-    Traceback (most recent call last):\n-    ...\n-    ValueError: unsupported DTSTART parm: TZID=EUROPE/VIENNA\n-\n-\n-Mixing timezone aware and naive dates also breaks (this is not a bug)\n+Mixing timezone aware and naive dates also breaks (this is not a bug)::\n \n     >>> start=at.localize(datetime(2010, 1, 1, 0, 0))\n     >>> recrule="""RRULE:FREQ=DAILY;INTERVAL=1;UNTIL=20100104T000000"""\n     >>> list(rrule.rrulestr(recrule, dtstart=start, forceset=True))\n     Traceback (most recent call last):\n     ...\n-    TypeError: can\'t compare offset-naive and offset-aware datetimes\n+    ValueError: RRULE UNTIL values must be specified in UTC when DTSTART is timezone-aware\n \n \n python-dateutils parse function accepts a default value, from which missing\n parameters are copied. Could this be the key to solve the problem with missing\n timezones?\n \n+::\n+\n     >>> from dateutil import parser\n \n     >>> ref = at.localize(datetime(2010,1,1))\n@@ -146,7 +143,7 @@ timezones?\n \n \n yo! but not really the solution yet. timezones are not adjusted properly\n-(should be CET+2 here)\n+(should be CET+2 here)::\n \n     >>> parser.parse(\'20100809T000000\', default=ref)\n     datetime.datetime(2010, 8, 9, 0, 0, tzinfo=<DstTzInfo \'Europe/Vienna\' CET+1:00:00 STD>)\n@@ -154,6 +151,8 @@ yo! but not really the solution yet. timezones are not adjusted properly\n \n this works. but can\'t be used to solve rrulestr parsing problems.\n \n+::\n+\n     >>> parser.parse(\'20100109T000000\', default=ref.tzinfo.localize(parser.parse(\'20100809T000000\')))\n     datetime.datetime(2010, 1, 9, 0, 0, tzinfo=<DstTzInfo \'Europe/Vienna\' CEST+2:00:00 DST>)\n \ndiff --git a/plone/event/tests/test_doctest.py b/plone/event/tests/test_doctest.py\nindex fa375c4..77ab9e1 100644\n--- a/plone/event/tests/test_doctest.py\n+++ b/plone/event/tests/test_doctest.py\n@@ -8,9 +8,9 @@\n \n OPTIONFLAGS = doctest.NORMALIZE_WHITESPACE | doctest.ELLIPSIS\n DOCFILES = [\n-    \'recurrence.txt\',\n-    \'recurrence_dateutil.txt\',\n-    \'utils.txt\',\n+    \'recurrence.rst\',\n+    \'recurrence_dateutil.rst\',\n+    \'utils.rst\',\n ]\n DOCMODS = [\'plone.event.utils\', ]\n \ndiff --git a/plone/event/utils.txt b/plone/event/utils.rst\nsimilarity index 100%\nrename from plone/event/utils.txt\nrename to plone/event/utils.rst\ndiff --git a/setup.py b/setup.py\nindex ebd191d..e1c29b3 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -34,7 +34,7 @@\n     zip_safe=False,\n     install_requires=[\n         \'setuptools\',\n-        \'python-dateutil\',\n+        \'python-dateutil >4.0.2\',\n         \'pytz\',\n         \'zope.component\',\n         \'zope.interface\',\n'

