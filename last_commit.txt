Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-03-17T15:40:29+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/d4c3184fd89db6848834272d817e793e941ab44e

small py3 fixes

Files changed:
M plone/app/dexterity/behaviors/metadata.py
M plone/app/dexterity/browser/types.py
M plone/app/dexterity/factories.py

diff --git a/plone/app/dexterity/behaviors/metadata.py b/plone/app/dexterity/behaviors/metadata.py
index 5f7d7d5..970de1e 100644
--- a/plone/app/dexterity/behaviors/metadata.py
+++ b/plone/app/dexterity/behaviors/metadata.py
@@ -26,7 +26,7 @@
 from zope.schema.interfaces import ISequence
 from zope.schema.interfaces import IText
 
-import six
+from six.moves import map
 
 
 # Behavior interfaces to display Dublin Core metadata fields on Dexterity
@@ -302,7 +302,7 @@ def __get__(self, inst, klass):
         if isinstance(attribute, DateTime):
             # Ensure datetime value is stripped of any timezone and seconds
             # so that it can be compared with the value returned by the widget
-            return datetime(*map(int, attribute.parts()[:6]))
+            return datetime(*list(map(int, attribute.parts()[:6])))
 
         if attribute is None:
             return
diff --git a/plone/app/dexterity/browser/types.py b/plone/app/dexterity/browser/types.py
index 71366db..4bd7727 100644
--- a/plone/app/dexterity/browser/types.py
+++ b/plone/app/dexterity/browser/types.py
@@ -218,11 +218,11 @@ def get_items(self):
         ftis = getAllUtilitiesRegisteredFor(IDexterityFTI)
         return [(fti.__name__, fti) for fti in ftis]
 
-    def remove(self, (id, item)):
+    def remove(self, id_and_item):
         """ Remove a content type.
         """
         ttool = getToolByName(self.context, 'portal_types')
-        ttool.manage_delObjects([id])
+        ttool.manage_delObjects([id_and_item[0]])
 
     def link(self, item, field):
         """Generate links to the edit page for each type.
diff --git a/plone/app/dexterity/factories.py b/plone/app/dexterity/factories.py
index 391a085..df26350 100644
--- a/plone/app/dexterity/factories.py
+++ b/plone/app/dexterity/factories.py
@@ -6,7 +6,7 @@
 from Products.CMFCore.interfaces._content import IFolderish
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import utils as ploneutils
-from thread import allocate_lock
+from six.moves._thread import allocate_lock
 from zope.component import adapter
 from zope.container.interfaces import INameChooser
 from zope.interface import implementer


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-04-01T11:11:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/cb6a10482041bb536678f94951436098cdcb2d40

fix metadata setters

Files changed:
M plone/app/dexterity/behaviors/metadata.py

diff --git a/plone/app/dexterity/behaviors/metadata.py b/plone/app/dexterity/behaviors/metadata.py
index 970de1e..44089c6 100644
--- a/plone/app/dexterity/behaviors/metadata.py
+++ b/plone/app/dexterity/behaviors/metadata.py
@@ -27,6 +27,7 @@
 from zope.schema.interfaces import IText
 
 from six.moves import map
+import six
 
 
 # Behavior interfaces to display Dublin Core metadata fields on Dexterity
@@ -355,8 +356,8 @@ def _get_title(self):
         return self.context.title
 
     def _set_title(self, value):
-        if isinstance(value, str):
-            raise ValueError('Title must be six.text_type.')
+        if not isinstance(value, six.text_type):
+            raise ValueError('Title must be text.')
         self.context.title = value
     title = property(_get_title, _set_title)
 
@@ -364,8 +365,8 @@ def _get_description(self):
         return self.context.description
 
     def _set_description(self, value):
-        if isinstance(value, str):
-            raise ValueError('Description must be six.text_type.')
+        if not isinstance(value, six.text_type):
+            raise ValueError('Description must be text.')
 
         self.context.description = value
 


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-04-11T12:37:30+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/d3089bad008f00dfbe9f0f3df0ee7cedd3e9fc74

Update CHANGES.rst

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 3a3b14d..af7cadd 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Python 3 fixes.
+  [pbauer]
+
 - Do not fail in upgrade step or tests when portal_quickinstaller is not there.
   [maurits]
 


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-04-11T12:38:02+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/d2354e7f9062ce5b086c1c7984e3987141fe2253

Merge branch 'master' into python3

Files changed:
M CHANGES.rst
M plone/app/dexterity/browser/behaviors.pt
M plone/app/dexterity/browser/container.pt
M plone/app/dexterity/browser/item.pt
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index af7cadd..9c714b7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,8 +1,8 @@
 Changelog
 =========
 
-2.4.8 (unreleased)
-------------------
+2.4.10 (unreleased)
+-------------------
 
 Breaking changes:
 
@@ -17,6 +17,22 @@ Bug fixes:
 - Python 3 fixes.
   [pbauer]
 
+
+2.4.9 (2018-04-03)
+------------------
+
+Bug fixes:
+
+- Don't break if types are without widgets or groups.
+  Fixes an error with displaying TTW Dexterity types via plone.app.contenttypes full_view. 
+  [thet]
+
+
+2.4.8 (2018-02-04)
+------------------
+
+Bug fixes:
+
 - Do not fail in upgrade step or tests when portal_quickinstaller is not there.
   [maurits]
 
diff --git a/plone/app/dexterity/browser/behaviors.pt b/plone/app/dexterity/browser/behaviors.pt
index 8a79437..b6eb618 100644
--- a/plone/app/dexterity/browser/behaviors.pt
+++ b/plone/app/dexterity/browser/behaviors.pt
@@ -2,7 +2,7 @@
 <div class="portalMessage" tal:condition="view/status" tal:content="view/status"></div>
 
 <form action="." method="post" tal:attributes="action request/getURL; enctype view/enctype">
-<tal:widgets repeat="widget view/widgets/values">
+<tal:widgets repeat="widget view/widgets/values|nothing">
 
   <div class="field"
        tal:define="error widget/error;
diff --git a/plone/app/dexterity/browser/container.pt b/plone/app/dexterity/browser/container.pt
index 6d040d1..3c2b771 100644
--- a/plone/app/dexterity/browser/container.pt
+++ b/plone/app/dexterity/browser/container.pt
@@ -10,13 +10,13 @@
 <metal:main fill-slot="content-core">
 <metal:content-core define-macro="content-core">
 
-  <tal:block repeat="widget view/widgets/values">
+  <tal:block repeat="widget view/widgets/values|nothing">
       <tal:block tal:condition="python:widget.__name__ not in ('IBasic.title', 'IBasic.description', 'title', 'description',)">
           <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>
       </tal:block>
   </tal:block>
 
-  <fieldset tal:repeat="group view/groups"
+  <fieldset tal:repeat="group view/groups|nothing"
             tal:attributes="id python:''.join((group.prefix, 'groups.', group.__name__)).replace('.', '-')">
       <legend tal:content="group/label" />
       <tal:block tal:repeat="widget group/widgets/values">
@@ -26,7 +26,7 @@
 
   <fieldset id="folder-listing">
       <legend i18n:translate="" i18n:domain="plone">Contents</legend>
-      <tal:block define="view nocall:context/folder_listing; listing_macro view/macros/listing">
+      <tal:block define="view nocall:context/folder_listing; listing_macro view/macros/listing|view/index/macros/listing">
           <metal:use_macro use-macro="listing_macro" />
       </tal:block>
   </fieldset>
diff --git a/plone/app/dexterity/browser/item.pt b/plone/app/dexterity/browser/item.pt
index 7184100..e67271f 100644
--- a/plone/app/dexterity/browser/item.pt
+++ b/plone/app/dexterity/browser/item.pt
@@ -10,16 +10,16 @@
 <metal:main fill-slot="content-core">
 <metal:content-core define-macro="content-core">
 
-  <tal:block repeat="widget view/widgets/values">
+  <tal:block repeat="widget view/widgets/values|nothing">
     <tal:block tal:condition="python:widget.__name__ not in ('IBasic.title', 'IBasic.description', 'title', 'description',)">
       <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>
     </tal:block>
   </tal:block>
 
-  <fieldset tal:repeat="group view/groups"
+  <fieldset tal:repeat="group view/groups|nothing"
             tal:attributes="id python:''.join((group.prefix, 'groups.', group.__name__)).replace('.', '-')">
     <legend tal:content="group/label" />
-    <tal:block tal:repeat="widget group/widgets/values">
+    <tal:block tal:repeat="widget group/widgets/values|nothing">
       <tal:widget tal:replace="structure widget/@@ploneform-render-widget"/>
     </tal:block>
   </fieldset>
diff --git a/setup.py b/setup.py
index 5283347..8e0428d 100644
--- a/setup.py
+++ b/setup.py
@@ -3,7 +3,7 @@
 from setuptools import setup
 
 
-version = '2.4.8.dev0'
+version = '2.4.10.dev0'
 
 short_description = (
     'Dexterity is a content type framework for CMF  applications, '
@@ -25,6 +25,7 @@
     classifiers=[
         'Framework :: Plone',
         'Framework :: Plone :: 5.1',
+        'License :: OSI Approved :: GNU General Public License (GPL)',
         'Programming Language :: Python',
         'Programming Language :: Python :: 2.7',
         'Topic :: Software Development :: Libraries :: Python Modules',


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-05-05T16:54:27+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/11a545a868ac62bd4d68fdd76e884dbdd898c031

fieldnames are text in py3

Files changed:
M plone/app/dexterity/browser/behaviors.py

diff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py
index 3e2e18b..726c0dc 100644
--- a/plone/app/dexterity/browser/behaviors.py
+++ b/plone/app/dexterity/browser/behaviors.py
@@ -106,7 +106,7 @@ def fields(self):
             if with_name and reg.name != name:
                 continue
             fname = reg.name if reg.name else name
-            if isinstance(fname, six.text_type):
+            if six.PY2 and isinstance(fname, six.text_type):
                 fname = fname.encode('utf8')
             fields.append(
                 schema.Bool(


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-05-07T12:01:08+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/28898d151a7383449c8ccb2cced93b7848f42a5b

Merge pull request #271 from plone/python3

Python 3

Files changed:
M CHANGES.rst
M plone/app/dexterity/behaviors/metadata.py
M plone/app/dexterity/browser/behaviors.py
M plone/app/dexterity/browser/types.py
M plone/app/dexterity/factories.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a81f153..9c714b7 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Python 3 fixes.
+  [pbauer]
 
 
 2.4.9 (2018-04-03)
diff --git a/plone/app/dexterity/behaviors/metadata.py b/plone/app/dexterity/behaviors/metadata.py
index 5f7d7d5..44089c6 100644
--- a/plone/app/dexterity/behaviors/metadata.py
+++ b/plone/app/dexterity/behaviors/metadata.py
@@ -26,6 +26,7 @@
 from zope.schema.interfaces import ISequence
 from zope.schema.interfaces import IText
 
+from six.moves import map
 import six
 
 
@@ -302,7 +303,7 @@ def __get__(self, inst, klass):
         if isinstance(attribute, DateTime):
             # Ensure datetime value is stripped of any timezone and seconds
             # so that it can be compared with the value returned by the widget
-            return datetime(*map(int, attribute.parts()[:6]))
+            return datetime(*list(map(int, attribute.parts()[:6])))
 
         if attribute is None:
             return
@@ -355,8 +356,8 @@ def _get_title(self):
         return self.context.title
 
     def _set_title(self, value):
-        if isinstance(value, str):
-            raise ValueError('Title must be six.text_type.')
+        if not isinstance(value, six.text_type):
+            raise ValueError('Title must be text.')
         self.context.title = value
     title = property(_get_title, _set_title)
 
@@ -364,8 +365,8 @@ def _get_description(self):
         return self.context.description
 
     def _set_description(self, value):
-        if isinstance(value, str):
-            raise ValueError('Description must be six.text_type.')
+        if not isinstance(value, six.text_type):
+            raise ValueError('Description must be text.')
 
         self.context.description = value
 
diff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py
index 3e2e18b..726c0dc 100644
--- a/plone/app/dexterity/browser/behaviors.py
+++ b/plone/app/dexterity/browser/behaviors.py
@@ -106,7 +106,7 @@ def fields(self):
             if with_name and reg.name != name:
                 continue
             fname = reg.name if reg.name else name
-            if isinstance(fname, six.text_type):
+            if six.PY2 and isinstance(fname, six.text_type):
                 fname = fname.encode('utf8')
             fields.append(
                 schema.Bool(
diff --git a/plone/app/dexterity/browser/types.py b/plone/app/dexterity/browser/types.py
index 71366db..4bd7727 100644
--- a/plone/app/dexterity/browser/types.py
+++ b/plone/app/dexterity/browser/types.py
@@ -218,11 +218,11 @@ def get_items(self):
         ftis = getAllUtilitiesRegisteredFor(IDexterityFTI)
         return [(fti.__name__, fti) for fti in ftis]
 
-    def remove(self, (id, item)):
+    def remove(self, id_and_item):
         """ Remove a content type.
         """
         ttool = getToolByName(self.context, 'portal_types')
-        ttool.manage_delObjects([id])
+        ttool.manage_delObjects([id_and_item[0]])
 
     def link(self, item, field):
         """Generate links to the edit page for each type.
diff --git a/plone/app/dexterity/factories.py b/plone/app/dexterity/factories.py
index 391a085..df26350 100644
--- a/plone/app/dexterity/factories.py
+++ b/plone/app/dexterity/factories.py
@@ -6,7 +6,7 @@
 from Products.CMFCore.interfaces._content import IFolderish
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone import utils as ploneutils
-from thread import allocate_lock
+from six.moves._thread import allocate_lock
 from zope.component import adapter
 from zope.container.interfaces import INameChooser
 from zope.interface import implementer


