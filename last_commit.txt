Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2019-11-28T00:42:07+01:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/56470e67248608c57572bfb361f4e1b80bb9cd1b

Notify CredentialsUpdated event when password is changed

Files changed:
A news/33.bugfix
M src/Products/PlonePAS/plugins/user.py
M src/Products/PlonePAS/tests/test_membershiptool.py

b'diff --git a/news/33.bugfix b/news/33.bugfix\nnew file mode 100644\nindex 00000000..5965b109\n--- /dev/null\n+++ b/news/33.bugfix\n@@ -0,0 +1,2 @@\n+- Notify CredentialsUpdated event when password is changed\n+  [ezvirtual]\ndiff --git a/src/Products/PlonePAS/plugins/user.py b/src/Products/PlonePAS/plugins/user.py\nindex 5a4d8ace..5b51ab42 100644\n--- a/src/Products/PlonePAS/plugins/user.py\n+++ b/src/Products/PlonePAS/plugins/user.py\n@@ -11,9 +11,11 @@\n from Products.PlonePAS.interfaces.capabilities import IPasswordSetCapability\n from Products.PlonePAS.interfaces.plugins import IUserIntrospection\n from Products.PlonePAS.interfaces.plugins import IUserManagement\n+from Products.PluggableAuthService.events import CredentialsUpdated\n from Products.PluggableAuthService.plugins.ZODBUserManager \\\n     import ZODBUserManager as BasePlugin\n from Products.PluggableAuthService.utils import createViewName\n+from zope.event import notify\n from zope.interface import implementer\n \n manage_addUserManagerForm = DTMLFile(\'../zmi/UserManagerForm\', globals())\n@@ -85,6 +87,7 @@ def doChangeUser(self, principal_id, password):\n         if self._user_passwords.get(principal_id) is None:\n             raise RuntimeError("User does not exist: %s" % principal_id)\n         self._user_passwords[principal_id] = AuthEncoding.pw_encrypt(password)\n+        notify(CredentialsUpdated(self.getUserById(principal_id), password))\n \n     # implement interfaces IDeleteCapability, IPasswordSetCapability\n \ndiff --git a/src/Products/PlonePAS/tests/test_membershiptool.py b/src/Products/PlonePAS/tests/test_membershiptool.py\nindex 42d989c8..3bdb6525 100644\n--- a/src/Products/PlonePAS/tests/test_membershiptool.py\n+++ b/src/Products/PlonePAS/tests/test_membershiptool.py\n@@ -23,7 +23,11 @@\n from Products.PlonePAS.tools.memberdata import MemberData\n from Products.PlonePAS.tools.membership import MembershipTool\n from Products.PlonePAS.utils import getGroupsForPrincipal\n+from Products.PluggableAuthService.interfaces.events import \\\n+    ICredentialsUpdatedEvent\n from six import BytesIO\n+from zope.component import adapter\n+from zope.component import getGlobalSiteManager\n from zExceptions import BadRequest\n from plone.app.testing import TEST_USER_ID\n \n@@ -700,6 +704,26 @@ def testGetBadMembers(self):\n                                              TEST_USER_ID)\n         self.assertEqual(self.membership.getBadMembers(), [])\n \n+    def test_credentials_updated_event(self):\n+        events_fired = []\n+\n+        @adapter(ICredentialsUpdatedEvent)\n+        def got_credentials_updated_event(event):\n+            events_fired.append(event)\n+\n+        gsm = getGlobalSiteManager()\n+        gsm.registerHandler(got_credentials_updated_event)\n+\n+        self.assertTrue(self.membership.testCurrentPassword(\'secret\'))\n+        self.assertFalse(self.membership.testCurrentPassword(\'whoknows\'))\n+        login(self.portal, TEST_USER_NAME)  # Back to normal\n+        self.membership.setPassword(\'guessagain\')\n+        self.assertEqual(len(events_fired), 1)\n+        self.assertEqual(events_fired[0].principal.getId(), TEST_USER_ID)\n+        self.assertEqual(events_fired[0].password, \'guessagain\')\n+\n+        gsm.unregisterHandler(got_credentials_updated_event)\n+\n \n class TestCreateMemberarea(unittest.TestCase):\n \n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2019-11-29T17:07:57+01:00
Author: Érico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/c16f8c4894af4964402a8b282b52aabdf5a1a3d7

Remove gsm.unregisterHandler -- as it should be taken caren by test-layer

Files changed:
M src/Products/PlonePAS/tests/test_membershiptool.py

b"diff --git a/src/Products/PlonePAS/tests/test_membershiptool.py b/src/Products/PlonePAS/tests/test_membershiptool.py\nindex 3bdb6525..70ccd05e 100644\n--- a/src/Products/PlonePAS/tests/test_membershiptool.py\n+++ b/src/Products/PlonePAS/tests/test_membershiptool.py\n@@ -722,8 +722,6 @@ def got_credentials_updated_event(event):\n         self.assertEqual(events_fired[0].principal.getId(), TEST_USER_ID)\n         self.assertEqual(events_fired[0].password, 'guessagain')\n \n-        gsm.unregisterHandler(got_credentials_updated_event)\n-\n \n class TestCreateMemberarea(unittest.TestCase):\n \n"

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2019-12-03T13:46:30+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.PlonePAS/commit/d2274466d7a250e10f8001293157b2e67f6a8b02

Merge pull request #54 from plone/notify_missing_events

Notify CredentialsUpdated event when password is changed

Files changed:
A news/33.bugfix
M src/Products/PlonePAS/plugins/user.py
M src/Products/PlonePAS/tests/test_membershiptool.py

b'diff --git a/news/33.bugfix b/news/33.bugfix\nnew file mode 100644\nindex 00000000..5965b109\n--- /dev/null\n+++ b/news/33.bugfix\n@@ -0,0 +1,2 @@\n+- Notify CredentialsUpdated event when password is changed\n+  [ezvirtual]\ndiff --git a/src/Products/PlonePAS/plugins/user.py b/src/Products/PlonePAS/plugins/user.py\nindex 5a4d8ace..5b51ab42 100644\n--- a/src/Products/PlonePAS/plugins/user.py\n+++ b/src/Products/PlonePAS/plugins/user.py\n@@ -11,9 +11,11 @@\n from Products.PlonePAS.interfaces.capabilities import IPasswordSetCapability\n from Products.PlonePAS.interfaces.plugins import IUserIntrospection\n from Products.PlonePAS.interfaces.plugins import IUserManagement\n+from Products.PluggableAuthService.events import CredentialsUpdated\n from Products.PluggableAuthService.plugins.ZODBUserManager \\\n     import ZODBUserManager as BasePlugin\n from Products.PluggableAuthService.utils import createViewName\n+from zope.event import notify\n from zope.interface import implementer\n \n manage_addUserManagerForm = DTMLFile(\'../zmi/UserManagerForm\', globals())\n@@ -85,6 +87,7 @@ def doChangeUser(self, principal_id, password):\n         if self._user_passwords.get(principal_id) is None:\n             raise RuntimeError("User does not exist: %s" % principal_id)\n         self._user_passwords[principal_id] = AuthEncoding.pw_encrypt(password)\n+        notify(CredentialsUpdated(self.getUserById(principal_id), password))\n \n     # implement interfaces IDeleteCapability, IPasswordSetCapability\n \ndiff --git a/src/Products/PlonePAS/tests/test_membershiptool.py b/src/Products/PlonePAS/tests/test_membershiptool.py\nindex 42d989c8..70ccd05e 100644\n--- a/src/Products/PlonePAS/tests/test_membershiptool.py\n+++ b/src/Products/PlonePAS/tests/test_membershiptool.py\n@@ -23,7 +23,11 @@\n from Products.PlonePAS.tools.memberdata import MemberData\n from Products.PlonePAS.tools.membership import MembershipTool\n from Products.PlonePAS.utils import getGroupsForPrincipal\n+from Products.PluggableAuthService.interfaces.events import \\\n+    ICredentialsUpdatedEvent\n from six import BytesIO\n+from zope.component import adapter\n+from zope.component import getGlobalSiteManager\n from zExceptions import BadRequest\n from plone.app.testing import TEST_USER_ID\n \n@@ -700,6 +704,24 @@ def testGetBadMembers(self):\n                                              TEST_USER_ID)\n         self.assertEqual(self.membership.getBadMembers(), [])\n \n+    def test_credentials_updated_event(self):\n+        events_fired = []\n+\n+        @adapter(ICredentialsUpdatedEvent)\n+        def got_credentials_updated_event(event):\n+            events_fired.append(event)\n+\n+        gsm = getGlobalSiteManager()\n+        gsm.registerHandler(got_credentials_updated_event)\n+\n+        self.assertTrue(self.membership.testCurrentPassword(\'secret\'))\n+        self.assertFalse(self.membership.testCurrentPassword(\'whoknows\'))\n+        login(self.portal, TEST_USER_NAME)  # Back to normal\n+        self.membership.setPassword(\'guessagain\')\n+        self.assertEqual(len(events_fired), 1)\n+        self.assertEqual(events_fired[0].principal.getId(), TEST_USER_ID)\n+        self.assertEqual(events_fired[0].password, \'guessagain\')\n+\n \n class TestCreateMemberarea(unittest.TestCase):\n \n'

