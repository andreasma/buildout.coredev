Repository: plone.app.iterate


Branch: refs/heads/master
Date: 2018-10-05T18:16:06-04:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.iterate/commit/3591f213a0fe4d6b8edaf32c4ef7d6955ef40bdd

Avoid test setup error for layer that uses AT when it's not installed

Files changed:
M plone/app/iterate/testing.py

b'diff --git a/plone/app/iterate/testing.py b/plone/app/iterate/testing.py\nindex 055f5eb..d645ced 100644\n--- a/plone/app/iterate/testing.py\n+++ b/plone/app/iterate/testing.py\n@@ -52,27 +52,31 @@ class PloneAppIterateLayer(PloneSandboxLayer):\n \n     def setUpZope(self, app, configurationContext):\n         """Setup Zope with Addons."""\n-        if HAS_AT:\n-            import Products.ATContentTypes\n-            self.loadZCML(package=Products.ATContentTypes)\n-            z2.installProduct(app, \'Products.ATContentTypes\')\n+        if not HAS_AT:\n+            return\n \n-            z2.installProduct(app, \'Products.Archetypes\')\n-            z2.installProduct(app, \'Products.ATContentTypes\')\n-            z2.installProduct(app, \'plone.app.blob\')\n-            z2.installProduct(app, \'plone.app.collection\')\n+        import Products.ATContentTypes\n+        self.loadZCML(package=Products.ATContentTypes)\n+        z2.installProduct(app, \'Products.ATContentTypes\')\n+\n+        z2.installProduct(app, \'Products.Archetypes\')\n+        z2.installProduct(app, \'Products.ATContentTypes\')\n+        z2.installProduct(app, \'plone.app.blob\')\n+        z2.installProduct(app, \'plone.app.collection\')\n \n         import plone.app.iterate\n         self.loadZCML(package=plone.app.iterate)\n \n     def setUpPloneSite(self, portal):\n         """Setup Plone Site with Addons."""\n+        if not HAS_AT:\n+            return\n+\n         # restore default workflow\n         applyProfile(portal, \'Products.CMFPlone:testfixture\')\n \n-        if HAS_AT:\n-            # add default content\n-            applyProfile(portal, \'Products.ATContentTypes:content\')\n+        # add default content\n+        applyProfile(portal, \'Products.ATContentTypes:content\')\n         applyProfile(portal, \'plone.app.iterate:default\')\n         applyProfile(portal, \'plone.app.iterate:test\')\n \n'

Repository: plone.app.iterate


Branch: refs/heads/master
Date: 2018-10-12T22:36:36-04:00
Author: David Glick (davisagli) <dglick@salesforce.com>
Commit: https://github.com/plone/plone.app.iterate/commit/1de02d08051e92541bd7ccad42b9888c54065c2a

Merge pull request #66 from plone/python3

Avoid test setup error for AT layer when it's not installed

Files changed:
M plone/app/iterate/testing.py

b'diff --git a/plone/app/iterate/testing.py b/plone/app/iterate/testing.py\nindex 055f5eb..d645ced 100644\n--- a/plone/app/iterate/testing.py\n+++ b/plone/app/iterate/testing.py\n@@ -52,27 +52,31 @@ class PloneAppIterateLayer(PloneSandboxLayer):\n \n     def setUpZope(self, app, configurationContext):\n         """Setup Zope with Addons."""\n-        if HAS_AT:\n-            import Products.ATContentTypes\n-            self.loadZCML(package=Products.ATContentTypes)\n-            z2.installProduct(app, \'Products.ATContentTypes\')\n+        if not HAS_AT:\n+            return\n \n-            z2.installProduct(app, \'Products.Archetypes\')\n-            z2.installProduct(app, \'Products.ATContentTypes\')\n-            z2.installProduct(app, \'plone.app.blob\')\n-            z2.installProduct(app, \'plone.app.collection\')\n+        import Products.ATContentTypes\n+        self.loadZCML(package=Products.ATContentTypes)\n+        z2.installProduct(app, \'Products.ATContentTypes\')\n+\n+        z2.installProduct(app, \'Products.Archetypes\')\n+        z2.installProduct(app, \'Products.ATContentTypes\')\n+        z2.installProduct(app, \'plone.app.blob\')\n+        z2.installProduct(app, \'plone.app.collection\')\n \n         import plone.app.iterate\n         self.loadZCML(package=plone.app.iterate)\n \n     def setUpPloneSite(self, portal):\n         """Setup Plone Site with Addons."""\n+        if not HAS_AT:\n+            return\n+\n         # restore default workflow\n         applyProfile(portal, \'Products.CMFPlone:testfixture\')\n \n-        if HAS_AT:\n-            # add default content\n-            applyProfile(portal, \'Products.ATContentTypes:content\')\n+        # add default content\n+        applyProfile(portal, \'Products.ATContentTypes:content\')\n         applyProfile(portal, \'plone.app.iterate:default\')\n         applyProfile(portal, \'plone.app.iterate:test\')\n \n'

