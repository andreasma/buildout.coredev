Repository: plone.api


Branch: refs/heads/master
Date: 2018-03-20T12:51:07+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.api/commit/c950845f07fea19d4b755cbd6085c2e62298ac5a

simplify permission checks

Files changed:
M CHANGES.rst
M src/plone/api/user.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 827330b..394591b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,11 +15,18 @@ New features:
 Bug fixes:
 
 - Call ``processForm`` with ``{None: None}`` dict as values.
-  This prevents ``processForm`` using ``REQUEST.form`` and overwriting 
+  This prevents ``processForm`` using ``REQUEST.form`` and overwriting
   values already set by ``invokeFactory``.
   Fixes `issue 99 <https://github.com/plone/plone.api/issues/99>`_.
   [david-batranu]
 
+- Simplification/minor speedup:
+  Permissions checks now directly use AccessControl.
+  Technical its now exact the same as before.
+  Before a tool lookup was needed, calling a utility function, calling AccessControl.
+  [jensens]
+
+
 
 1.8.3 (2018-02-23)
 ------------------
diff --git a/src/plone/api/user.py b/src/plone/api/user.py
index d08c97c..3b78c3d 100644
--- a/src/plone/api/user.py
+++ b/src/plone/api/user.py
@@ -2,6 +2,7 @@
 """Module that provides functionality for user manipulation."""
 
 from AccessControl.Permission import getPermissions
+from AccessControl.SecurityManagement import getSecurityManager
 from contextlib import contextmanager
 from plone.api import env
 from plone.api import portal
@@ -296,15 +297,10 @@ def get_permissions(username=None, user=None, obj=None):
     else:
         context = env.adopt_user(username, user)
 
-    result = {}
     with context:
-        portal_membership = portal.get_tool('portal_membership')
-        permissions = (permission[0] for permission in getPermissions())
-        for permission in permissions:
-            result[permission] = bool(
-                portal_membership.checkPermission(permission, obj),
-            )
-
+        sm = getSecurityManager()
+        pms = (record[0] for record in getPermissions())
+        result = {pm: bool(sm.checkPermission(pm, obj)) for pm in pms}
     return result
 
 
@@ -340,8 +336,7 @@ def has_permission(permission, username=None, user=None, obj=None):
         context = env.adopt_user(username, user)
 
     with context:
-        portal_membership = portal.get_tool('portal_membership')
-        return bool(portal_membership.checkPermission(permission, obj))
+        return bool(getSecurityManager().checkPermission(permission, obj))
 
 
 @required_parameters('roles')


Repository: plone.api


Branch: refs/heads/master
Date: 2018-03-20T14:03:29+01:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.api/commit/63b1103b1fa929b78f4775db73d896ccf5a92543

Merge pull request #399 from plone/jensens/simplify-permissionchecks

Simplification/minor speedup: user.* permission checks

Files changed:
M CHANGES.rst
M src/plone/api/user.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 827330b..394591b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -15,11 +15,18 @@ New features:
 Bug fixes:
 
 - Call ``processForm`` with ``{None: None}`` dict as values.
-  This prevents ``processForm`` using ``REQUEST.form`` and overwriting 
+  This prevents ``processForm`` using ``REQUEST.form`` and overwriting
   values already set by ``invokeFactory``.
   Fixes `issue 99 <https://github.com/plone/plone.api/issues/99>`_.
   [david-batranu]
 
+- Simplification/minor speedup:
+  Permissions checks now directly use AccessControl.
+  Technical its now exact the same as before.
+  Before a tool lookup was needed, calling a utility function, calling AccessControl.
+  [jensens]
+
+
 
 1.8.3 (2018-02-23)
 ------------------
diff --git a/src/plone/api/user.py b/src/plone/api/user.py
index d08c97c..3b78c3d 100644
--- a/src/plone/api/user.py
+++ b/src/plone/api/user.py
@@ -2,6 +2,7 @@
 """Module that provides functionality for user manipulation."""
 
 from AccessControl.Permission import getPermissions
+from AccessControl.SecurityManagement import getSecurityManager
 from contextlib import contextmanager
 from plone.api import env
 from plone.api import portal
@@ -296,15 +297,10 @@ def get_permissions(username=None, user=None, obj=None):
     else:
         context = env.adopt_user(username, user)
 
-    result = {}
     with context:
-        portal_membership = portal.get_tool('portal_membership')
-        permissions = (permission[0] for permission in getPermissions())
-        for permission in permissions:
-            result[permission] = bool(
-                portal_membership.checkPermission(permission, obj),
-            )
-
+        sm = getSecurityManager()
+        pms = (record[0] for record in getPermissions())
+        result = {pm: bool(sm.checkPermission(pm, obj)) for pm in pms}
     return result
 
 
@@ -340,8 +336,7 @@ def has_permission(permission, username=None, user=None, obj=None):
         context = env.adopt_user(username, user)
 
     with context:
-        portal_membership = portal.get_tool('portal_membership')
-        return bool(portal_membership.checkPermission(permission, obj))
+        return bool(getSecurityManager().checkPermission(permission, obj))
 
 
 @required_parameters('roles')


