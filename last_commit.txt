Repository: Products.statusmessages


Branch: refs/heads/master
Date: 2018-03-24T14:40:19+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.statusmessages/commit/857a22455616818922036f1497798c8152a326ed

fix statusmessages in py3

Files changed:
M Products/statusmessages/adapter.py
M Products/statusmessages/message.py

diff --git a/Products/statusmessages/adapter.py b/Products/statusmessages/adapter.py
index 02cc196..d57f3fb 100644
--- a/Products/statusmessages/adapter.py
+++ b/Products/statusmessages/adapter.py
@@ -9,6 +9,7 @@
 
 import binascii
 import logging
+import six
 
 
 logger = logging.getLogger('statusmessages')
@@ -86,7 +87,7 @@ def _encodeCookieValue(text, type, old=None):
     if message not in results:
         results.append(message)
 
-    messages = ''.join([r.encode() for r in results])
+    messages = b''.join([r.encode() for r in results])
     return binascii.b2a_base64(messages).rstrip()
 
 
diff --git a/Products/statusmessages/message.py b/Products/statusmessages/message.py
index c5dbd44..017fbea 100644
--- a/Products/statusmessages/message.py
+++ b/Products/statusmessages/message.py
@@ -83,7 +83,7 @@ def encode(self):
         size = (len(message) << 5) + (len(type) & 31)  # pack into 16 bits
 
         return struct.pack(
-            b'!H{0}s{1}s'.format(len(message), len(type)),
+            '!H{0}s{1}s'.format(len(message), len(type)),
             size,
             message,
             type,


Repository: Products.statusmessages


Branch: refs/heads/master
Date: 2018-04-01T01:14:49+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.statusmessages/commit/d70875ccf36f3f9928a5dc674018ab20caa038b1

ugly fix for formating cookies

Files changed:
M Products/statusmessages/adapter.py
M Products/statusmessages/message.py

diff --git a/Products/statusmessages/adapter.py b/Products/statusmessages/adapter.py
index d57f3fb..99b2e1e 100644
--- a/Products/statusmessages/adapter.py
+++ b/Products/statusmessages/adapter.py
@@ -88,7 +88,9 @@ def _encodeCookieValue(text, type, old=None):
         results.append(message)
 
     messages = b''.join([r.encode() for r in results])
-    return binascii.b2a_base64(messages).rstrip()
+    bin_value = binascii.b2a_base64(messages).rstrip()
+    # remove the stupid b that will lead to values like "b'AYR...'"
+    return bin_value.decode('utf-8')
 
 
 def _decodeCookieValue(string):
diff --git a/Products/statusmessages/message.py b/Products/statusmessages/message.py
index 017fbea..6af7b25 100644
--- a/Products/statusmessages/message.py
+++ b/Products/statusmessages/message.py
@@ -10,7 +10,7 @@
 def _utf8(value):
     if isinstance(value, six.text_type):
         return value.encode('utf-8')
-    elif isinstance(value, str):
+    elif isinstance(value, six.binary_type):
         return value
     return ''
 


Repository: Products.statusmessages


Branch: refs/heads/master
Date: 2018-04-11T10:55:20+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.statusmessages/commit/28e6df34256921234dce6f7e3d0da3d8ecd57e9a

six import superfluos in here

Files changed:
M Products/statusmessages/adapter.py

diff --git a/Products/statusmessages/adapter.py b/Products/statusmessages/adapter.py
index 99b2e1e..2917820 100644
--- a/Products/statusmessages/adapter.py
+++ b/Products/statusmessages/adapter.py
@@ -9,7 +9,6 @@
 
 import binascii
 import logging
-import six
 
 
 logger = logging.getLogger('statusmessages')


Repository: Products.statusmessages


Branch: refs/heads/master
Date: 2018-04-11T12:26:00+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.statusmessages/commit/12c22d9330ff0bfe382f651cc5423e42b8978103

Merge pull request #9 from plone/python3

Python 3

Files changed:
M Products/statusmessages/adapter.py
M Products/statusmessages/message.py

diff --git a/Products/statusmessages/adapter.py b/Products/statusmessages/adapter.py
index 02cc196..2917820 100644
--- a/Products/statusmessages/adapter.py
+++ b/Products/statusmessages/adapter.py
@@ -86,8 +86,10 @@ def _encodeCookieValue(text, type, old=None):
     if message not in results:
         results.append(message)
 
-    messages = ''.join([r.encode() for r in results])
-    return binascii.b2a_base64(messages).rstrip()
+    messages = b''.join([r.encode() for r in results])
+    bin_value = binascii.b2a_base64(messages).rstrip()
+    # remove the stupid b that will lead to values like "b'AYR...'"
+    return bin_value.decode('utf-8')
 
 
 def _decodeCookieValue(string):
diff --git a/Products/statusmessages/message.py b/Products/statusmessages/message.py
index c5dbd44..6af7b25 100644
--- a/Products/statusmessages/message.py
+++ b/Products/statusmessages/message.py
@@ -10,7 +10,7 @@
 def _utf8(value):
     if isinstance(value, six.text_type):
         return value.encode('utf-8')
-    elif isinstance(value, str):
+    elif isinstance(value, six.binary_type):
         return value
     return ''
 
@@ -83,7 +83,7 @@ def encode(self):
         size = (len(message) << 5) + (len(type) & 31)  # pack into 16 bits
 
         return struct.pack(
-            b'!H{0}s{1}s'.format(len(message), len(type)),
+            '!H{0}s{1}s'.format(len(message), len(type)),
             size,
             message,
             type,


