Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-06-07T15:23:05+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/a6420fe9db24e5f055265a45a48aa12ed565f3c8

Behavior should be saved as native strings

Fixes #296
Closes plone/Products.CMFPlone#2881

Files changed:
A news/296.bugfix
M plone/app/dexterity/browser/behaviors.py
M plone/app/dexterity/tests/editing.rst

b'diff --git a/news/296.bugfix b/news/296.bugfix\nnew file mode 100644\nindex 0000000..be85e20\n--- /dev/null\n+++ b/news/296.bugfix\n@@ -0,0 +1 @@\n+The @@behaviors form was wrongly encoding the added behavior names on Python3 [ale-rt]\ndiff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex a76de50..739c651 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -21,6 +21,23 @@\n import six\n \n \n+try:\n+    from Products.CMFPlone.utils import safe_nativestring\n+except ImportError:\n+    # Not needed for Products.CMFPlone >= 5.2a1\n+    from Products.CMFPlone.utils import safe_encode\n+    from Products.CMFPlone.utils import safe_unicode\n+\n+    def safe_nativestring(value, encoding=\'utf-8\'):\n+        """Convert a value to str in py2 and to text in py3\n+        """\n+        if six.PY2 and isinstance(value, six.text_type):\n+            value = safe_encode(value, encoding)\n+        if not six.PY2 and isinstance(value, six.binary_type):\n+            value = safe_unicode(value, encoding)\n+        return value\n+\n+\n TTW_BEHAVIOR_BLACKLIST = [\n     # skip deprecated behavior\n     \'plone.app.dexterity.behaviors.related.IRelatedItems\',\n@@ -53,14 +70,13 @@ def __setattr__(self, name, value):\n         behaviors = list(self.fti.behaviors)\n         reg = lookup_behavior_registration(name=name)\n         iid = reg.interface.__identifier__\n-\n         if reg.name:\n             # behavior has a name -> use it\n             # but first remove the dotted behavior if present\n             if iid in self.fti.behaviors:\n                 behaviors.remove(iid)\n             # prepare named behavior for add/remove\n-            bname = reg.name.encode(\'utf8\')\n+            bname = safe_nativestring(reg.name)\n         else:\n             # no name found -> prepare dotted behavior for add/remove instead\n             bname = iid\ndiff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 8391cce..9955ba5 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -264,6 +264,17 @@ FTI::\n   >>> \'plone.namefromtitle\' in portal.portal_types.plonista.behaviors\n   True\n \n+Let\'s enable one that is not enable and make sure that\n+the change is reflected on the FTI::\n+\n+  >>> sorted(portal.portal_types.plonista.behaviors)\n+  [\'plone.dublincore\', \'plone.namefromtitle\']\n+  >>> \'plone.versioning\' in portal.portal_types.plonista.behaviors\n+  False\n+  >>> browser.getControl(name=\'form.widgets.plone.versioning:list\').value = "selected"\n+  >>> browser.getControl(\'Save\').click()\n+  >>> sorted(portal.portal_types.plonista.behaviors)\n+  [\'plone.dublincore\', \'plone.namefromtitle\', \'plone.versioning\']\n \n Viewing a non-editable schema\n -----------------------------\n@@ -557,4 +568,3 @@ file::\n       ...\n       </schema>\n     </model>\n-\n'

