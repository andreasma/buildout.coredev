Repository: plone.app.customerize


Branch: refs/heads/master
Date: 2018-06-12T13:25:06+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.customerize/commit/ff054dd3c70fb8fbe5e26f9f656b17f777f7d340

fix templateViewRegistrationGroups and tests in py3

Files changed:
M plone/app/customerize/registration.py
M plone/app/customerize/tests/testBrowserLayers.txt
M plone/app/customerize/tests/testDocTests.py

b'diff --git a/plone/app/customerize/registration.py b/plone/app/customerize/registration.py\nindex 2b37d55..02e00bb 100644\n--- a/plone/app/customerize/registration.py\n+++ b/plone/app/customerize/registration.py\n@@ -13,6 +13,7 @@\n from zope.component import getUtility\n from zope.publisher.interfaces.browser import IBrowserRequest\n from zope.viewlet.interfaces import IViewlet\n+from operator import itemgetter\n \n \n def getViews(type):\n@@ -106,10 +107,9 @@ def templateViewRegistrationInfos(regs, mangle=True):\n \n def templateViewRegistrationGroups(regs, mangle=True):\n     ifaces = {}\n-    comp = lambda a, b: cmp(a[\'viewname\'], b[\'viewname\'])\n     registrations = sorted(\n         templateViewRegistrationInfos(regs, mangle=mangle),\n-        cmp=comp\n+        key=itemgetter(\'viewname\')\n     )\n     for reg in registrations:\n         key = reg[\'for\']\n@@ -117,7 +117,7 @@ def templateViewRegistrationGroups(regs, mangle=True):\n             ifaces[key][\'views\'].append(reg)\n         else:\n             ifaces[key] = {\'name\': key, \'views\': [reg]}\n-    return sorted(ifaces.values(), cmp=lambda a, b: cmp(a[\'name\'], b[\'name\']))\n+    return sorted(ifaces.values(), key=itemgetter(\'name\'))\n \n \n def findTemplateViewRegistration(required, viewname):\ndiff --git a/plone/app/customerize/tests/testBrowserLayers.txt b/plone/app/customerize/tests/testBrowserLayers.txt\nindex ce37b37..2077917 100644\n--- a/plone/app/customerize/tests/testBrowserLayers.txt\n+++ b/plone/app/customerize/tests/testBrowserLayers.txt\n@@ -23,12 +23,12 @@ product is installed, we cannot view the view, though:\n   >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n   Traceback (most recent call last):\n   ...\n-  NotFound: ...\n+  zExceptions.NotFound: ...\n \n We can view a view registered for the default layer, though:\n \n   >>> browser.open(\'http://nohost/plone/@@standard-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   a standard view\n \n At this time only the latter should be customerizable:\n@@ -51,11 +51,11 @@ should also show up as being customizable:\n   >>> transaction.commit()\n \n   >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   a local view\n \n   >>> browser.open(\'http://nohost/plone/@@standard-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   a standard view\n \n   >>> browser.open(\'http://nohost/plone/portal_view_customizations/registrations.html\')\n@@ -154,7 +154,7 @@ We click the "customize" button, enter some new content, and save the changes:\n   Now we look at the view we just customized:\n \n   >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   customized view\n \n And now let\'s do the same with a viewlet:\n@@ -180,6 +180,7 @@ And now let\'s do the same with a viewlet:\n    \'http://nohost/plone/portal_view_customizations/zope.interface.interface-layer-test-viewlet\'\n    >>> browser.contents\n    \'...Saved changes...\'\n+   >>> browser.handleErrors = False\n    >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n    >>> browser.open(\'http://nohost/plone/\')\n    >>> browser.contents\n@@ -231,7 +232,7 @@ only the locally registered view and viewlet:\n   >>> without_layer.issubset(with_layer)\n   True\n   >>> sorted(list(with_layer.difference(without_layer)))\n-  [\'layer-test-view\', u\'layer-test-viewlet\']\n+  [\'layer-test-view\', \'layer-test-viewlet\']\n \n   .. _extension: http://dev.plone.org/plone/changeset/20088\n \ndiff --git a/plone/app/customerize/tests/testDocTests.py b/plone/app/customerize/tests/testDocTests.py\nindex ef7700b..11dfddc 100644\n--- a/plone/app/customerize/tests/testDocTests.py\n+++ b/plone/app/customerize/tests/testDocTests.py\n@@ -4,6 +4,17 @@\n from unittest import TestSuite\n \n import doctest\n+import re\n+import six\n+\n+\n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub(\'zExceptions.NotFound\', \'NotFound\', got)\n+        else:\n+            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \n def test_suite():\n@@ -16,6 +27,7 @@ def test_suite():\n                     testfile,\n                     optionflags=OPTIONFLAGS,\n                     package=\'plone.app.customerize.tests\',\n+                    checker=Py23DocChecker(),\n                 ),\n                 layer=PLONE_APP_CUSTOMERIZE_FUNCTIONAL_TESTING\n             )\n'

Repository: plone.app.customerize


Branch: refs/heads/master
Date: 2018-06-13T11:01:34+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.customerize/commit/0cba5c5c84f5fc85aa5697d4512c1386bde45d33

fix doctests for py2

Files changed:
M plone/app/customerize/tests/testDocTests.py

b'diff --git a/plone/app/customerize/tests/testDocTests.py b/plone/app/customerize/tests/testDocTests.py\nindex 11dfddc..cd51685 100644\n--- a/plone/app/customerize/tests/testDocTests.py\n+++ b/plone/app/customerize/tests/testDocTests.py\n@@ -12,8 +12,7 @@ class Py23DocChecker(doctest.OutputChecker):\n     def check_output(self, want, got, optionflags):\n         if six.PY2:\n             got = re.sub(\'zExceptions.NotFound\', \'NotFound\', got)\n-        else:\n-            want = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n         return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \n'

Repository: plone.app.customerize


Branch: refs/heads/master
Date: 2018-06-26T23:58:16+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.customerize/commit/e5659b6c0f89ce1e4a0e68def24e01213143a907

InitializeClass was moved to AccessControl.class_init

Files changed:
M plone/app/customerize/tool.py

b'diff --git a/plone/app/customerize/tool.py b/plone/app/customerize/tool.py\nindex f9673d1..3c8a7ba 100644\n--- a/plone/app/customerize/tool.py\n+++ b/plone/app/customerize/tool.py\n@@ -1,6 +1,6 @@\n # -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n-from App.class_init import InitializeClass\n+from AccessControl.class_init import InitializeClass\n from five.customerize.interfaces import IViewTemplateContainer\n from OFS.Folder import Folder\n from Products.CMFCore.permissions import ManagePortal\n'

Repository: plone.app.customerize


Branch: refs/heads/master
Date: 2018-09-14T17:34:48+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.customerize/commit/b621f14d7a2966cc9546bcb69bb6691b0132aa55

add changenote and classifiers

Files changed:
M CHANGES.rst
M setup.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 606528b..3c6692d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -15,7 +15,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix templateViewRegistrationGroups and tests in py3.\n+  [pbauer]\n \n \n 1.3.7 (2017-02-05)\ndiff --git a/setup.py b/setup.py\nindex 53fa84c..34ad987 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -17,6 +17,7 @@\n         'Framework :: Plone',\n         'Framework :: Plone :: 5.0',\n         'Framework :: Plone :: 5.1',\n+        'Framework :: Plone :: 5.2',\n         'Framework :: Zope2',\n         'Intended Audience :: Other Audience',\n         'Intended Audience :: System Administrators',\n@@ -24,6 +25,8 @@\n         'Operating System :: OS Independent',\n         'Programming Language :: Python',\n         'Programming Language :: Python :: 2.7',\n+        'Programming Language :: Python :: 3.6',\n+        'Programming Language :: Python :: 3.7',\n         'Topic :: Internet :: WWW/HTTP :: Site Management',\n     ],\n     keywords='customerize plone views page templates zmi',\n@@ -38,6 +41,7 @@\n         test=[\n             'plone.app.layout',\n             'plone.app.testing',\n+            'six',\n             'zope.testing',\n         ]\n     ),\n"

Repository: plone.app.customerize


Branch: refs/heads/master
Date: 2018-10-01T00:28:40+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.customerize/commit/4da27fed9ea9104317a6d165a58ad94400655b03

fix tests in py2

Files changed:
M plone/app/customerize/tests/testCustomizeView.txt

b"diff --git a/plone/app/customerize/tests/testCustomizeView.txt b/plone/app/customerize/tests/testCustomizeView.txt\nindex 4f476be..660f78f 100644\n--- a/plone/app/customerize/tests/testCustomizeView.txt\n+++ b/plone/app/customerize/tests/testCustomizeView.txt\n@@ -62,8 +62,8 @@ This is mainly useful for code which wants the view_name anyhow.\n Now we look at the view we just customized.  To do so we browse the view\n registrations overview again and select another template for customization:\n \n-  >>> browser.getLink('portal_view_customizations').click()\n-  >>> browser.getLink('registrations.html').click()\n+  >>> browser.open('http://nohost/plone/portal_view_customizations/registrations.html')\n+  >>> browser.getLink('registrations.html', index=0).click()\n   >>> browser.contents\n   '...you lose!...'\n \n"

Repository: plone.app.customerize


Branch: refs/heads/master
Date: 2018-10-01T08:02:21+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.customerize/commit/2999e0c2e7b5b4aaf6dcf19a033fd7fb259b2976

Merge pull request #15 from plone/python3

fix templateViewRegistrationGroups and tests in py3

Files changed:
M CHANGES.rst
M plone/app/customerize/registration.py
M plone/app/customerize/tests/testBrowserLayers.txt
M plone/app/customerize/tests/testCustomizeView.txt
M plone/app/customerize/tests/testDocTests.py
M plone/app/customerize/tool.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 606528b..3c6692d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -15,7 +15,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix templateViewRegistrationGroups and tests in py3.\n+  [pbauer]\n \n \n 1.3.7 (2017-02-05)\ndiff --git a/plone/app/customerize/registration.py b/plone/app/customerize/registration.py\nindex 2b37d55..02e00bb 100644\n--- a/plone/app/customerize/registration.py\n+++ b/plone/app/customerize/registration.py\n@@ -13,6 +13,7 @@\n from zope.component import getUtility\n from zope.publisher.interfaces.browser import IBrowserRequest\n from zope.viewlet.interfaces import IViewlet\n+from operator import itemgetter\n \n \n def getViews(type):\n@@ -106,10 +107,9 @@ def templateViewRegistrationInfos(regs, mangle=True):\n \n def templateViewRegistrationGroups(regs, mangle=True):\n     ifaces = {}\n-    comp = lambda a, b: cmp(a[\'viewname\'], b[\'viewname\'])\n     registrations = sorted(\n         templateViewRegistrationInfos(regs, mangle=mangle),\n-        cmp=comp\n+        key=itemgetter(\'viewname\')\n     )\n     for reg in registrations:\n         key = reg[\'for\']\n@@ -117,7 +117,7 @@ def templateViewRegistrationGroups(regs, mangle=True):\n             ifaces[key][\'views\'].append(reg)\n         else:\n             ifaces[key] = {\'name\': key, \'views\': [reg]}\n-    return sorted(ifaces.values(), cmp=lambda a, b: cmp(a[\'name\'], b[\'name\']))\n+    return sorted(ifaces.values(), key=itemgetter(\'name\'))\n \n \n def findTemplateViewRegistration(required, viewname):\ndiff --git a/plone/app/customerize/tests/testBrowserLayers.txt b/plone/app/customerize/tests/testBrowserLayers.txt\nindex ce37b37..2077917 100644\n--- a/plone/app/customerize/tests/testBrowserLayers.txt\n+++ b/plone/app/customerize/tests/testBrowserLayers.txt\n@@ -23,12 +23,12 @@ product is installed, we cannot view the view, though:\n   >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n   Traceback (most recent call last):\n   ...\n-  NotFound: ...\n+  zExceptions.NotFound: ...\n \n We can view a view registered for the default layer, though:\n \n   >>> browser.open(\'http://nohost/plone/@@standard-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   a standard view\n \n At this time only the latter should be customerizable:\n@@ -51,11 +51,11 @@ should also show up as being customizable:\n   >>> transaction.commit()\n \n   >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   a local view\n \n   >>> browser.open(\'http://nohost/plone/@@standard-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   a standard view\n \n   >>> browser.open(\'http://nohost/plone/portal_view_customizations/registrations.html\')\n@@ -154,7 +154,7 @@ We click the "customize" button, enter some new content, and save the changes:\n   Now we look at the view we just customized:\n \n   >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n-  >>> print browser.contents\n+  >>> print(browser.contents)\n   customized view\n \n And now let\'s do the same with a viewlet:\n@@ -180,6 +180,7 @@ And now let\'s do the same with a viewlet:\n    \'http://nohost/plone/portal_view_customizations/zope.interface.interface-layer-test-viewlet\'\n    >>> browser.contents\n    \'...Saved changes...\'\n+   >>> browser.handleErrors = False\n    >>> browser.open(\'http://nohost/plone/@@layer-test-view\')\n    >>> browser.open(\'http://nohost/plone/\')\n    >>> browser.contents\n@@ -231,7 +232,7 @@ only the locally registered view and viewlet:\n   >>> without_layer.issubset(with_layer)\n   True\n   >>> sorted(list(with_layer.difference(without_layer)))\n-  [\'layer-test-view\', u\'layer-test-viewlet\']\n+  [\'layer-test-view\', \'layer-test-viewlet\']\n \n   .. _extension: http://dev.plone.org/plone/changeset/20088\n \ndiff --git a/plone/app/customerize/tests/testCustomizeView.txt b/plone/app/customerize/tests/testCustomizeView.txt\nindex 4f476be..660f78f 100644\n--- a/plone/app/customerize/tests/testCustomizeView.txt\n+++ b/plone/app/customerize/tests/testCustomizeView.txt\n@@ -62,8 +62,8 @@ This is mainly useful for code which wants the view_name anyhow.\n Now we look at the view we just customized.  To do so we browse the view\n registrations overview again and select another template for customization:\n \n-  >>> browser.getLink(\'portal_view_customizations\').click()\n-  >>> browser.getLink(\'registrations.html\').click()\n+  >>> browser.open(\'http://nohost/plone/portal_view_customizations/registrations.html\')\n+  >>> browser.getLink(\'registrations.html\', index=0).click()\n   >>> browser.contents\n   \'...you lose!...\'\n \ndiff --git a/plone/app/customerize/tests/testDocTests.py b/plone/app/customerize/tests/testDocTests.py\nindex ef7700b..cd51685 100644\n--- a/plone/app/customerize/tests/testDocTests.py\n+++ b/plone/app/customerize/tests/testDocTests.py\n@@ -4,6 +4,16 @@\n from unittest import TestSuite\n \n import doctest\n+import re\n+import six\n+\n+\n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub(\'zExceptions.NotFound\', \'NotFound\', got)\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n \n \n def test_suite():\n@@ -16,6 +26,7 @@ def test_suite():\n                     testfile,\n                     optionflags=OPTIONFLAGS,\n                     package=\'plone.app.customerize.tests\',\n+                    checker=Py23DocChecker(),\n                 ),\n                 layer=PLONE_APP_CUSTOMERIZE_FUNCTIONAL_TESTING\n             )\ndiff --git a/plone/app/customerize/tool.py b/plone/app/customerize/tool.py\nindex f9673d1..3c8a7ba 100644\n--- a/plone/app/customerize/tool.py\n+++ b/plone/app/customerize/tool.py\n@@ -1,6 +1,6 @@\n # -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n-from App.class_init import InitializeClass\n+from AccessControl.class_init import InitializeClass\n from five.customerize.interfaces import IViewTemplateContainer\n from OFS.Folder import Folder\n from Products.CMFCore.permissions import ManagePortal\ndiff --git a/setup.py b/setup.py\nindex 53fa84c..34ad987 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -17,6 +17,7 @@\n         \'Framework :: Plone\',\n         \'Framework :: Plone :: 5.0\',\n         \'Framework :: Plone :: 5.1\',\n+        \'Framework :: Plone :: 5.2\',\n         \'Framework :: Zope2\',\n         \'Intended Audience :: Other Audience\',\n         \'Intended Audience :: System Administrators\',\n@@ -24,6 +25,8 @@\n         \'Operating System :: OS Independent\',\n         \'Programming Language :: Python\',\n         \'Programming Language :: Python :: 2.7\',\n+        \'Programming Language :: Python :: 3.6\',\n+        \'Programming Language :: Python :: 3.7\',\n         \'Topic :: Internet :: WWW/HTTP :: Site Management\',\n     ],\n     keywords=\'customerize plone views page templates zmi\',\n@@ -38,6 +41,7 @@\n         test=[\n             \'plone.app.layout\',\n             \'plone.app.testing\',\n+            \'six\',\n             \'zope.testing\',\n         ]\n     ),\n'

