Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-07-19T22:42:25+02:00
Author: Filippo Campi (eikichi18) <filippo.campi@redturtle.it>
Commit: https://github.com/plone/plone.app.querystring/commit/1941d51e17c74bbf8c18aa7366fa3c46e2f8b912

Removed check if query url start with root's url

Files changed:
M plone/app/querystring/queryparser.py

b"diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex b0ae6db..628baf4 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -290,8 +290,8 @@ def _pathByRoot(root, context, row):\n         # It must be a UID\n         values = getPathByUID(context, values)\n     # take care of absolute paths without root\n-    if not values.startswith(root):\n-        values = root + values\n+    # if not values.startswith(root):\n+    values = root + values\n     query = {}\n     if depth is not None:\n         query['depth'] = depth\n"

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-07-20T12:13:40+02:00
Author: Filippo Campi (eikichi18) <filippo.campi@redturtle.it>
Commit: https://github.com/plone/plone.app.querystring/commit/960b24ab6a82e68f250dbcb1d5fa344e33975949

Fixed the check for when to add root to values + run test

Files changed:
M plone/app/querystring/queryparser.py

b"diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex 628baf4..c6fcd29 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -278,6 +278,7 @@ def _afterRelativeDate(context, row):\n \n \n def _pathByRoot(root, context, row):\n+    operator = row.operator\n     values = row.values\n     depth = None\n     if '::' in values:\n@@ -290,14 +291,16 @@ def _pathByRoot(root, context, row):\n         # It must be a UID\n         values = getPathByUID(context, values)\n     # take care of absolute paths without root\n-    # if not values.startswith(root):\n-    values = root + values\n+    if not values.startswith(root + '/'):\n+        values = root + values\n     query = {}\n     if depth is not None:\n         query['depth'] = depth\n         # when a depth value is specified, a trailing slash matters on the\n         # query\n         values = values.rstrip('/')\n+    if operator == '_relativePath':\n+        values = values.rstrip('/')\n     query['query'] = [values]\n     return {row.index: query}\n \n@@ -336,7 +339,7 @@ def _relativePath(context, row):\n \n     row = Row(index=row.index,\n               operator=row.operator,\n-              values='/'.join(obj.getPhysicalPath()) + depthstr)\n+              values='/'.join(obj.getPhysicalPath()) + '/' + depthstr)\n \n     return _absolutePath(context, row)\n \n"

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-07-20T14:32:50+02:00
Author: Filippo Campi (eikichi18) <filippo.campi@redturtle.it>
Commit: https://github.com/plone/plone.app.querystring/commit/e75534815d4ba63ee6245bcb32125d56cbb189b7

added test for new case + updated CHANGES

Files changed:
M CHANGES.rst
M plone/app/querystring/tests/testQueryParser.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0d60650..05b897b 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -4,17 +4,10 @@ Changelog\n 1.4.9 (unreleased)\n ------------------\n \n-Breaking changes:\n-\n-- *add item here*\n-\n-New features:\n-\n-- *add item here*\n-\n Bug fixes:\n \n-- *add item here*\n+- Fix a case, where objects id starts with roots id\n+  [eikichi18]\n \n \n 1.4.8 (2018-02-05)\ndiff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py\nindex 45a5700..aa97525 100644\n--- a/plone/app/querystring/tests/testQueryParser.py\n+++ b/plone/app/querystring/tests/testQueryParser.py\n@@ -610,3 +610,14 @@ def test__relativePath(self):\n     def test_getPathByUID(self):\n         actual = queryparser.getPathByUID(MockSite(), '00000000000000001')\n         self.assertEqual(actual, '/site/foo')\n+        \n+    def test_objStartWithSiteId(self):\n+        data = Row(\n+            index='path',\n+            operator='_path',\n+            values='/{0}-news/'.format(MOCK_SITE_ID)\n+        )\n+        parsed = queryparser._absolutePath(MockSite(), data)\n+        expected = {'path': {'query': ['/{0}/{1}-news/'.format(MOCK_SITE_ID, MOCK_SITE_ID)]}}\n+        self.assertEqual(parsed, expected)\n+        \n"

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-07-20T18:04:00+02:00
Author: Filippo Campi (eikichi18) <filippo.campi@redturtle.it>
Commit: https://github.com/plone/plone.app.querystring/commit/8fcf180487168194e409358debfd5556942a68b7

fix tests name

Files changed:
M plone/app/querystring/tests/testQueryParser.py

b"diff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py\nindex aa97525..cfe4263 100644\n--- a/plone/app/querystring/tests/testQueryParser.py\n+++ b/plone/app/querystring/tests/testQueryParser.py\n@@ -611,7 +611,7 @@ def test_getPathByUID(self):\n         actual = queryparser.getPathByUID(MockSite(), '00000000000000001')\n         self.assertEqual(actual, '/site/foo')\n         \n-    def test_objStartWithSiteId(self):\n+    def test_objStartsWithSiteId(self):\n         data = Row(\n             index='path',\n             operator='_path',\n"

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-09-03T16:22:20+02:00
Author: Filippo Campi (eikichi18) <filippo.campi@redturtle.it>
Commit: https://github.com/plone/plone.app.querystring/commit/6cd37f4d8511fc7df913afc602dc76091bc0f30e

[fix] fixed check when add values to root

Files changed:
M plone/app/querystring/queryparser.py

b"diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex c6fcd29..5cbf5e7 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -291,7 +291,7 @@ def _pathByRoot(root, context, row):\n         # It must be a UID\n         values = getPathByUID(context, values)\n     # take care of absolute paths without root\n-    if not values.startswith(root + '/'):\n+    if not values.startswith(root + '/') and values != root:\n         values = root + values\n     query = {}\n     if depth is not None:\n"

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-09-04T17:40:50+02:00
Author: Filippo Campi (eikichi18) <filippo.campi@redturtle.it>
Commit: https://github.com/plone/plone.app.querystring/commit/7091804b6f09591fc7a0afa7241d309819dcd460

[fix] removed useless check

Files changed:
M plone/app/querystring/queryparser.py

b"diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex 5cbf5e7..df3d8b2 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -278,7 +278,6 @@ def _afterRelativeDate(context, row):\n \n \n def _pathByRoot(root, context, row):\n-    operator = row.operator\n     values = row.values\n     depth = None\n     if '::' in values:\n@@ -299,8 +298,6 @@ def _pathByRoot(root, context, row):\n         # when a depth value is specified, a trailing slash matters on the\n         # query\n         values = values.rstrip('/')\n-    if operator == '_relativePath':\n-        values = values.rstrip('/')\n     query['query'] = [values]\n     return {row.index: query}\n \n@@ -339,7 +336,7 @@ def _relativePath(context, row):\n \n     row = Row(index=row.index,\n               operator=row.operator,\n-              values='/'.join(obj.getPhysicalPath()) + '/' + depthstr)\n+              values='/'.join(obj.getPhysicalPath()) + depthstr)\n \n     return _absolutePath(context, row)\n \n"

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2018-09-05T09:16:31+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/c0f0cc4337453aa809c701356110a04152e36804

Merge pull request #90 from eikichi18/filippo-fix-foldercontents-query

Fix foldercontents query

Files changed:
M CHANGES.rst
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0d60650..05b897b 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -4,17 +4,10 @@ Changelog\n 1.4.9 (unreleased)\n ------------------\n \n-Breaking changes:\n-\n-- *add item here*\n-\n-New features:\n-\n-- *add item here*\n-\n Bug fixes:\n \n-- *add item here*\n+- Fix a case, where objects id starts with roots id\n+  [eikichi18]\n \n \n 1.4.8 (2018-02-05)\ndiff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex b0ae6db..df3d8b2 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -290,7 +290,7 @@ def _pathByRoot(root, context, row):\n         # It must be a UID\n         values = getPathByUID(context, values)\n     # take care of absolute paths without root\n-    if not values.startswith(root):\n+    if not values.startswith(root + '/') and values != root:\n         values = root + values\n     query = {}\n     if depth is not None:\ndiff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py\nindex 45a5700..cfe4263 100644\n--- a/plone/app/querystring/tests/testQueryParser.py\n+++ b/plone/app/querystring/tests/testQueryParser.py\n@@ -610,3 +610,14 @@ def test__relativePath(self):\n     def test_getPathByUID(self):\n         actual = queryparser.getPathByUID(MockSite(), '00000000000000001')\n         self.assertEqual(actual, '/site/foo')\n+        \n+    def test_objStartsWithSiteId(self):\n+        data = Row(\n+            index='path',\n+            operator='_path',\n+            values='/{0}-news/'.format(MOCK_SITE_ID)\n+        )\n+        parsed = queryparser._absolutePath(MockSite(), data)\n+        expected = {'path': {'query': ['/{0}/{1}-news/'.format(MOCK_SITE_ID, MOCK_SITE_ID)]}}\n+        self.assertEqual(parsed, expected)\n+        \n"

