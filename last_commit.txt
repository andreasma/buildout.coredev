Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T11:55:31+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.api/commit/85e7a703c6caf668db7b4a392db131a40df53980

first stab at getting test to trun on py3

Files changed:
M docs/content.rst
M docs/env.rst
M docs/group.rst
M src/plone/api/content.py
M src/plone/api/env.py
M src/plone/api/group.py
M src/plone/api/tests/test_content.py
M src/plone/api/tests/test_group.py
M src/plone/api/tests/test_user.py

b'diff --git a/docs/content.rst b/docs/content.rst\nindex 9c6e021..6714b88 100644\n--- a/docs/content.rst\n+++ b/docs/content.rst\n@@ -367,7 +367,7 @@ If deleting content would result in broken links you will get a `LinkIntegrityNo\n     from zope.lifecycleevent import modified\n     api.content.copy(source=portal[\'training\'], target=portal, safe_id=True)\n     api.content.copy(source=portal[\'events\'][\'training\'], target=portal[\'events\'], safe_id=True)\n-    portal[\'about\'][\'team\'].text = RichTextValue(\'<a href="../copy_of_training">contact</a>\')\n+    portal[\'about\'][\'team\'].text = RichTextValue(\'<a href="../copy_of_training">contact</a>\', \'text/html\', \'text/x-html-safe\')\n     modified(portal[\'about\'][\'team\'])\n \n .. code-block:: python\ndiff --git a/docs/env.rst b/docs/env.rst\nindex 1b8f846..75c24e8 100644\n--- a/docs/env.rst\n+++ b/docs/env.rst\n@@ -83,7 +83,7 @@ To know if your Zope instance is running in debug mode, use :meth:`api.env.debug\n \n     in_debug_mode = api.env.debug_mode()\n     if in_debug_mode:\n-        print \'Zope is in debug mode\'\n+        print(\'Zope is in debug mode\')\n \n \n .. _env_test_mode_example:\ndiff --git a/docs/group.rst b/docs/group.rst\nindex 6ffbe53..66eb637 100644\n--- a/docs/group.rst\n+++ b/docs/group.rst\n@@ -143,7 +143,7 @@ Groups may be filtered by member. By passing the ``username`` parameter,\n .. invisible-code-block: python\n \n     group_list = [g.id for g in groups]\n-    self.assertItemsEqual(\n+    self.assertCountEqual(\n         group_list,\n         [\'Reviewers\', \'AuthenticatedUsers\', \'staff\'],\n     )\n@@ -157,7 +157,7 @@ You can also pass the user directly to :meth:`api.group.get_groups`:\n .. invisible-code-block: python\n \n     group_list = [g.id for g in groups]\n-    self.assertItemsEqual(\n+    self.assertCountEqual(\n         group_list,\n         [\'Reviewers\', \'AuthenticatedUsers\', \'staff\'],\n     )\ndiff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex 5ec0605..037160e 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -100,7 +100,7 @@ def create(\n             \'{message}\'.format(\n                 obj_type=type,\n                 allowed_types=\'\\n\'.join(sorted(types)),\n-                message=e.message,\n+                message=e.args[0],\n             ),\n         )\n \ndiff --git a/src/plone/api/env.py b/src/plone/api/env.py\nindex ed1e388..2d61541 100644\n--- a/src/plone/api/env.py\n+++ b/src/plone/api/env.py\n@@ -14,6 +14,7 @@\n from plone.api.validation import required_parameters\n from zope.globalrequest import getRequest\n \n+import six\n import traceback\n import Zope2\n \n@@ -92,7 +93,7 @@ def adopt_roles(roles=None):\n     :type roles: list of strings\n     :Example: :ref:`env_adopt_roles_example`\n     """\n-    if isinstance(roles, basestring):\n+    if isinstance(roles, six.string_types):\n         roles = [roles]\n \n     if not roles:\ndiff --git a/src/plone/api/group.py b/src/plone/api/group.py\nindex 3447a9d..a35015d 100644\n--- a/src/plone/api/group.py\n+++ b/src/plone/api/group.py\n@@ -95,7 +95,7 @@ def get_groups(username=None, user=None):\n             groups = group_tool.getGroupsForPrincipal(user)\n         except AttributeError as e:\n             # Anonymous users from the Zope acl_users folder will fail on this\n-            if \'portal_groups\' in e.message:\n+            if \'portal_groups\' in e.args[0]:\n                 return[]\n             raise\n \ndiff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py\nindex 84c69e6..c6d4761 100644\n--- a/src/plone/api/tests/test_content.py\n+++ b/src/plone/api/tests/test_content.py\n@@ -163,7 +163,7 @@ def test_create_constraints(self):\n         # in the InvalidParameterError message\n         self.assertIn(\n             \'No such content type: foo\',\n-            cm.exception.message,\n+            cm.exception.args[0],\n         )\n \n         # Check the constraints for allowed types in the container\n@@ -322,7 +322,7 @@ def test_create_raises_unicodedecodeerror(self):\n         def force_unicode_error(object):\n             raise UnicodeDecodeError(\n                 \'ascii\',\n-                \'x\',\n+                b\'x\',\n                 1,\n                 5,\n                 unicode_exception_message,\n@@ -594,7 +594,7 @@ def recordEvent(event):\n                 container[\'about\'][\'nu-contact\'] == nucontact)\n         assert \'contact\' not in container[\'about\'].keys()\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             firedEvents,\n             [\n                 ObjectMovedEvent,\n@@ -917,7 +917,7 @@ def test_delete_with_resolved_internal_breaches(self):\n     def _set_text(self, obj, text):\n         if IDexterityContent.providedBy(obj):\n             # Dexterity\n-            obj.text = RichTextValue(text)\n+            obj.text = RichTextValue(text, \'text/html\', \'text/x-html-safe\')\n         else:\n             # Archetypes\n             obj.setText(text, mimetype=\'text/html\')\ndiff --git a/src/plone/api/tests/test_group.py b/src/plone/api/tests/test_group.py\nindex d7dfb37..41aa919 100644\n--- a/src/plone/api/tests/test_group.py\n+++ b/src/plone/api/tests/test_group.py\n@@ -13,6 +13,7 @@\n \n import mock\n import unittest\n+import six\n \n \n class TestPloneApiGroup(unittest.TestCase):\n@@ -532,12 +533,12 @@ def test_local_roles_without_inheritance(self):\n         )\n         # Add the editor-role as global role\n         api.group.grant_roles(groupname=\'foo\', roles=[\'Editor\'])\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [\'Authenticated\', \'Editor\'],\n             api.group.get_roles(groupname=\'foo\'),\n         )\n         # local_roles plus global_roles\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [\'Authenticated\', \'Editor\'],\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n         )\n@@ -551,7 +552,7 @@ def test_local_roles_without_inheritance(self):\n         api.group.grant_roles(\n             groupname=\'foo\', roles=[\'Contributor\'], obj=folder,\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [\'Contributor\'],\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n         )\n@@ -636,12 +637,12 @@ def getRoles(self, principal_id):\n         provideAdapter(LocalRoleProvider)\n \n         # the adapter-role is added for get_role\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n             [\'Authenticated\', \'Reviewer\'],\n         )\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n             [\'Reviewer\'],\n         )\n@@ -650,18 +651,18 @@ def getRoles(self, principal_id):\n         api.group.grant_roles(\n             groupname=\'foo\', roles=[\'Contributor\'], obj=folder,\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n             [\'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n \n         # The adapter role in in the local roles but not persistent\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n         local_roles = getattr(folder, \'__ac_local_roles__\', {})\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             local_roles.get(\'foo\'),\n             [\'Contributor\'],\n         )\ndiff --git a/src/plone/api/tests/test_user.py b/src/plone/api/tests/test_user.py\nindex 1925c0a..4f1fa36 100644\n--- a/src/plone/api/tests/test_user.py\n+++ b/src/plone/api/tests/test_user.py\n@@ -136,7 +136,7 @@ def test_create_default_roles(self):\n             email=\'chuck@norris.org\',\n             password=\'secret\',\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Member\', \'Authenticated\'],\n         )\n@@ -149,7 +149,7 @@ def test_create_specified_roles(self):\n             password=\'secret\',\n             roles=[\'Reviewer\', \'Editor\'],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Reviewer\', \'Authenticated\', \'Editor\'],\n         )\n@@ -162,7 +162,7 @@ def test_create_no_roles(self):\n             password=\'secret\',\n             roles=[],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Authenticated\'],\n         )\n@@ -200,7 +200,7 @@ def test_get_all_users(self):\n         )\n         users = [user.getUserName() for user in api.user.get_users()]\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             users,\n             [\'chuck\', TEST_USER_NAME],\n         )\n@@ -296,7 +296,7 @@ def test_get_roles_username(self):\n             roles=ROLES,\n         )\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES + [\'Authenticated\'],\n             api.user.get_roles(username=\'chuck\'),\n         )\n@@ -311,7 +311,7 @@ def test_get_roles_user(self):\n             roles=ROLES,\n         )\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES + [\'Authenticated\'],\n             api.user.get_roles(user=user),\n         )\n@@ -335,14 +335,14 @@ def test_get_roles_username_and_user(self):\n \n     def test_get_roles_no_parameters(self):\n         """Test get roles without any parameters."""\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [\'Manager\', \'Authenticated\'],\n             api.user.get_roles(),\n         )\n \n     def test_get_permissions_no_parameters(self):\n         """Test get_permissions passing no parameters."""\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [p[0] for p in getPermissions()],\n             api.user.get_permissions().keys(),\n         )\n@@ -447,7 +447,7 @@ def test_get_roles_local_includes_group_roles(self):\n             id=\'document_one\',\n             title=\'Document One\',\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Reviewer\', \'Authenticated\'],\n         )\n@@ -456,15 +456,15 @@ def test_get_roles_local_includes_group_roles(self):\n             roles=[\'Editor\'],\n             obj=folder,\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Reviewer\', \'Authenticated\', \'Editor\'],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Editor\'],\n         )\n@@ -473,7 +473,7 @@ def test_get_roles_local_includes_group_roles(self):\n             roles=[\'Contributor\'],\n             obj=document,\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [\'Contributor\'],\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n         )\n@@ -641,11 +641,11 @@ def test_grant_roles(self):\n             \'Authenticated\',\n             \'Member\',\n         ]\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\'),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user),\n         )\n@@ -719,19 +719,19 @@ def test_revoke_roles(self):\n \n         api.user.revoke_roles(username=\'chuck\', roles=(\'Editor\',))\n         ROLES = [\'Authenticated\', \'Member\']\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\'),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', inherit=False),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, inherit=False),\n         )\n@@ -795,7 +795,7 @@ def test_revoke_roles_from_anonymous(self):\n             roles=[\'Reviewer\'],\n         )\n         ROLES = [\'Anonymous\']\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'Anonymous User\'),\n         )\n@@ -841,7 +841,7 @@ def test_grant_roles_in_context(self):\n             \'Editor\',\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [\'Editor\'],\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n         )\n@@ -881,19 +881,19 @@ def test_grant_roles_in_context(self):\n         )\n \n         ROLES = [\'Editor\', \'Contributor\', \'Authenticated\', \'Member\']\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=folder),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=document),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=document),\n         )\n@@ -921,7 +921,7 @@ def test_grant_roles_disregards_adapter(self):\n             password=\'secret\',\n         )\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\'],\n         )\n@@ -943,12 +943,12 @@ def getRoles(self, principal_id):\n         provideAdapter(LocalRoleProvider)\n \n         # the adapter-role is added for get_role\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\', \'Reviewer\'],\n         )\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Reviewer\'],\n         )\n@@ -959,13 +959,13 @@ def getRoles(self, principal_id):\n             roles=[\'Contributor\'],\n             obj=folder,\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n \n         # The adapter role is in in the local roles but not persistent\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n@@ -975,11 +975,11 @@ def getRoles(self, principal_id):\n             [\'Contributor\'],\n         )\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Reviewer\'],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n@@ -993,16 +993,16 @@ def getRoles(self, principal_id):\n         )\n         api.group.add_user(groupname=\'foo\', username=\'chuck\')\n \n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n         api.group.grant_roles(groupname=\'foo\', roles=[\'Manager\'], obj=folder)\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\n                 \'Contributor\',\n@@ -1012,7 +1012,7 @@ def getRoles(self, principal_id):\n                 \'Member\',\n             ],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\n                 \'Contributor\',\n@@ -1022,7 +1022,7 @@ def getRoles(self, principal_id):\n                 \'Member\',\n             ],\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\', \'Manager\'],\n         )\n@@ -1099,35 +1099,35 @@ def test_revoke_roles_in_context(self):\n         self.assertNotIn(\'Editor\', api.user.get_roles(user=user, obj=document))\n \n         ROLES = [\'Authenticated\', \'Member\']\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=folder),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=document),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=document),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [],\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [],\n             api.user.get_roles(user=user, obj=folder, inherit=False),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [],\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n         )\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             [],\n             api.user.get_roles(user=user, obj=document, inherit=False),\n         )\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T11:55:31+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.api/commit/1df2765cd8017376656d92bacade166f0074e5d3

fix last failing tests for py3

Files changed:
M src/plone/api/tests/test_portal.py

b"diff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex 8b06571..71b028f 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -803,7 +803,7 @@ def test_set_invalid_value_on_registry_record_from_interface(self):\n         with self.assertRaises(InvalidParameterError):\n             portal.set_registry_record(\n                 'field_one',\n-                'value',\n+                b'value',\n                 interface=IMyRegistrySettings,\n             )\n \n@@ -818,7 +818,7 @@ def test_set_invalid_value_on_registry_record_from_interface_msg(self):\n         with self.assertRaises(InvalidParameterError) as cm:\n             portal.set_registry_record(\n                 'field_one',\n-                'value',\n+                b'value',\n                 interface=IMyRegistrySettings,\n             )\n         exc_str = str(cm.exception)\n"

Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T11:55:31+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.api/commit/26b408a1b2185387d531587a4ee43f044c073167

add changelog entry

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex fe1a7e3..e32fa0f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,7 +10,8 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Python 2/3 support.\n+  [pbauer]\n \n Bug fixes:\n \n'

Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T11:55:31+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.api/commit/aca7109ecc62d7d2f807a7721953cb3a95036dcb

remove superflous six import

Files changed:
M src/plone/api/tests/test_group.py

b'diff --git a/src/plone/api/tests/test_group.py b/src/plone/api/tests/test_group.py\nindex 41aa919..f3bfb4e 100644\n--- a/src/plone/api/tests/test_group.py\n+++ b/src/plone/api/tests/test_group.py\n@@ -13,7 +13,6 @@\n \n import mock\n import unittest\n-import six\n \n \n class TestPloneApiGroup(unittest.TestCase):\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T11:55:31+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.api/commit/1002d90e24c5d23e4a839e6c350a9423241cbd55

work around non-working six.assertCountEqual

Files changed:
M docs/group.rst
M src/plone/api/tests/test_content.py
M src/plone/api/tests/test_group.py
M src/plone/api/tests/test_user.py

b'diff --git a/docs/group.rst b/docs/group.rst\nindex 66eb637..5efbd40 100644\n--- a/docs/group.rst\n+++ b/docs/group.rst\n@@ -143,7 +143,13 @@ Groups may be filtered by member. By passing the ``username`` parameter,\n .. invisible-code-block: python\n \n     group_list = [g.id for g in groups]\n-    self.assertCountEqual(\n+    import six\n+    if six.PY2:\n+        assertCountEqual = self.assertItemsEqual\n+    else:\n+        assertCountEqual = self.assertCountEqual\n+\n+    assertCountEqual(\n         group_list,\n         [\'Reviewers\', \'AuthenticatedUsers\', \'staff\'],\n     )\n@@ -157,7 +163,7 @@ You can also pass the user directly to :meth:`api.group.get_groups`:\n .. invisible-code-block: python\n \n     group_list = [g.id for g in groups]\n-    self.assertCountEqual(\n+    assertCountEqual(\n         group_list,\n         [\'Reviewers\', \'AuthenticatedUsers\', \'staff\'],\n     )\ndiff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py\nindex c6d4761..88bbbe0 100644\n--- a/src/plone/api/tests/test_content.py\n+++ b/src/plone/api/tests/test_content.py\n@@ -28,6 +28,7 @@\n \n import mock\n import pkg_resources\n+import six\n import unittest\n \n \n@@ -594,7 +595,11 @@ def recordEvent(event):\n                 container[\'about\'][\'nu-contact\'] == nucontact)\n         assert \'contact\' not in container[\'about\'].keys()\n \n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             firedEvents,\n             [\n                 ObjectMovedEvent,\ndiff --git a/src/plone/api/tests/test_group.py b/src/plone/api/tests/test_group.py\nindex f3bfb4e..8c96ec9 100644\n--- a/src/plone/api/tests/test_group.py\n+++ b/src/plone/api/tests/test_group.py\n@@ -12,6 +12,7 @@\n from zope.interface import Interface\n \n import mock\n+import six\n import unittest\n \n \n@@ -510,6 +511,10 @@ def test_grant_roles_in_context(self):\n \n     def test_local_roles_without_inheritance(self):\n         """Test granting and getting local_roles."""\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         api.group.create(groupname=\'foo\')\n \n@@ -532,12 +537,12 @@ def test_local_roles_without_inheritance(self):\n         )\n         # Add the editor-role as global role\n         api.group.grant_roles(groupname=\'foo\', roles=[\'Editor\'])\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [\'Authenticated\', \'Editor\'],\n             api.group.get_roles(groupname=\'foo\'),\n         )\n         # local_roles plus global_roles\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [\'Authenticated\', \'Editor\'],\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n         )\n@@ -551,7 +556,7 @@ def test_local_roles_without_inheritance(self):\n         api.group.grant_roles(\n             groupname=\'foo\', roles=[\'Contributor\'], obj=folder,\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [\'Contributor\'],\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n         )\n@@ -603,6 +608,10 @@ def test_local_roles_without_inheritance(self):\n     def test_local_roles_disregard_adapter(self):\n         """Test that borg.localrole-adpaters are not copied when granting\n         local roles."""\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         portal = api.portal.get()\n         folder = api.content.create(\n@@ -636,12 +645,12 @@ def getRoles(self, principal_id):\n         provideAdapter(LocalRoleProvider)\n \n         # the adapter-role is added for get_role\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n             [\'Authenticated\', \'Reviewer\'],\n         )\n \n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n             [\'Reviewer\'],\n         )\n@@ -650,18 +659,18 @@ def getRoles(self, principal_id):\n         api.group.grant_roles(\n             groupname=\'foo\', roles=[\'Contributor\'], obj=folder,\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n             [\'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n \n         # The adapter role in in the local roles but not persistent\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n         local_roles = getattr(folder, \'__ac_local_roles__\', {})\n-        self.assertCountEqual(\n+        assertCountEqual(\n             local_roles.get(\'foo\'),\n             [\'Contributor\'],\n         )\ndiff --git a/src/plone/api/tests/test_user.py b/src/plone/api/tests/test_user.py\nindex 4f1fa36..7c44530 100644\n--- a/src/plone/api/tests/test_user.py\n+++ b/src/plone/api/tests/test_user.py\n@@ -15,6 +15,7 @@\n from zope.interface import Interface\n \n import mock\n+import six\n import unittest\n \n \n@@ -136,7 +137,11 @@ def test_create_default_roles(self):\n             email=\'chuck@norris.org\',\n             password=\'secret\',\n         )\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Member\', \'Authenticated\'],\n         )\n@@ -149,7 +154,12 @@ def test_create_specified_roles(self):\n             password=\'secret\',\n             roles=[\'Reviewer\', \'Editor\'],\n         )\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+\n+        assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Reviewer\', \'Authenticated\', \'Editor\'],\n         )\n@@ -162,7 +172,11 @@ def test_create_no_roles(self):\n             password=\'secret\',\n             roles=[],\n         )\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Authenticated\'],\n         )\n@@ -199,8 +213,11 @@ def test_get_all_users(self):\n             password=\'secret\',\n         )\n         users = [user.getUserName() for user in api.user.get_users()]\n-\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             users,\n             [\'chuck\', TEST_USER_NAME],\n         )\n@@ -295,8 +312,11 @@ def test_get_roles_username(self):\n             password=\'secret\',\n             roles=ROLES,\n         )\n-\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES + [\'Authenticated\'],\n             api.user.get_roles(username=\'chuck\'),\n         )\n@@ -310,8 +330,11 @@ def test_get_roles_user(self):\n             password=\'secret\',\n             roles=ROLES,\n         )\n-\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES + [\'Authenticated\'],\n             api.user.get_roles(user=user),\n         )\n@@ -335,14 +358,22 @@ def test_get_roles_username_and_user(self):\n \n     def test_get_roles_no_parameters(self):\n         """Test get roles without any parameters."""\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             [\'Manager\', \'Authenticated\'],\n             api.user.get_roles(),\n         )\n \n     def test_get_permissions_no_parameters(self):\n         """Test get_permissions passing no parameters."""\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             [p[0] for p in getPermissions()],\n             api.user.get_permissions().keys(),\n         )\n@@ -433,6 +464,10 @@ def test_get_roles_local_includes_group_roles(self):\n         )\n         api.group.create(\'foo\', roles=[\'Reviewer\'])\n         api.group.add_user(groupname=\'foo\', username=\'chuck\')\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         portal = api.portal.get()\n         folder = api.content.create(\n@@ -447,7 +482,7 @@ def test_get_roles_local_includes_group_roles(self):\n             id=\'document_one\',\n             title=\'Document One\',\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Reviewer\', \'Authenticated\'],\n         )\n@@ -456,15 +491,15 @@ def test_get_roles_local_includes_group_roles(self):\n             roles=[\'Editor\'],\n             obj=folder,\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Reviewer\', \'Authenticated\', \'Editor\'],\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [],\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Editor\'],\n         )\n@@ -473,7 +508,7 @@ def test_get_roles_local_includes_group_roles(self):\n             roles=[\'Contributor\'],\n             obj=document,\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [\'Contributor\'],\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n         )\n@@ -641,11 +676,15 @@ def test_grant_roles(self):\n             \'Authenticated\',\n             \'Member\',\n         ]\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\'),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user),\n         )\n@@ -719,19 +758,24 @@ def test_revoke_roles(self):\n \n         api.user.revoke_roles(username=\'chuck\', roles=(\'Editor\',))\n         ROLES = [\'Authenticated\', \'Member\']\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\'),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', inherit=False),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, inherit=False),\n         )\n@@ -841,7 +885,11 @@ def test_grant_roles_in_context(self):\n             \'Editor\',\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             [\'Editor\'],\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n         )\n@@ -881,19 +929,19 @@ def test_grant_roles_in_context(self):\n         )\n \n         ROLES = [\'Editor\', \'Contributor\', \'Authenticated\', \'Member\']\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=folder),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=document),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=document),\n         )\n@@ -901,6 +949,10 @@ def test_grant_roles_in_context(self):\n     def test_grant_roles_disregards_adapter(self):\n         """Test that borg.localrole-adpaters are not copied when granting\n         local roles."""\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         portal = api.portal.get()\n         folder = api.content.create(\n@@ -921,7 +973,7 @@ def test_grant_roles_disregards_adapter(self):\n             password=\'secret\',\n         )\n \n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\'],\n         )\n@@ -943,12 +995,12 @@ def getRoles(self, principal_id):\n         provideAdapter(LocalRoleProvider)\n \n         # the adapter-role is added for get_role\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\', \'Reviewer\'],\n         )\n \n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Reviewer\'],\n         )\n@@ -959,13 +1011,13 @@ def getRoles(self, principal_id):\n             roles=[\'Contributor\'],\n             obj=folder,\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n \n         # The adapter role is in in the local roles but not persistent\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n@@ -975,11 +1027,11 @@ def getRoles(self, principal_id):\n             [\'Contributor\'],\n         )\n \n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Reviewer\'],\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n@@ -993,16 +1045,16 @@ def getRoles(self, principal_id):\n         )\n         api.group.add_user(groupname=\'foo\', username=\'chuck\')\n \n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n         api.group.grant_roles(groupname=\'foo\', roles=[\'Manager\'], obj=folder)\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\n                 \'Contributor\',\n@@ -1012,7 +1064,7 @@ def getRoles(self, principal_id):\n                 \'Member\',\n             ],\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\n                 \'Contributor\',\n@@ -1022,7 +1074,7 @@ def getRoles(self, principal_id):\n                 \'Member\',\n             ],\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\', \'Manager\'],\n         )\n@@ -1099,35 +1151,39 @@ def test_revoke_roles_in_context(self):\n         self.assertNotIn(\'Editor\', api.user.get_roles(user=user, obj=document))\n \n         ROLES = [\'Authenticated\', \'Member\']\n-        self.assertCountEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=folder),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=document),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=document),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(user=user, obj=folder, inherit=False),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n         )\n-        self.assertCountEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(user=user, obj=document, inherit=False),\n         )\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T11:55:31+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.api/commit/b51a3cb6deac29b1fa6ff36b6e7fbf0b934b660c

add classifiers

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex 18497bf..c0e2cfb 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -67,6 +67,8 @@ def read(*rnames):\n         'Operating System :: OS Independent',\n         'Programming Language :: Python',\n         'Programming Language :: Python :: 2.7',\n+        'Programming Language :: Python :: 3.6',\n+        'Programming Language :: Python :: 3.7',\n     ],\n     platforms='Any',\n )\n"

Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T11:58:13+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.api/commit/a02b1830d1f85a0ae6e1422bc4288a6e6f349c6a

use str(e) instead of e.args[0]

Files changed:
M src/plone/api/content.py
M src/plone/api/group.py
M src/plone/api/tests/test_content.py

b"diff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex 037160e..f11a299 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -100,7 +100,7 @@ def create(\n             '{message}'.format(\n                 obj_type=type,\n                 allowed_types='\\n'.join(sorted(types)),\n-                message=e.args[0],\n+                message=str(e),\n             ),\n         )\n \ndiff --git a/src/plone/api/group.py b/src/plone/api/group.py\nindex a35015d..a7b4b43 100644\n--- a/src/plone/api/group.py\n+++ b/src/plone/api/group.py\n@@ -95,7 +95,7 @@ def get_groups(username=None, user=None):\n             groups = group_tool.getGroupsForPrincipal(user)\n         except AttributeError as e:\n             # Anonymous users from the Zope acl_users folder will fail on this\n-            if 'portal_groups' in e.args[0]:\n+            if 'portal_groups' in str(e):\n                 return[]\n             raise\n \ndiff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py\nindex 88bbbe0..d575457 100644\n--- a/src/plone/api/tests/test_content.py\n+++ b/src/plone/api/tests/test_content.py\n@@ -164,7 +164,7 @@ def test_create_constraints(self):\n         # in the InvalidParameterError message\n         self.assertIn(\n             'No such content type: foo',\n-            cm.exception.args[0],\n+            str(cm.exception),\n         )\n \n         # Check the constraints for allowed types in the container\n"

Repository: plone.api


Branch: refs/heads/master
Date: 2018-09-16T16:40:58+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.api/commit/4c9c136a0d2b513aa2ca04b333ac0389d17ed409

Merge pull request #402 from plone/python3

Python3

Files changed:
M CHANGES.rst
M docs/content.rst
M docs/env.rst
M docs/group.rst
M setup.py
M src/plone/api/content.py
M src/plone/api/env.py
M src/plone/api/group.py
M src/plone/api/tests/test_content.py
M src/plone/api/tests/test_group.py
M src/plone/api/tests/test_portal.py
M src/plone/api/tests/test_user.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex fe1a7e3..e32fa0f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,7 +10,8 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Python 2/3 support.\n+  [pbauer]\n \n Bug fixes:\n \ndiff --git a/docs/content.rst b/docs/content.rst\nindex 9c6e021..6714b88 100644\n--- a/docs/content.rst\n+++ b/docs/content.rst\n@@ -367,7 +367,7 @@ If deleting content would result in broken links you will get a `LinkIntegrityNo\n     from zope.lifecycleevent import modified\n     api.content.copy(source=portal[\'training\'], target=portal, safe_id=True)\n     api.content.copy(source=portal[\'events\'][\'training\'], target=portal[\'events\'], safe_id=True)\n-    portal[\'about\'][\'team\'].text = RichTextValue(\'<a href="../copy_of_training">contact</a>\')\n+    portal[\'about\'][\'team\'].text = RichTextValue(\'<a href="../copy_of_training">contact</a>\', \'text/html\', \'text/x-html-safe\')\n     modified(portal[\'about\'][\'team\'])\n \n .. code-block:: python\ndiff --git a/docs/env.rst b/docs/env.rst\nindex 1b8f846..75c24e8 100644\n--- a/docs/env.rst\n+++ b/docs/env.rst\n@@ -83,7 +83,7 @@ To know if your Zope instance is running in debug mode, use :meth:`api.env.debug\n \n     in_debug_mode = api.env.debug_mode()\n     if in_debug_mode:\n-        print \'Zope is in debug mode\'\n+        print(\'Zope is in debug mode\')\n \n \n .. _env_test_mode_example:\ndiff --git a/docs/group.rst b/docs/group.rst\nindex 6ffbe53..5efbd40 100644\n--- a/docs/group.rst\n+++ b/docs/group.rst\n@@ -143,7 +143,13 @@ Groups may be filtered by member. By passing the ``username`` parameter,\n .. invisible-code-block: python\n \n     group_list = [g.id for g in groups]\n-    self.assertItemsEqual(\n+    import six\n+    if six.PY2:\n+        assertCountEqual = self.assertItemsEqual\n+    else:\n+        assertCountEqual = self.assertCountEqual\n+\n+    assertCountEqual(\n         group_list,\n         [\'Reviewers\', \'AuthenticatedUsers\', \'staff\'],\n     )\n@@ -157,7 +163,7 @@ You can also pass the user directly to :meth:`api.group.get_groups`:\n .. invisible-code-block: python\n \n     group_list = [g.id for g in groups]\n-    self.assertItemsEqual(\n+    assertCountEqual(\n         group_list,\n         [\'Reviewers\', \'AuthenticatedUsers\', \'staff\'],\n     )\ndiff --git a/setup.py b/setup.py\nindex 18497bf..c0e2cfb 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -67,6 +67,8 @@ def read(*rnames):\n         \'Operating System :: OS Independent\',\n         \'Programming Language :: Python\',\n         \'Programming Language :: Python :: 2.7\',\n+        \'Programming Language :: Python :: 3.6\',\n+        \'Programming Language :: Python :: 3.7\',\n     ],\n     platforms=\'Any\',\n )\ndiff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex 5ec0605..f11a299 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -100,7 +100,7 @@ def create(\n             \'{message}\'.format(\n                 obj_type=type,\n                 allowed_types=\'\\n\'.join(sorted(types)),\n-                message=e.message,\n+                message=str(e),\n             ),\n         )\n \ndiff --git a/src/plone/api/env.py b/src/plone/api/env.py\nindex ed1e388..2d61541 100644\n--- a/src/plone/api/env.py\n+++ b/src/plone/api/env.py\n@@ -14,6 +14,7 @@\n from plone.api.validation import required_parameters\n from zope.globalrequest import getRequest\n \n+import six\n import traceback\n import Zope2\n \n@@ -92,7 +93,7 @@ def adopt_roles(roles=None):\n     :type roles: list of strings\n     :Example: :ref:`env_adopt_roles_example`\n     """\n-    if isinstance(roles, basestring):\n+    if isinstance(roles, six.string_types):\n         roles = [roles]\n \n     if not roles:\ndiff --git a/src/plone/api/group.py b/src/plone/api/group.py\nindex 3447a9d..a7b4b43 100644\n--- a/src/plone/api/group.py\n+++ b/src/plone/api/group.py\n@@ -95,7 +95,7 @@ def get_groups(username=None, user=None):\n             groups = group_tool.getGroupsForPrincipal(user)\n         except AttributeError as e:\n             # Anonymous users from the Zope acl_users folder will fail on this\n-            if \'portal_groups\' in e.message:\n+            if \'portal_groups\' in str(e):\n                 return[]\n             raise\n \ndiff --git a/src/plone/api/tests/test_content.py b/src/plone/api/tests/test_content.py\nindex 84c69e6..d575457 100644\n--- a/src/plone/api/tests/test_content.py\n+++ b/src/plone/api/tests/test_content.py\n@@ -28,6 +28,7 @@\n \n import mock\n import pkg_resources\n+import six\n import unittest\n \n \n@@ -163,7 +164,7 @@ def test_create_constraints(self):\n         # in the InvalidParameterError message\n         self.assertIn(\n             \'No such content type: foo\',\n-            cm.exception.message,\n+            str(cm.exception),\n         )\n \n         # Check the constraints for allowed types in the container\n@@ -322,7 +323,7 @@ def test_create_raises_unicodedecodeerror(self):\n         def force_unicode_error(object):\n             raise UnicodeDecodeError(\n                 \'ascii\',\n-                \'x\',\n+                b\'x\',\n                 1,\n                 5,\n                 unicode_exception_message,\n@@ -594,7 +595,11 @@ def recordEvent(event):\n                 container[\'about\'][\'nu-contact\'] == nucontact)\n         assert \'contact\' not in container[\'about\'].keys()\n \n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             firedEvents,\n             [\n                 ObjectMovedEvent,\n@@ -917,7 +922,7 @@ def test_delete_with_resolved_internal_breaches(self):\n     def _set_text(self, obj, text):\n         if IDexterityContent.providedBy(obj):\n             # Dexterity\n-            obj.text = RichTextValue(text)\n+            obj.text = RichTextValue(text, \'text/html\', \'text/x-html-safe\')\n         else:\n             # Archetypes\n             obj.setText(text, mimetype=\'text/html\')\ndiff --git a/src/plone/api/tests/test_group.py b/src/plone/api/tests/test_group.py\nindex d7dfb37..8c96ec9 100644\n--- a/src/plone/api/tests/test_group.py\n+++ b/src/plone/api/tests/test_group.py\n@@ -12,6 +12,7 @@\n from zope.interface import Interface\n \n import mock\n+import six\n import unittest\n \n \n@@ -510,6 +511,10 @@ def test_grant_roles_in_context(self):\n \n     def test_local_roles_without_inheritance(self):\n         """Test granting and getting local_roles."""\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         api.group.create(groupname=\'foo\')\n \n@@ -532,12 +537,12 @@ def test_local_roles_without_inheritance(self):\n         )\n         # Add the editor-role as global role\n         api.group.grant_roles(groupname=\'foo\', roles=[\'Editor\'])\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [\'Authenticated\', \'Editor\'],\n             api.group.get_roles(groupname=\'foo\'),\n         )\n         # local_roles plus global_roles\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [\'Authenticated\', \'Editor\'],\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n         )\n@@ -551,7 +556,7 @@ def test_local_roles_without_inheritance(self):\n         api.group.grant_roles(\n             groupname=\'foo\', roles=[\'Contributor\'], obj=folder,\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [\'Contributor\'],\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n         )\n@@ -603,6 +608,10 @@ def test_local_roles_without_inheritance(self):\n     def test_local_roles_disregard_adapter(self):\n         """Test that borg.localrole-adpaters are not copied when granting\n         local roles."""\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         portal = api.portal.get()\n         folder = api.content.create(\n@@ -636,12 +645,12 @@ def getRoles(self, principal_id):\n         provideAdapter(LocalRoleProvider)\n \n         # the adapter-role is added for get_role\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n             [\'Authenticated\', \'Reviewer\'],\n         )\n \n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n             [\'Reviewer\'],\n         )\n@@ -650,18 +659,18 @@ def getRoles(self, principal_id):\n         api.group.grant_roles(\n             groupname=\'foo\', roles=[\'Contributor\'], obj=folder,\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder),\n             [\'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n \n         # The adapter role in in the local roles but not persistent\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.group.get_roles(groupname=\'foo\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n         local_roles = getattr(folder, \'__ac_local_roles__\', {})\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             local_roles.get(\'foo\'),\n             [\'Contributor\'],\n         )\ndiff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex 8b06571..71b028f 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -803,7 +803,7 @@ def test_set_invalid_value_on_registry_record_from_interface(self):\n         with self.assertRaises(InvalidParameterError):\n             portal.set_registry_record(\n                 \'field_one\',\n-                \'value\',\n+                b\'value\',\n                 interface=IMyRegistrySettings,\n             )\n \n@@ -818,7 +818,7 @@ def test_set_invalid_value_on_registry_record_from_interface_msg(self):\n         with self.assertRaises(InvalidParameterError) as cm:\n             portal.set_registry_record(\n                 \'field_one\',\n-                \'value\',\n+                b\'value\',\n                 interface=IMyRegistrySettings,\n             )\n         exc_str = str(cm.exception)\ndiff --git a/src/plone/api/tests/test_user.py b/src/plone/api/tests/test_user.py\nindex 1925c0a..7c44530 100644\n--- a/src/plone/api/tests/test_user.py\n+++ b/src/plone/api/tests/test_user.py\n@@ -15,6 +15,7 @@\n from zope.interface import Interface\n \n import mock\n+import six\n import unittest\n \n \n@@ -136,7 +137,11 @@ def test_create_default_roles(self):\n             email=\'chuck@norris.org\',\n             password=\'secret\',\n         )\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Member\', \'Authenticated\'],\n         )\n@@ -149,7 +154,12 @@ def test_create_specified_roles(self):\n             password=\'secret\',\n             roles=[\'Reviewer\', \'Editor\'],\n         )\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+\n+        assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Reviewer\', \'Authenticated\', \'Editor\'],\n         )\n@@ -162,7 +172,11 @@ def test_create_no_roles(self):\n             password=\'secret\',\n             roles=[],\n         )\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             api.user.get_roles(user=user),\n             [\'Authenticated\'],\n         )\n@@ -199,8 +213,11 @@ def test_get_all_users(self):\n             password=\'secret\',\n         )\n         users = [user.getUserName() for user in api.user.get_users()]\n-\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             users,\n             [\'chuck\', TEST_USER_NAME],\n         )\n@@ -295,8 +312,11 @@ def test_get_roles_username(self):\n             password=\'secret\',\n             roles=ROLES,\n         )\n-\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES + [\'Authenticated\'],\n             api.user.get_roles(username=\'chuck\'),\n         )\n@@ -310,8 +330,11 @@ def test_get_roles_user(self):\n             password=\'secret\',\n             roles=ROLES,\n         )\n-\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES + [\'Authenticated\'],\n             api.user.get_roles(user=user),\n         )\n@@ -335,14 +358,22 @@ def test_get_roles_username_and_user(self):\n \n     def test_get_roles_no_parameters(self):\n         """Test get roles without any parameters."""\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             [\'Manager\', \'Authenticated\'],\n             api.user.get_roles(),\n         )\n \n     def test_get_permissions_no_parameters(self):\n         """Test get_permissions passing no parameters."""\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             [p[0] for p in getPermissions()],\n             api.user.get_permissions().keys(),\n         )\n@@ -433,6 +464,10 @@ def test_get_roles_local_includes_group_roles(self):\n         )\n         api.group.create(\'foo\', roles=[\'Reviewer\'])\n         api.group.add_user(groupname=\'foo\', username=\'chuck\')\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         portal = api.portal.get()\n         folder = api.content.create(\n@@ -447,7 +482,7 @@ def test_get_roles_local_includes_group_roles(self):\n             id=\'document_one\',\n             title=\'Document One\',\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Reviewer\', \'Authenticated\'],\n         )\n@@ -456,15 +491,15 @@ def test_get_roles_local_includes_group_roles(self):\n             roles=[\'Editor\'],\n             obj=folder,\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Reviewer\', \'Authenticated\', \'Editor\'],\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [],\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Editor\'],\n         )\n@@ -473,7 +508,7 @@ def test_get_roles_local_includes_group_roles(self):\n             roles=[\'Contributor\'],\n             obj=document,\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [\'Contributor\'],\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n         )\n@@ -641,11 +676,15 @@ def test_grant_roles(self):\n             \'Authenticated\',\n             \'Member\',\n         ]\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\'),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user),\n         )\n@@ -719,19 +758,24 @@ def test_revoke_roles(self):\n \n         api.user.revoke_roles(username=\'chuck\', roles=(\'Editor\',))\n         ROLES = [\'Authenticated\', \'Member\']\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\'),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', inherit=False),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, inherit=False),\n         )\n@@ -795,7 +839,7 @@ def test_revoke_roles_from_anonymous(self):\n             roles=[\'Reviewer\'],\n         )\n         ROLES = [\'Anonymous\']\n-        self.assertItemsEqual(\n+        self.assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'Anonymous User\'),\n         )\n@@ -841,7 +885,11 @@ def test_grant_roles_in_context(self):\n             \'Editor\',\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             [\'Editor\'],\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n         )\n@@ -881,19 +929,19 @@ def test_grant_roles_in_context(self):\n         )\n \n         ROLES = [\'Editor\', \'Contributor\', \'Authenticated\', \'Member\']\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=folder),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=document),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=document),\n         )\n@@ -901,6 +949,10 @@ def test_grant_roles_in_context(self):\n     def test_grant_roles_disregards_adapter(self):\n         """Test that borg.localrole-adpaters are not copied when granting\n         local roles."""\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n \n         portal = api.portal.get()\n         folder = api.content.create(\n@@ -921,7 +973,7 @@ def test_grant_roles_disregards_adapter(self):\n             password=\'secret\',\n         )\n \n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\'],\n         )\n@@ -943,12 +995,12 @@ def getRoles(self, principal_id):\n         provideAdapter(LocalRoleProvider)\n \n         # the adapter-role is added for get_role\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\', \'Reviewer\'],\n         )\n \n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Reviewer\'],\n         )\n@@ -959,13 +1011,13 @@ def getRoles(self, principal_id):\n             roles=[\'Contributor\'],\n             obj=folder,\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\'Member\', \'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n \n         # The adapter role is in in the local roles but not persistent\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n@@ -975,11 +1027,11 @@ def getRoles(self, principal_id):\n             [\'Contributor\'],\n         )\n \n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Reviewer\'],\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\'Member\', \'Authenticated\', \'Contributor\', \'Reviewer\'],\n         )\n@@ -993,16 +1045,16 @@ def getRoles(self, principal_id):\n         )\n         api.group.add_user(groupname=\'foo\', username=\'chuck\')\n \n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n         api.group.grant_roles(groupname=\'foo\', roles=[\'Manager\'], obj=folder)\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n             [\'Contributor\', \'Reviewer\'],\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=document),\n             [\n                 \'Contributor\',\n@@ -1012,7 +1064,7 @@ def getRoles(self, principal_id):\n                 \'Member\',\n             ],\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder),\n             [\n                 \'Contributor\',\n@@ -1022,7 +1074,7 @@ def getRoles(self, principal_id):\n                 \'Member\',\n             ],\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n             [\'Contributor\', \'Reviewer\', \'Manager\'],\n         )\n@@ -1099,35 +1151,39 @@ def test_revoke_roles_in_context(self):\n         self.assertNotIn(\'Editor\', api.user.get_roles(user=user, obj=document))\n \n         ROLES = [\'Authenticated\', \'Member\']\n-        self.assertItemsEqual(\n+        if six.PY2:\n+            assertCountEqual = self.assertItemsEqual\n+        else:\n+            assertCountEqual = self.assertCountEqual\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=folder),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=folder),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(username=\'chuck\', obj=document),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             ROLES,\n             api.user.get_roles(user=user, obj=document),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(username=\'chuck\', obj=folder, inherit=False),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(user=user, obj=folder, inherit=False),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(username=\'chuck\', obj=document, inherit=False),\n         )\n-        self.assertItemsEqual(\n+        assertCountEqual(\n             [],\n             api.user.get_roles(user=user, obj=document, inherit=False),\n         )\n'

