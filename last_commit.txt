Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-03-29T12:40:29+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e9507bbbd1c7a4abf25da113dbfbfd8256987da7

fix SearchableText in py3

Files changed:
M plone/app/contenttypes/indexers.py

diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py
index f01b9ff7..2273ae41 100644
--- a/plone/app/contenttypes/indexers.py
+++ b/plone/app/contenttypes/indexers.py
@@ -35,9 +35,14 @@ def _unicode_save_string_concat(*args):
     """
     result = ''
     for value in args:
-        if isinstance(value, six.text_type):
-            value = value.encode('utf-8', 'replace')
-        if value:
+        if six.PY2:
+            if isinstance(value, six.text_type):
+                value = value.encode('utf-8', 'replace')
+            if value:
+                result = ' '.join((result, value))
+        else:
+            if isinstance(value, six.binary_type):
+                value = safe_unicode(value)
             result = ' '.join((result, value))
     return result
 
@@ -52,9 +57,12 @@ def SearchableText(obj):
             # Before you think about switching raw/output
             # or mimeType/outputMimeType, first read
             # https://github.com/plone/Products.CMFPlone/issues/2066
+            raw = safe_unicode(textvalue.raw)
+            if six.PY2:
+                raw = raw.encode('utf-8', 'replace')
             text = transforms.convertTo(
                 'text/plain',
-                safe_unicode(textvalue.raw).encode('utf-8'),
+                raw,
                 mimetype=textvalue.mimeType,
             ).getData().strip()
 


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-04-03T23:48:00+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/28e4182faf9bdf04464cb2f13b9e94a60093e5e6

Merge remote-tracking branch 'origin/master' into python3

Files changed:
A plone/app/contenttypes/tests/test_utils.py
M CHANGES.rst
M plone/app/contenttypes/browser/file.py
M plone/app/contenttypes/browser/templates/file.pt
M plone/app/contenttypes/utils.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index ac308697..114aafcf 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-1.4.10 (unreleased)
+1.4.11 (unreleased)
 -------------------
 
 Breaking changes:
@@ -10,6 +10,21 @@ Breaking changes:
 
 New features:
 
+- *add item here*
+
+Bug fixes:
+
+- *add item here*
+
+
+1.4.10 (2018-04-03)
+-------------------
+
+New features:
+
+- Implement better human readable file size logic.
+  [hvelarde]
+
 - Set the ``plone.app.contenttypes_migration_running`` key while running a migration.
   Other addons can check for that and handle accordingly.
   [thet]
diff --git a/plone/app/contenttypes/browser/file.py b/plone/app/contenttypes/browser/file.py
index f2db2c5c..cbe05ddd 100644
--- a/plone/app/contenttypes/browser/file.py
+++ b/plone/app/contenttypes/browser/file.py
@@ -1,5 +1,6 @@
 # -*- coding: utf-8 -*-
 from plone.app.contenttypes.browser.utils import Utils
+from plone.app.contenttypes.utils import human_readable_size
 
 
 class FileView(Utils):
@@ -14,3 +15,6 @@ def is_audiotype(self):
 
     def get_mimetype_icon(self):
         return super(FileView, self).getMimeTypeIcon(self.context.file)
+
+    def human_readable_size(self):
+        return human_readable_size(self.context.file.getSize())
diff --git a/plone/app/contenttypes/browser/templates/file.pt b/plone/app/contenttypes/browser/templates/file.pt
index b6e8eaec..fcdab4f2 100644
--- a/plone/app/contenttypes/browser/templates/file.pt
+++ b/plone/app/contenttypes/browser/templates/file.pt
@@ -17,10 +17,7 @@
                            alt content_type;" border="0" />
       <tal:name tal:content="context/file/filename" >Filename</tal:name>
     </a>
-    <span class="discreet"
-        tal:define="size context/file/getSize;
-                    kb python:size/1024">
-      &mdash; <span tal:replace="kb" /> KB</span>
+    <span class="discreet">&mdash; <span tal:replace="view/human_readable_size" /></span>
   </p>
 
   <video tal:condition="view/is_videotype" controls="controls">
diff --git a/plone/app/contenttypes/tests/test_utils.py b/plone/app/contenttypes/tests/test_utils.py
new file mode 100644
index 00000000..91befe16
--- /dev/null
+++ b/plone/app/contenttypes/tests/test_utils.py
@@ -0,0 +1,23 @@
+# -*- coding: utf-8 -*-
+from plone.app.contenttypes.utils import human_readable_size
+
+import unittest
+
+
+class PloneAppContenttypesUtilsTestCase(unittest.TestCase):
+
+    def test_human_readable_size(self):
+        self.assertEqual(human_readable_size(0), '0 B')
+        self.assertEqual(human_readable_size(1), '1 B')
+        size = 1000
+        self.assertEqual(human_readable_size(1000), '1000 B')
+        size += 24
+        self.assertEqual(human_readable_size(size), '1.0 KB')
+        size += 512
+        self.assertEqual(human_readable_size(size), '1.5 KB')
+        size *= 1024
+        self.assertEqual(human_readable_size(size), '1.5 MB')
+        size *= 1024
+        self.assertEqual(human_readable_size(size), '1.5 GB')
+        size *= 1024
+        self.assertEqual(human_readable_size(size), '1536.0 GB')
diff --git a/plone/app/contenttypes/utils.py b/plone/app/contenttypes/utils.py
index 262fac81..39858ef5 100644
--- a/plone/app/contenttypes/utils.py
+++ b/plone/app/contenttypes/utils.py
@@ -42,3 +42,18 @@ def replace_link_variables_by_paths(context, url):
 def _replace_variable_by_path(url, variable, obj):
     path = '/'.join(obj.getPhysicalPath())
     return url.replace(variable, path)
+
+
+def human_readable_size(size):
+    """Return human readable size.
+    Based on https://stackoverflow.com/a/1094933
+    """
+    if size < 1024:
+        return '{size} B'.format(size=size)
+
+    for unit in ('KB', 'MB', 'GB'):
+        size /= 1024.0
+        if size < 1024.0:
+            return '{size:.1f} {unit}'.format(size=size, unit=unit)
+
+    return '{size:.1f} GB'.format(size=size)
diff --git a/setup.py b/setup.py
index dcd73c71..5a294ff1 100644
--- a/setup.py
+++ b/setup.py
@@ -5,7 +5,7 @@
 import os
 
 
-version = '1.4.10.dev0'
+version = '1.4.11.dev0'
 
 
 def read(*rnames):


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-04-03T23:50:05+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1aa973ca67c3c12bffa40777bd115d8ce08452cf

Added a changelog line

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 114aafcf..23294364 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix SearchableText in Python 3
+  [pbauer]
 
 
 1.4.10 (2018-04-03)


Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-04-11T14:19:32+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f73afece7b420bab60d718f5ab5dbd01a2d24823

Merge pull request #461 from plone/python3

fix SearchableText in py3

Files changed:
M CHANGES.rst
M plone/app/contenttypes/indexers.py

diff --git a/CHANGES.rst b/CHANGES.rst
index c747355e..e3fde7b3 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix SearchableText in Python 3
+  [pbauer]
 
 
 1.4.10 (2018-04-03)
diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py
index f01b9ff7..2273ae41 100644
--- a/plone/app/contenttypes/indexers.py
+++ b/plone/app/contenttypes/indexers.py
@@ -35,9 +35,14 @@ def _unicode_save_string_concat(*args):
     """
     result = ''
     for value in args:
-        if isinstance(value, six.text_type):
-            value = value.encode('utf-8', 'replace')
-        if value:
+        if six.PY2:
+            if isinstance(value, six.text_type):
+                value = value.encode('utf-8', 'replace')
+            if value:
+                result = ' '.join((result, value))
+        else:
+            if isinstance(value, six.binary_type):
+                value = safe_unicode(value)
             result = ' '.join((result, value))
     return result
 
@@ -52,9 +57,12 @@ def SearchableText(obj):
             # Before you think about switching raw/output
             # or mimeType/outputMimeType, first read
             # https://github.com/plone/Products.CMFPlone/issues/2066
+            raw = safe_unicode(textvalue.raw)
+            if six.PY2:
+                raw = raw.encode('utf-8', 'replace')
             text = transforms.convertTo(
                 'text/plain',
-                safe_unicode(textvalue.raw).encode('utf-8'),
+                raw,
                 mimetype=textvalue.mimeType,
             ).getData().strip()
 


