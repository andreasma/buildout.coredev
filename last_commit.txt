Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2019-10-31T12:56:18+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/1f9cd0616170edcaebb489509360860bb5fb1bdc

Removed broken X-XSS-Protection header.

Fixes https://github.com/plone/Products.CMFPlone/issues/2964 for the unstyled theme (Plone Default).

Added robot test to check that the homepage renderers without error in Plone Default style
Added robot test to check that the homepage renderers without error in Plone Classic Theme style.
(Note: I could not trigger an error in other, simpler tests.)

Test and merge this in combination with https://github.com/plone/plonetheme.classic/pull/8
Merge that one first.

Files changed:
A Products/CMFPlone/tests/robot/test_classic.robot
A Products/CMFPlone/tests/robot/test_unstyled.robot
A news/2964.bugfix
M Products/CMFPlone/skins/plone_templates/main_template.pt
M Products/CMFPlone/testing.py
M Products/CMFPlone/tests/test_robot.py

b'diff --git a/Products/CMFPlone/skins/plone_templates/main_template.pt b/Products/CMFPlone/skins/plone_templates/main_template.pt\nindex c843a494a..2d37032af 100644\n--- a/Products/CMFPlone/skins/plone_templates/main_template.pt\n+++ b/Products/CMFPlone/skins/plone_templates/main_template.pt\n@@ -21,8 +21,7 @@\n                   ajax_load request/ajax_load | nothing;\n                   ajax_include_head request/ajax_include_head | nothing;\n                   dummy python:request.RESPONSE.setHeader(\'X-UA-Compatible\', \'IE=edge\');\n-                  dummy python:request.RESPONSE.setHeader(\'X-Content-Type-Options\', \'nosniff\');\n-                  dummy python:request.RESPONSE.setHeader(\'X-XSS-Protection\', \'1; mode=block\');"\n+                  dummy python:request.RESPONSE.setHeader(\'X-Content-Type-Options\', \'nosniff\');"\n       tal:attributes="lang lang;\n                       xml:lang lang">\n \ndiff --git a/Products/CMFPlone/testing.py b/Products/CMFPlone/testing.py\nindex b51d46beb..a91db6030 100644\n--- a/Products/CMFPlone/testing.py\n+++ b/Products/CMFPlone/testing.py\n@@ -50,7 +50,33 @@ def tearDownPloneSite(self, portal):\n         portal.manage_delObjects([\'test-folder\'])\n \n \n+class UnstyledThemeLayer(ProductsCMFPloneLayer):\n+\n+    def setUpPloneSite(self, portal):\n+        super(UnstyledThemeLayer, self).setUpPloneSite(portal)\n+        portal.portal_skins.default_skin = \'Plone Default\'\n+\n+\n+class ClassicThemeLayer(ProductsCMFPloneLayer):\n+\n+    def setUpZope(self, app, configurationContext):\n+        super(ClassicThemeLayer, self).setUpZope(app, configurationContext)\n+        import plonetheme.classic\n+        xmlconfig.file(\n+            \'configure.zcml\',\n+            plonetheme.classic,\n+            context=configurationContext\n+        )\n+\n+    def setUpPloneSite(self, portal):\n+        super(ClassicThemeLayer, self).setUpPloneSite(portal)\n+        portal.portal_quickinstaller.installProducts([\'plonetheme.classic\'])\n+        portal.portal_skins.default_skin = \'Plone Classic Theme\'\n+\n+\n PRODUCTS_CMFPLONE_FIXTURE = ProductsCMFPloneLayer()\n+UNSTYLED_THEME_FIXTURE = UnstyledThemeLayer()\n+CLASSIC_THEME_FIXTURE = ClassicThemeLayer()\n \n PRODUCTS_CMFPLONE_INTEGRATION_TESTING = IntegrationTesting(\n     bases=(PRODUCTS_CMFPLONE_FIXTURE,),\n@@ -74,4 +100,18 @@ def tearDownPloneSite(self, portal):\n     name="CMFPloneLayer:Acceptance"\n )\n \n+UNSTYLED_THEME_ROBOT_TESTING = FunctionalTesting(\n+    bases=(UNSTYLED_THEME_FIXTURE,\n+           PRODUCTS_CMFPLONE_ROBOT_REMOTE_LIBRARY_FIXTURE,\n+           z2.ZSERVER_FIXTURE),\n+    name="UnstyledThemingLayer:Acceptance"\n+)\n+\n+CLASSIC_THEME_ROBOT_TESTING = FunctionalTesting(\n+    bases=(CLASSIC_THEME_FIXTURE,\n+           PRODUCTS_CMFPLONE_ROBOT_REMOTE_LIBRARY_FIXTURE,\n+           z2.ZSERVER_FIXTURE),\n+    name="ClassicThemingLayer:Acceptance"\n+)\n+\n optionflags = (doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE)\ndiff --git a/Products/CMFPlone/tests/robot/test_classic.robot b/Products/CMFPlone/tests/robot/test_classic.robot\nnew file mode 100644\nindex 000000000..5aa11f0a8\n--- /dev/null\n+++ b/Products/CMFPlone/tests/robot/test_classic.robot\n@@ -0,0 +1,18 @@\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Resource  common.robot\n+\n+Test Setup  Run keywords  Open SauceLabs test browser\n+Test Teardown  Run keywords  Report test status  Close all browsers\n+\n+*** Test cases ***\n+\n+Scenario: View homepage\n+    [Documentation]  We simply view the home page to see if it renders without error.\n+    Given the site root\n+    Then Page should contain  Plone\ndiff --git a/Products/CMFPlone/tests/robot/test_unstyled.robot b/Products/CMFPlone/tests/robot/test_unstyled.robot\nnew file mode 100644\nindex 000000000..5aa11f0a8\n--- /dev/null\n+++ b/Products/CMFPlone/tests/robot/test_unstyled.robot\n@@ -0,0 +1,18 @@\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Resource  common.robot\n+\n+Test Setup  Run keywords  Open SauceLabs test browser\n+Test Teardown  Run keywords  Report test status  Close all browsers\n+\n+*** Test cases ***\n+\n+Scenario: View homepage\n+    [Documentation]  We simply view the home page to see if it renders without error.\n+    Given the site root\n+    Then Page should contain  Plone\ndiff --git a/Products/CMFPlone/tests/test_robot.py b/Products/CMFPlone/tests/test_robot.py\nindex 611c7429b..fa66c13e1 100644\n--- a/Products/CMFPlone/tests/test_robot.py\n+++ b/Products/CMFPlone/tests/test_robot.py\n@@ -3,7 +3,9 @@\n import robotsuite\n from plone.testing import layered\n \n+from Products.CMFPlone.testing import CLASSIC_THEME_ROBOT_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_ROBOT_TESTING\n+from Products.CMFPlone.testing import UNSTYLED_THEME_ROBOT_TESTING\n \n \n def test_suite():\n@@ -15,10 +17,16 @@ def test_suite():\n         if doc.endswith(\'.robot\') and doc.startswith(\'test_\')\n     ]\n     for test in robot_tests:\n+        if \'unstyled\' in test:\n+            layer = UNSTYLED_THEME_ROBOT_TESTING\n+        elif \'classic\' in test:\n+            layer = CLASSIC_THEME_ROBOT_TESTING\n+        else:\n+            layer = PRODUCTS_CMFPLONE_ROBOT_TESTING\n         suite.addTests([\n             layered(\n                 robotsuite.RobotTestSuite(test),\n-                layer=PRODUCTS_CMFPLONE_ROBOT_TESTING\n+                layer=layer\n             ),\n         ])\n     return suite\ndiff --git a/news/2964.bugfix b/news/2964.bugfix\nnew file mode 100644\nindex 000000000..4f124f590\n--- /dev/null\n+++ b/news/2964.bugfix\n@@ -0,0 +1,2 @@\n+Removed broken ``X-XSS-Protection`` header.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/4.3.x
Date: 2019-12-03T14:43:23+01:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/0f92f7d0f854c2dcf76c1c50896109102d5c4672

Merge pull request #2972 from plone/maurits/issue-2964-remove-broken-x-xss-protection-header

Removed broken X-XSS-Protection header.

Files changed:
A Products/CMFPlone/tests/robot/test_classic.robot
A Products/CMFPlone/tests/robot/test_unstyled.robot
A news/2964.bugfix
M Products/CMFPlone/skins/plone_templates/main_template.pt
M Products/CMFPlone/testing.py
M Products/CMFPlone/tests/test_robot.py

b'diff --git a/Products/CMFPlone/skins/plone_templates/main_template.pt b/Products/CMFPlone/skins/plone_templates/main_template.pt\nindex c843a494a..2d37032af 100644\n--- a/Products/CMFPlone/skins/plone_templates/main_template.pt\n+++ b/Products/CMFPlone/skins/plone_templates/main_template.pt\n@@ -21,8 +21,7 @@\n                   ajax_load request/ajax_load | nothing;\n                   ajax_include_head request/ajax_include_head | nothing;\n                   dummy python:request.RESPONSE.setHeader(\'X-UA-Compatible\', \'IE=edge\');\n-                  dummy python:request.RESPONSE.setHeader(\'X-Content-Type-Options\', \'nosniff\');\n-                  dummy python:request.RESPONSE.setHeader(\'X-XSS-Protection\', \'1; mode=block\');"\n+                  dummy python:request.RESPONSE.setHeader(\'X-Content-Type-Options\', \'nosniff\');"\n       tal:attributes="lang lang;\n                       xml:lang lang">\n \ndiff --git a/Products/CMFPlone/testing.py b/Products/CMFPlone/testing.py\nindex b51d46beb..a91db6030 100644\n--- a/Products/CMFPlone/testing.py\n+++ b/Products/CMFPlone/testing.py\n@@ -50,7 +50,33 @@ def tearDownPloneSite(self, portal):\n         portal.manage_delObjects([\'test-folder\'])\n \n \n+class UnstyledThemeLayer(ProductsCMFPloneLayer):\n+\n+    def setUpPloneSite(self, portal):\n+        super(UnstyledThemeLayer, self).setUpPloneSite(portal)\n+        portal.portal_skins.default_skin = \'Plone Default\'\n+\n+\n+class ClassicThemeLayer(ProductsCMFPloneLayer):\n+\n+    def setUpZope(self, app, configurationContext):\n+        super(ClassicThemeLayer, self).setUpZope(app, configurationContext)\n+        import plonetheme.classic\n+        xmlconfig.file(\n+            \'configure.zcml\',\n+            plonetheme.classic,\n+            context=configurationContext\n+        )\n+\n+    def setUpPloneSite(self, portal):\n+        super(ClassicThemeLayer, self).setUpPloneSite(portal)\n+        portal.portal_quickinstaller.installProducts([\'plonetheme.classic\'])\n+        portal.portal_skins.default_skin = \'Plone Classic Theme\'\n+\n+\n PRODUCTS_CMFPLONE_FIXTURE = ProductsCMFPloneLayer()\n+UNSTYLED_THEME_FIXTURE = UnstyledThemeLayer()\n+CLASSIC_THEME_FIXTURE = ClassicThemeLayer()\n \n PRODUCTS_CMFPLONE_INTEGRATION_TESTING = IntegrationTesting(\n     bases=(PRODUCTS_CMFPLONE_FIXTURE,),\n@@ -74,4 +100,18 @@ def tearDownPloneSite(self, portal):\n     name="CMFPloneLayer:Acceptance"\n )\n \n+UNSTYLED_THEME_ROBOT_TESTING = FunctionalTesting(\n+    bases=(UNSTYLED_THEME_FIXTURE,\n+           PRODUCTS_CMFPLONE_ROBOT_REMOTE_LIBRARY_FIXTURE,\n+           z2.ZSERVER_FIXTURE),\n+    name="UnstyledThemingLayer:Acceptance"\n+)\n+\n+CLASSIC_THEME_ROBOT_TESTING = FunctionalTesting(\n+    bases=(CLASSIC_THEME_FIXTURE,\n+           PRODUCTS_CMFPLONE_ROBOT_REMOTE_LIBRARY_FIXTURE,\n+           z2.ZSERVER_FIXTURE),\n+    name="ClassicThemingLayer:Acceptance"\n+)\n+\n optionflags = (doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE)\ndiff --git a/Products/CMFPlone/tests/robot/test_classic.robot b/Products/CMFPlone/tests/robot/test_classic.robot\nnew file mode 100644\nindex 000000000..5aa11f0a8\n--- /dev/null\n+++ b/Products/CMFPlone/tests/robot/test_classic.robot\n@@ -0,0 +1,18 @@\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Resource  common.robot\n+\n+Test Setup  Run keywords  Open SauceLabs test browser\n+Test Teardown  Run keywords  Report test status  Close all browsers\n+\n+*** Test cases ***\n+\n+Scenario: View homepage\n+    [Documentation]  We simply view the home page to see if it renders without error.\n+    Given the site root\n+    Then Page should contain  Plone\ndiff --git a/Products/CMFPlone/tests/robot/test_unstyled.robot b/Products/CMFPlone/tests/robot/test_unstyled.robot\nnew file mode 100644\nindex 000000000..5aa11f0a8\n--- /dev/null\n+++ b/Products/CMFPlone/tests/robot/test_unstyled.robot\n@@ -0,0 +1,18 @@\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Resource  common.robot\n+\n+Test Setup  Run keywords  Open SauceLabs test browser\n+Test Teardown  Run keywords  Report test status  Close all browsers\n+\n+*** Test cases ***\n+\n+Scenario: View homepage\n+    [Documentation]  We simply view the home page to see if it renders without error.\n+    Given the site root\n+    Then Page should contain  Plone\ndiff --git a/Products/CMFPlone/tests/test_robot.py b/Products/CMFPlone/tests/test_robot.py\nindex 611c7429b..fa66c13e1 100644\n--- a/Products/CMFPlone/tests/test_robot.py\n+++ b/Products/CMFPlone/tests/test_robot.py\n@@ -3,7 +3,9 @@\n import robotsuite\n from plone.testing import layered\n \n+from Products.CMFPlone.testing import CLASSIC_THEME_ROBOT_TESTING\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_ROBOT_TESTING\n+from Products.CMFPlone.testing import UNSTYLED_THEME_ROBOT_TESTING\n \n \n def test_suite():\n@@ -15,10 +17,16 @@ def test_suite():\n         if doc.endswith(\'.robot\') and doc.startswith(\'test_\')\n     ]\n     for test in robot_tests:\n+        if \'unstyled\' in test:\n+            layer = UNSTYLED_THEME_ROBOT_TESTING\n+        elif \'classic\' in test:\n+            layer = CLASSIC_THEME_ROBOT_TESTING\n+        else:\n+            layer = PRODUCTS_CMFPLONE_ROBOT_TESTING\n         suite.addTests([\n             layered(\n                 robotsuite.RobotTestSuite(test),\n-                layer=PRODUCTS_CMFPLONE_ROBOT_TESTING\n+                layer=layer\n             ),\n         ])\n     return suite\ndiff --git a/news/2964.bugfix b/news/2964.bugfix\nnew file mode 100644\nindex 000000000..4f124f590\n--- /dev/null\n+++ b/news/2964.bugfix\n@@ -0,0 +1,2 @@\n+Removed broken ``X-XSS-Protection`` header.\n+[maurits]\n'

