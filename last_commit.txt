Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/c844be8d5c144f71c59197e5118ee70b3e9cb253

Structure pattern: Reset any applied filters after changing the path.

Files changed:
A news/937.feature
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/structure/js/views/textfilter.js

b"diff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js\nindex 1b8696dd2..fd93faffe 100644\n--- a/mockup/patterns/structure/js/views/app.js\n+++ b/mockup/patterns/structure/js/views/app.js\n@@ -274,6 +274,7 @@ define([\n       return this.collection.getCurrentPath();\n     },\n     setCurrentPath: function(path) {\n+      this.toolbar.get('filter').clearFilter();\n       this.collection.setCurrentPath(path);\n     },\n     getAjaxUrl: function(url) {\ndiff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex be573f9f2..c5e0c1e47 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -34,6 +34,22 @@ define([\n       this.app = this.options.app;\n     },\n \n+    setTerm: function(term) {\n+      this.term = term;\n+      this.$el[0].querySelector('.search-query').value = term;\n+    },\n+\n+    setQuery: function(query) {\n+      this.$queryString.val(JSON.stringify(query));\n+      this.app.additionalCriterias = query;\n+      this.app.collection.currentPage = 1;\n+    },\n+\n+    clearFilter: function() {\n+      this.setTerm('');\n+      this.setQuery([]);\n+    },\n+\n     render: function() {\n       this.$el.html(this.template({_t: _t}));\n       this.button = new ButtonView({\ndiff --git a/news/937.feature b/news/937.feature\nnew file mode 100644\nindex 000000000..617b9f11c\n--- /dev/null\n+++ b/news/937.feature\n@@ -0,0 +1,2 @@\n+Structure pattern: Reset any applied filters after changing the path.\n+[thet]\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/9d5b38ae2cb942b188c6b6e64863d225925a925a

Show visually if a filter is set.

Files changed:
M mockup/patterns/structure/js/views/textfilter.js
M mockup/patterns/structure/less/pattern.structure.less
M news/937.feature

b"diff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex c5e0c1e47..574c960dc 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -35,14 +35,25 @@ define([\n     },\n \n     setTerm: function(term) {\n+      var term_el = this.$el[0].querySelector('.search-query');\n       this.term = term;\n-      this.$el[0].querySelector('.search-query').value = term;\n+      term_el.value = term;\n+      if (term) {\n+        term_el.classList.add('has-filter');\n+      } else {\n+        term_el.classList.remove('has-filter');\n+      }\n     },\n \n     setQuery: function(query) {\n       this.$queryString.val(JSON.stringify(query));\n       this.app.additionalCriterias = query;\n       this.app.collection.currentPage = 1;\n+      if (query.length) {\n+        this.button.$el[0].classList.add('has-filter');\n+      } else {\n+        this.button.$el[0].classList.remove('has-filter');\n+      }\n     },\n \n     clearFilter: function() {\n@@ -79,6 +90,11 @@ define([\n         }\n         self.timeoutId = setTimeout(function() {\n           var criterias = $.parseJSON(self.$queryString.val());\n+          if (criterias.length > 0) {\n+            self.button.$el[0].classList.add('has-filter');\n+          } else {\n+            self.button.$el[0].classList.remove('has-filter');\n+          }\n           self.app.additionalCriterias = criterias;\n           self.app.collection.currentPage = 1;\n           self.app.collection.pager();\n@@ -109,12 +125,16 @@ define([\n         clearTimeout(self.timeoutId);\n       }\n       self.timeoutId = setTimeout(function() {\n-        self.term = encodeURIComponent($(event.currentTarget).val());\n+        var term_el = $(event.currentTarget);\n+        self.term = encodeURIComponent(term_el.val());\n         self.app.collection.currentPage = 1;\n         self.app.collection.pager();\n \n-        if (!self.term){\n+        if (!self.term) {\n+            term_el[0].classList.remove('has-filter');\n             self.app.setStatus();\n+        } else {\n+          term_el[0].classList.add('has-filter');\n         }\n \n       }, this.keyupDelay);\ndiff --git a/mockup/patterns/structure/less/pattern.structure.less b/mockup/patterns/structure/less/pattern.structure.less\nindex d355eb07b..72d590b82 100644\n--- a/mockup/patterns/structure/less/pattern.structure.less\n+++ b/mockup/patterns/structure/less/pattern.structure.less\n@@ -67,6 +67,13 @@\n         .btn-sm();\n     }\n \n+    .btn.has-filter {\n+        .btn-info();\n+    }\n+    input.has-filter {\n+        border: 1px solid @btn-info-border;\n+    }\n+\n     .navbar {\n         position: sticky;\n         top: 0;\ndiff --git a/news/937.feature b/news/937.feature\nindex 617b9f11c..c1bdfc3d6 100644\n--- a/news/937.feature\n+++ b/news/937.feature\n@@ -1,2 +1,3 @@\n Structure pattern: Reset any applied filters after changing the path.\n+Show visually if a filter is set.\n [thet]\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/9afa2eb7b4424a0dcc325e0beddb39c589582f45

Allow multiple status messages.

Files changed:
A mockup/patterns/structure/templates/status.xml
M mockup/js/utils.js
M mockup/patterns/structure/js/actions.js
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/structure/js/views/paging.js
M mockup/patterns/structure/js/views/table.js
M mockup/patterns/structure/js/views/textfilter.js
M mockup/patterns/structure/less/pattern.structure.less
M mockup/patterns/structure/templates/table.xml
M news/937.feature

b'diff --git a/mockup/js/utils.js b/mockup/js/utils.js\nindex 785e52f37..0293b865e 100644\n--- a/mockup/js/utils.js\n+++ b/mockup/js/utils.js\n@@ -354,6 +354,13 @@ define([\n     }\n   };\n \n+  var createElementFromHTML = function(htmlString) {\n+    // From: https://stackoverflow.com/a/494348/1337474\n+    var div = document.createElement(\'div\');\n+    div.innerHTML = htmlString.trim();\n+    return div.firstChild;\n+  };\n+\n   return {\n     bool: bool,\n     escapeHTML: escapeHTML,\n@@ -367,6 +374,7 @@ define([\n     parseBodyTag: parseBodyTag,\n     QueryHelper: QueryHelper,\n     setId: setId,\n-    storage: storage\n+    storage: storage,\n+    createElementFromHTML: createElementFromHTML\n   };\n });\ndiff --git a/mockup/patterns/structure/js/actions.js b/mockup/patterns/structure/js/actions.js\nindex e37d95710..90de5378e 100644\n--- a/mockup/patterns/structure/js/actions.js\n+++ b/mockup/patterns/structure/js/actions.js\n@@ -80,7 +80,8 @@ define([\n         } else {\n           msg = _t(\'Error \' + failMsg + \' "\' + self.model.attributes.Title + \'"\');\n         }\n-        self.app.setStatus({text: msg, type: data.status || \'warning\'});\n+        self.app.clearStatus();\n+        self.app.setStatus({ text: msg, type: data.status || \'warning\' });\n       });\n     },\n \ndiff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js\nindex fd93faffe..2a6d74d44 100644\n--- a/mockup/patterns/structure/js/views/app.js\n+++ b/mockup/patterns/structure/js/views/app.js\n@@ -16,6 +16,7 @@ define([\n   \'mockup-patterns-structure-url/js/views/upload\',\n   \'mockup-patterns-structure-url/js/collections/result\',\n   \'mockup-patterns-structure-url/js/collections/selected\',\n+  \'text!mockup-patterns-structure-url/templates/status.xml\',\n   \'mockup-utils\',\n   \'translate\',\n   \'pat-logger\',\n@@ -24,18 +25,15 @@ define([\n   TableView, SelectionWellView,\n   GenericPopover, RearrangeView, SelectionButtonView,\n   PagingView, ColumnsView, TextFilterView, UploadView,\n-  _ResultCollection, SelectedCollection, utils, _t, logger) {\n+  _ResultCollection, SelectedCollection, StatusTemplate, utils, _t, logger) {\n   \'use strict\';\n \n   var log = logger.getLogger(\'pat-structure\');\n \n   var AppView = BaseView.extend({\n     tagName: \'div\',\n-    status: {\n-      type: \'none\',\n-      text: \'\',\n-      label: \'\'\n-    },\n+    statusTemplate: _.template(StatusTemplate),\n+    statusMessages: [],\n     sort_on: \'getObjPositionInParent\',\n     sort_order: \'ascending\',\n     additionalCriterias: [],\n@@ -274,6 +272,7 @@ define([\n       return this.collection.getCurrentPath();\n     },\n     setCurrentPath: function(path) {\n+      this.clearStatus();\n       this.toolbar.get(\'filter\').clearFilter();\n       this.collection.setCurrentPath(path);\n     },\n@@ -330,19 +329,19 @@ define([\n       }\n     },\n     ajaxSuccessResponse: function(data, callback) {\n-      var self = this;\n-      self.selectedCollection.reset();\n+      this.clearStatus();\n+      this.selectedCollection.reset();\n       if (data.status === \'success\') {\n-        self.collection.reset();\n+        this.collection.reset();\n       }\n       if (data.msg) {\n         // give status message somewhere...\n-        self.setStatus(data.msg, data.status || \'warning\');\n+        this.setStatus({text: data.msg, type: data.status || \'warning\'});\n       }\n       if (callback !== null && callback !== undefined) {\n         callback(data);\n       }\n-      self.collection.pager();\n+      this.collection.pager();\n     },\n     ajaxErrorResponse: function(response, url) {\n       if (response.status === 404) {\n@@ -450,8 +449,9 @@ define([\n         },\n         dataType: \'json\',\n         success: function(data) {\n+          self.clearStatus();\n           if (data.msg) {\n-            self.setStatus(data.msg);\n+            self.setStatus({text: data.msg});\n           } else if (data.status !== \'success\') {\n             // XXX handle error here with something?\n             self.setStatus({text: \'error moving item\', type: \'error\'});\n@@ -459,43 +459,74 @@ define([\n           self.collection.pager(); // reload it all\n         },\n         error: function() {\n+          self.clearStatus();\n           self.setStatus({text: \'error moving item\', type: \'error\'});\n         }\n       });\n     },\n-    setStatus: function(msg, type, btn) {\n-      if (!msg) {\n-        // clear it\n-        this.status.text = \'\';\n-        this.status.label = \'\';\n-        this.status.type = \'none\';\n-      } else if (typeof(msg) === \'string\') {\n-        this.status.text = msg;\n-        this.status.label = \'\';\n-        this.status.type = type || \'warning\';\n+\n+    clearStatus: function(status) {\n+      var statusContainer = this.$el[0].querySelector(\'.fc-status-container\');\n+\n+      if (status) {\n+        // remove specific status, also those marked with ``fixed``.\n+        try {\n+          statusContainer.removeChild(status.el);\n+        } catch(e) {\n+          // just ignore.\n+        }\n+        var idx = this.statusMessages.indexOf(status);\n+        if (idx > -1) {\n+          this.statusMessages.splice(idx, 1);\n+        }\n       } else {\n-        // support setting portal status messages here\n-        this.status.label = msg.label || \'\';\n-        this.status.text = msg.text;\n-        this.status.type = msg.type || \'warning\';\n+        // remove all status messages except those marked with ``fixed``.\n+        for (var i = 0, len = this.statusMessages.length; i < len; i++) {\n+          status = this.statusMessages[i];\n+          if (! status.fixed) {\n+            try {\n+              statusContainer.removeChild(status.el);\n+            } catch(e) {\n+              // just ignore.\n+            }\n+          }\n+        }\n+        this.statusMessages = [];\n       }\n-      // still need to manually set in case rendering isn\'t done(especially true for tests)\n-      var $status = this.$(\'.status\');\n-      if ($status.length > 0){\n-          $status[0].className = \'alert alert-\' + this.status.type + \' status\';\n-          var $text = $(\'<span></span>\');\n-          $text.text(this.status.text);\n-          var $label = $(\'<strong></strong>\');\n-          $label.text(this.status.label);\n-          $status.empty().append($label).append($text);\n-          if (btn) { $status.append(btn) }\n+    },\n+\n+    setStatus: function(status, btn, fixed) {\n+      var el = this.statusTemplate({\n+        label: status.label || \'\',\n+        text: status.text,\n+        type: status.type || \'warning\'\n+      });\n+\n+      el = utils.createElementFromHTML(el);\n+\n+      if (btn) {\n+        btn = $(btn)[0];  // support jquert + bare dom elements\n+        el.appendChild(btn);\n       }\n+\n+      var status = {\n+        el: el,\n+        fixed: fixed\n+      };\n+\n+      var statusContainer = this.$el[0].querySelector(\'.fc-status-container\');\n+      statusContainer.appendChild(status.el);\n+      this.statusMessages.push(status);\n+\n+      return status;\n     },\n+\n     render: function() {\n       var self = this;\n \n       self.$el.append(self.toolbar.render().el);\n       self.$el.append(self.wellView.render().el);\n+      self.$el.append(utils.createElementFromHTML(\'<div class="fc-status-container"></div>\'));\n       self.$el.append(self.columnsView.render().el);\n       if (self.rearrangeView) {\n         self.$el.append(self.rearrangeView.render().el);\ndiff --git a/mockup/patterns/structure/js/views/paging.js b/mockup/patterns/structure/js/views/paging.js\nindex 56a2fbc6f..8bb6ad852 100644\n--- a/mockup/patterns/structure/js/views/paging.js\n+++ b/mockup/patterns/structure/js/views/paging.js\n@@ -78,33 +78,33 @@ define([\n     },\n     nextResultPage: function(e) {\n       e.preventDefault();\n-      this.app.setStatus();\n+      this.app.clearStatus();\n       this.collection.requestNextPage();\n     },\n     previousResultPage: function(e) {\n       e.preventDefault();\n-      this.app.setStatus();\n+      this.app.clearStatus();\n       this.collection.requestPreviousPage();\n     },\n     gotoFirst: function(e) {\n       e.preventDefault();\n-      this.app.setStatus();\n+      this.app.clearStatus();\n       this.collection.goTo(this.collection.information.firstPage);\n     },\n     gotoLast: function(e) {\n       e.preventDefault();\n-      this.app.setStatus();\n+      this.app.clearStatus();\n       this.collection.goTo(this.collection.information.totalPages);\n     },\n     gotoPage: function(e) {\n       e.preventDefault();\n-      this.app.setStatus();\n+      this.app.clearStatus();\n       var page = $(e.target).text();\n       this.collection.goTo(page);\n     },\n     changeCount: function(e) {\n       e.preventDefault();\n-      this.app.setStatus();\n+      this.app.clearStatus();\n       var per = $(e.target).text();\n       this.collection.howManyPer(per);\n       this.app.setCookieSetting(\'perPage\', per);\ndiff --git a/mockup/patterns/structure/js/views/table.js b/mockup/patterns/structure/js/views/table.js\nindex 5907c7452..829a9f1b8 100644\n--- a/mockup/patterns/structure/js/views/table.js\n+++ b/mockup/patterns/structure/js/views/table.js\n@@ -96,7 +96,6 @@ define([\n             return val.length > 0;\n           }\n         ),\n-        status: self.app.status,\n         activeColumns: self.app.activeColumns,\n         availableColumns: self.app.availableColumns,\n         datatables_options: JSON.stringify(datatables_options)\n@@ -145,9 +144,12 @@ define([\n                     // Restore reordering by drag and drop\n                     self.addReordering();\n                     // Clear the status message\n-                    self.app.setStatus();\n+                    self.app.clearStatus();\n                   });\n-        self.app.setStatus(_t(\'Notice: Drag and drop reordering is disabled when viewing the contents sorted by a column.\'), \'warning\', btn = btn);\n+        self.app.setStatus({\n+          text: _t(\'Notice: Drag and drop reordering is disabled when viewing the contents sorted by a column.\'),\n+          type: \'warning\'\n+        }, btn = btn);\n         $(".pat-datatables tbody").find(\'tr\').off("drag")\n         self.$el.removeClass(\'order-support\');\n       } );\ndiff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex 574c960dc..dbf04da4d 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -132,7 +132,7 @@ define([\n \n         if (!self.term) {\n             term_el[0].classList.remove(\'has-filter\');\n-            self.app.setStatus();\n+            self.app.clearStatus();\n         } else {\n           term_el[0].classList.add(\'has-filter\');\n         }\ndiff --git a/mockup/patterns/structure/less/pattern.structure.less b/mockup/patterns/structure/less/pattern.structure.less\nindex 72d590b82..0200076e8 100644\n--- a/mockup/patterns/structure/less/pattern.structure.less\n+++ b/mockup/patterns/structure/less/pattern.structure.less\n@@ -155,13 +155,17 @@\n             height: 31px;\n         }\n     }\n-    .alert.status{\n-        margin-bottom: 5px;\n-        padding: 5px;\n+    .fc-status {\n+        display: flex;\n+        align-items: center;\n+        margin-bottom: 1em;\n+        padding: 0.5em;\n         color: @plone-link-color;\n-\n+        .fc-status-text {\n+            flex-grow: 1;\n+        }\n         .btn {\n-            margin-left: 10px;\n+            margin-left: 1em;\n         }\n \n     }\ndiff --git a/mockup/patterns/structure/templates/status.xml b/mockup/patterns/structure/templates/status.xml\nnew file mode 100644\nindex 000000000..5b8b37107\n--- /dev/null\n+++ b/mockup/patterns/structure/templates/status.xml\n@@ -0,0 +1,4 @@\n+<div class="alert alert-<%- type %> status fc-status">\n+  <strong class="fc-status-label"><%- label %></strong>\n+  <span class="fc-status-text"><%- text %></span>&nbsp;<% // &nbsp; to get correct height for empty alerts %>\n+</div>\ndiff --git a/mockup/patterns/structure/templates/table.xml b/mockup/patterns/structure/templates/table.xml\nindex 296b8d864..9f7fb578d 100644\n--- a/mockup/patterns/structure/templates/table.xml\n+++ b/mockup/patterns/structure/templates/table.xml\n@@ -1,8 +1,3 @@\n-<div class="alert alert-<%- status.type %> status">\n-  <strong><%- status.label %></strong>\n-  <span><%- status.text %></span>&nbsp;<% // &nbsp; to get correct height for empty alerts %>\n-</div>\n-\n <div class="fc-breadcrumbs-container">\n   <div class="fc-breadcrumbs" colspan="<%- activeColumns.length + 3 %>">\n     <a href="#" data-path="/">\ndiff --git a/news/937.feature b/news/937.feature\nindex c1bdfc3d6..80ef730f1 100644\n--- a/news/937.feature\n+++ b/news/937.feature\n@@ -1,3 +1,4 @@\n Structure pattern: Reset any applied filters after changing the path.\n Show visually if a filter is set.\n+Allow multiple status messages.\n [thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/7aaede56202cb33e90d197414f5f7c3b1478e17e

Show statusmessage with "Clear filter" button when filters are applied.

Files changed:
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/structure/js/views/textfilter.js
M news/937.feature

b'diff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js\nindex 2a6d74d44..ee64de2bb 100644\n--- a/mockup/patterns/structure/js/views/app.js\n+++ b/mockup/patterns/structure/js/views/app.js\n@@ -273,7 +273,6 @@ define([\n     },\n     setCurrentPath: function(path) {\n       this.clearStatus();\n-      this.toolbar.get(\'filter\').clearFilter();\n       this.collection.setCurrentPath(path);\n     },\n     getAjaxUrl: function(url) {\ndiff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex dbf04da4d..1dff774a0 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -28,18 +28,46 @@ define([\n     term: null,\n     timeoutId: null,\n     keyupDelay: 300,\n+    filterStatusMessage: null,\n \n     initialize: function(options) {\n       BaseView.prototype.initialize.apply(this, [options]);\n       this.app = this.options.app;\n     },\n \n+    setFilterStatusMessage: function() {\n+      if (!this.filterStatusMessage) {\n+\n+        var clear_btn = $(\'<button type="button" class="btn btn-danger btn-xs"></button>\')\n+          .text(_t(\'Clear filter\'))\n+          .on(\'click\', function() {\n+            this.clearFilter();\n+          }.bind(this));\n+\n+        this.filterStatusMessage = this.app.setStatus({\n+          label: _t(\'Some filters applied\'),\n+          text: _t(\'This listing has filters applied. Not all items are shown.\'),\n+          type: \'warning\'\n+        }, clear_btn, true);\n+      }\n+    },\n+\n+    clearFilterStatusMessage: function() {\n+      if (this.filterStatusMessage && !this.term && !this.app.additionalCriterias.length) {\n+        this.app.clearStatus(this.filterStatusMessage);\n+        this.filterStatusMessage = null;\n+      }\n+    },\n+\n     setTerm: function(term) {\n       var term_el = this.$el[0].querySelector(\'.search-query\');\n       this.term = term;\n       term_el.value = term;\n+      this.app.collection.currentPage = 1;\n+      this.app.collection.pager();\n       if (term) {\n         term_el.classList.add(\'has-filter\');\n+        this.setFilterStatusMessage();\n       } else {\n         term_el.classList.remove(\'has-filter\');\n       }\n@@ -49,8 +77,10 @@ define([\n       this.$queryString.val(JSON.stringify(query));\n       this.app.additionalCriterias = query;\n       this.app.collection.currentPage = 1;\n+      this.app.collection.pager();\n       if (query.length) {\n         this.button.$el[0].classList.add(\'has-filter\');\n+        this.setFilterStatusMessage();\n       } else {\n         this.button.$el[0].classList.remove(\'has-filter\');\n       }\n@@ -59,6 +89,8 @@ define([\n     clearFilter: function() {\n       this.setTerm(\'\');\n       this.setQuery([]);\n+      this.clearFilterStatusMessage();\n+      this.app.clearStatus();\n     },\n \n     render: function() {\n@@ -92,8 +124,10 @@ define([\n           var criterias = $.parseJSON(self.$queryString.val());\n           if (criterias.length > 0) {\n             self.button.$el[0].classList.add(\'has-filter\');\n+            self.setFilterStatusMessage();\n           } else {\n             self.button.$el[0].classList.remove(\'has-filter\');\n+            self.clearFilterStatusMessage();\n           }\n           self.app.additionalCriterias = criterias;\n           self.app.collection.currentPage = 1;\n@@ -132,9 +166,10 @@ define([\n \n         if (!self.term) {\n             term_el[0].classList.remove(\'has-filter\');\n-            self.app.clearStatus();\n+            self.clearFilterStatusMessage();\n         } else {\n           term_el[0].classList.add(\'has-filter\');\n+          self.setFilterStatusMessage();\n         }\n \n       }, this.keyupDelay);\ndiff --git a/news/937.feature b/news/937.feature\nindex 80ef730f1..1c8637936 100644\n--- a/news/937.feature\n+++ b/news/937.feature\n@@ -1,4 +1,5 @@\n-Structure pattern: Reset any applied filters after changing the path.\n+Structure pattern:\n+Show statusmessage with "Clear filter" button when filters are applied.\n Show visually if a filter is set.\n Allow multiple status messages.\n [thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/e0f6150b4c67de7d8b9aab9e812e5c55364bb670

Querystring popover button: filter icon, "Filter" tooltip.

Files changed:
M mockup/patterns/structure/js/views/textfilter.js
M news/937.feature

b'diff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex 1dff774a0..40e4b5427 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -96,8 +96,8 @@ define([\n     render: function() {\n       this.$el.html(this.template({_t: _t}));\n       this.button = new ButtonView({\n-        tooltip: _t(\'Query\'),\n-        icon: \'search\'\n+        tooltip: _t(\'Filter\'),\n+        icon: \'filter\'\n       });\n       this.popover = new PopoverView({\n         triggerView: this.button,\ndiff --git a/news/937.feature b/news/937.feature\nindex 1c8637936..8ee27f94e 100644\n--- a/news/937.feature\n+++ b/news/937.feature\n@@ -2,4 +2,5 @@ Structure pattern:\n Show statusmessage with "Clear filter" button when filters are applied.\n Show visually if a filter is set.\n Allow multiple status messages.\n+Querystring popover button: filter icon, "Filter" tooltip.\n [thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/fe44afcb66a5f3f09fa74cc1be5395150fae4d94

Structure pattern: Change message from misleading "Cannot order items while querying" to "Drag and drop reordering is disabled while filters are applied.".
Fixes: https://github.com/collective/plone.app.locales/issues/173

Files changed:
M mockup/patterns/structure/js/views/table.js
M news/937.feature

b'diff --git a/mockup/patterns/structure/js/views/table.js b/mockup/patterns/structure/js/views/table.js\nindex 829a9f1b8..d80a58a2e 100644\n--- a/mockup/patterns/structure/js/views/table.js\n+++ b/mockup/patterns/structure/js/views/table.js\n@@ -195,7 +195,7 @@ define([\n       var self = this;\n       // if we have a custom query going on, we do not allow sorting.\n       if (self.app.inQueryMode()) {\n-        self.app.setStatus({text: _t(\'Cannot order items while querying\'), type: \'warning\'});\n+        self.app.setStatus({text: _t(\'Drag and drop reordering is disabled while filters are applied.\'), type: \'warning\'});\n         self.$el.removeClass(\'order-support\');\n         return;\n       }\ndiff --git a/news/937.feature b/news/937.feature\nindex 8ee27f94e..ea9a7eecc 100644\n--- a/news/937.feature\n+++ b/news/937.feature\n@@ -3,4 +3,6 @@ Show statusmessage with "Clear filter" button when filters are applied.\n Show visually if a filter is set.\n Allow multiple status messages.\n Querystring popover button: filter icon, "Filter" tooltip.\n+Change message from misleading "Cannot order items while querying" to "Drag and drop reordering is disabled while filters are applied.". Fixes: https://github.com/collective/plone.app.locales/issues/173\n+\n [thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/b79b86ff0b776c380e55bb40bda77a2605a1460b

Display toolbar a bit compacter.

Files changed:
M mockup/patterns/structure/less/pattern.structure.less
M news/937.feature

b'diff --git a/mockup/patterns/structure/less/pattern.structure.less b/mockup/patterns/structure/less/pattern.structure.less\nindex 0200076e8..30d4d5da1 100644\n--- a/mockup/patterns/structure/less/pattern.structure.less\n+++ b/mockup/patterns/structure/less/pattern.structure.less\n@@ -79,8 +79,11 @@\n         top: 0;\n         z-index: 10;\n         background-color: #fafafa;\n-        border-bottom: 1px solid #ccc;\n-        border-radius: 0;\n+\n+        border: none;\n+        min-height: auto;\n+        margin: 0;\n+\n \n         &>a.btn:last-of-type,\n         .btn-group {\ndiff --git a/news/937.feature b/news/937.feature\nindex ea9a7eecc..daa7cff74 100644\n--- a/news/937.feature\n+++ b/news/937.feature\n@@ -4,5 +4,5 @@ Show visually if a filter is set.\n Allow multiple status messages.\n Querystring popover button: filter icon, "Filter" tooltip.\n Change message from misleading "Cannot order items while querying" to "Drag and drop reordering is disabled while filters are applied.". Fixes: https://github.com/collective/plone.app.locales/issues/173\n-\n+Display toolbar a bit compacter.\n [thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/a7c781238c73c2dd0bf5a6d2441ea1000117b3dd

Test fixes

Files changed:
M mockup/tests/pattern-structure-test.js

b'diff --git a/mockup/tests/pattern-structure-test.js b/mockup/tests/pattern-structure-test.js\nindex 8812270f4..00684df24 100644\n--- a/mockup/tests/pattern-structure-test.js\n+++ b/mockup/tests/pattern-structure-test.js\n@@ -175,8 +175,8 @@ define([\n       $(\'a.cutItem\', el).click();\n       this.clock.tick(500);\n \n-      expect(this.app.$(\'.status\').text().trim()).to.equal(\'Cut "Dummy Object"\');\n-      expect(this.app.$(\'.status\').hasClass(\'alert-successss\'));\n+      expect(this.app.$(\'.fc-status .fc-status-text\').text().trim()).to.equal(\'Cut "Dummy Object"\');\n+      expect(this.app.$(\'.fc-status\').hasClass(\'alert-successss\'));\n     });\n \n     it(\'custom action menu items\', function() {\n@@ -206,8 +206,8 @@ define([\n \n       $(\'a.cutItem\', el).click();\n       this.clock.tick(500);\n-      expect(this.app.$(\'.status\').text().trim()).to.equal(\'Cut "Dummy Object"\');\n-      expect(this.app.$(\'.status\').hasClass(\'alert-success\'));\n+      expect(this.app.$(\'.fc-status .fc-status-text\').text().trim()).to.equal(\'Cut "Dummy Object"\');\n+      expect(this.app.$(\'.fc-status\').hasClass(\'alert-success\'));\n     });\n \n     it(\'custom action menu items and actions.\', function() {\n@@ -220,7 +220,7 @@ define([\n           },\n           foobarClicked: function(e) {\n             var self = this;\n-            self.app.setStatus(\'Status: foobar clicked\');\n+            self.app.setStatus({ text: \'Status: foobar clicked\' });\n           }\n         });\n         return Actions;\n@@ -255,12 +255,11 @@ define([\n \n       $(\'a.foobar\', el).click();\n       this.clock.tick(500);\n-      expect(this.app.$(\'.status\').text().trim()).to.equal(\'Status: foobar clicked\');\n-      expect(this.app.$(\'.status\').hasClass(\'alert-warning\'));  // default status type\n+      expect(this.app.$(\'.fc-status .fc-status-text\').text().trim()).to.equal(\'Status: foobar clicked\');\n+      expect(this.app.$(\'.fc-status\').hasClass(\'alert-warning\'));  // default status type\n     });\n \n     it(\'custom action menu actions missing.\', function() {\n-      this.app.setStatus(null); // reset\n       // Define a custom dummy "module"\n       define(\'dummytestactions\', [\'backbone\'], function(Backbone) {\n         var Actions = Backbone.Model.extend({\n@@ -270,7 +269,7 @@ define([\n           },\n           barbazClicked: function(e) {\n             var self = this;\n-            self.app.setStatus(\'Status: barbaz clicked\');\n+            self.app.setStatus({ text: \'Status: barbaz clicked\' });\n           }\n         });\n         return Actions;\n@@ -309,10 +308,9 @@ define([\n \n       // Broken/missing action\n       var el = menu.render().el;\n-      this.app.setStatus(null); // reset\n       $(\'a.foobar\', el).click();\n       this.clock.tick(500);\n-      expect(this.app.$(\'.status\').text().trim()).to.equal(\'\');\n+      expect(this.app.$(\'.fc-status .fc-status-text\').text().trim()).to.equal(\'\');\n     });\n \n     it(\'custom action menu via generator.\', function() {\n@@ -325,7 +323,7 @@ define([\n           },\n           barbazClicked: function(e) {\n             var self = this;\n-            self.app.setStatus({text: \'Status: barbaz clicked\', type: \'success\'});\n+            self.app.setStatus({ text: \'Status: barbaz clicked\', type: \'success\' });\n           }\n         });\n         return Actions;\n@@ -366,8 +364,8 @@ define([\n       var el = menu.render().el;\n       $(\'a.barbaz\', el).click();\n       this.clock.tick(500);\n-      expect(this.app.$(\'.status\').text().trim()).to.equal(\'Status: barbaz clicked\');\n-      expect(this.app.$(\'.status\').hasClass(\'alert-success\'));\n+      expect(this.app.$(\'.fc-status .fc-status-text\').text().trim()).to.equal(\'Status: barbaz clicked\');\n+      expect(this.app.$(\'.fc-status\').hasClass(\'alert-success\'));\n     });\n \n     it(\'custom action menu items in dropdown only\', function() {\n@@ -1087,8 +1085,8 @@ define([\n       $popover.find(\'button\').trigger(\'click\');\n       this.clock.tick(1000);\n       expect($popover.hasClass(\'active\')).to.equal(false);\n-      expect(this.$el.find(\'.order-support .status\').html()).to.contain(\'rearrange\');\n-      expect(this.app.$(\'.status\').hasClass(\'alert-successss\'));\n+      expect(this.$el.find(\'.order-support .fc-status\').html()).to.contain(\'rearrange\');\n+      expect(this.app.$(\'.fc-status\').hasClass(\'alert-successss\'));\n     });\n \n     it(\'test select all\', function() {\n@@ -1229,7 +1227,7 @@ define([\n         \'Set as default page\');\n       $(\'a.set-default-page\', item).click();\n       this.clock.tick(1000);\n-      expect(this.$el.find(\'.order-support .status\').html()).to.contain(\'defaulted\');\n+      expect(this.$el.find(\'.fc-status\').html()).to.contain(\'defaulted\');\n     });\n \n     it(\'test itemRow actionmenu paste click\', function() {\n@@ -1245,7 +1243,7 @@ define([\n       expect($(\'a.pasteItem\', item0).text().trim()).to.equal(\'Paste\');\n       $(\'a.pasteItem\', item0).click();\n       this.clock.tick(1000);\n-      expect(this.$el.find(\'.order-support .status\').html()).to.contain(\'Pasted into "Folder"\');\n+      expect(this.$el.find(\'.fc-status\').html()).to.contain(\'Pasted into "Folder"\');\n     });\n \n     it(\'test itemRow actionmenu move-top click\', function() {\n@@ -1261,9 +1259,9 @@ define([\n       $(\'.actionmenu a.move-top\', item10).trigger(\'click\');\n       this.clock.tick(1000);\n \n-      expect(this.$el.find(\'.order-support .status\').html()).to.contain(\'moved\');\n-      expect(this.$el.find(\'.order-support .status\').html()).to.contain(\'delta=top\');\n-      expect(this.$el.find(\'.order-support .status\').html()).to.contain(\'id=item9\');\n+      expect(this.$el.find(\'.fc-status\').html()).to.contain(\'moved\');\n+      expect(this.$el.find(\'.fc-status\').html()).to.contain(\'delta=top\');\n+      expect(this.$el.find(\'.fc-status\').html()).to.contain(\'id=item9\');\n       // No items actually moved, this is to be implemented server-side.\n     });\n \n@@ -1964,12 +1962,12 @@ define([\n           option1: function(e) {\n             e.preventDefault();\n             var self = this;\n-            self.app.setStatus({text: \'Status: option1 selected\', type: \'success\'});\n+            self.app.setStatus({ text: \'Status: option1 selected\', type: \'success\' });\n           },\n           option2: function(e) {\n             e.preventDefault();\n             var self = this;\n-            self.app.setStatus({text: \'Status: option2 selected\', type: \'info\'});\n+            self.app.setStatus({ text: \'Status: option2 selected\', type: \'info\' });\n           }\n         });\n         return Actions;\n@@ -1981,14 +1979,14 @@ define([\n       $(\'.actionmenu a.action1\', item).trigger(\'click\');\n       this.clock.tick(1000);\n       // status will be set as defined.\n-      expect($(\'.status\').text()).to.contain(\'Status: option1 selected\');\n-      expect($(\'.status\').hasClass(\'alert-success\'));\n+      expect($(\'.fc-status .fc-status-text\').text()).to.contain(\'Status: option1 selected\');\n+      expect($(\'.fc-status\').hasClass(\'alert-success\'));\n \n       $(\'.actionmenu a.action2\', item).trigger(\'click\');\n       this.clock.tick(1000);\n       // status will be set as defined.\n-      expect($(\'.status\').text()).to.contain(\'Status: option2 selected\');\n-      expect($(\'.status\').hasClass(\'alert-info\'));\n+      expect($(\'.fc-status\').text()).to.contain(\'Status: option2 selected\');\n+      expect($(\'.fc-status\').hasClass(\'alert-info\'));\n     });\n \n     it(\'item link triggered\', function() {\n@@ -2001,7 +1999,7 @@ define([\n           handleOther: function(e) {\n             e.preventDefault();\n             var self = this;\n-            self.app.setStatus({text: \'Status: not a folder\', type: \'error\'});\n+            self.app.setStatus({ text: \'Status: not a folder\', type: \'error\' });\n           }\n         });\n         return Actions;\n@@ -2015,8 +2013,8 @@ define([\n       $(\'.title a.manage\', item).trigger(\'click\');\n       this.clock.tick(1000);\n       // status will be set as defined.\n-      expect($(\'.status\').text()).to.contain(\'Status: not a folder\');\n-      expect($(\'.status\').hasClass(\'alert-error\'));\n+      expect($(\'.fc-status .fc-status-text\').text()).to.contain(\'Status: not a folder\');\n+      expect($(\'.fc-status\').hasClass(\'alert-error\'));\n     });\n \n   });\n@@ -2311,12 +2309,12 @@ define([\n           folderClicker: function(e) {\n             e.preventDefault();\n             var self = this;\n-            self.app.setStatus(\'Status: folder clicked\');\n+            self.app.setStatus({ text: \'Status: folder clicked\' });\n           },\n           itemClicker: function(e) {\n             e.preventDefault();\n             var self = this;\n-            self.app.setStatus(\'Status: item clicked\');\n+            self.app.setStatus({ text: \'Status: item clicked\' });\n           }\n         });\n         return Actions;\n@@ -2362,7 +2360,7 @@ define([\n       $(\'.actionmenu a.folderClicker\', folder).trigger(\'click\');\n       this.clock.tick(1000);\n       // status will be set as defined.\n-      expect($(\'.status\').text()).to.contain(\'Status: folder clicked\');\n+      expect($(\'.fc-status .fc-status-text\').text()).to.contain(\'Status: folder clicked\');\n \n       var item = this.$el.find(\'.itemRow\').eq(1);\n       // Check for complete new options\n@@ -2372,7 +2370,7 @@ define([\n       $(\'.actionmenu a.itemClicker\', item).trigger(\'click\');\n       this.clock.tick(1000);\n       // status will be set as defined.\n-      expect($(\'.status\').text()).to.contain(\'Status: item clicked\');\n+      expect($(\'.fc-status .fc-status-text\').text()).to.contain(\'Status: item clicked\');\n \n     });\n \n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/60414fbcda52b3538ad1b99c0a767806eaf2798f

Upgrade node version for testing

Files changed:
A news/938.feature
M .travis.yml

b'diff --git a/.travis.yml b/.travis.yml\nindex ce3056504..07a91ca61 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -1,6 +1,6 @@\n language: node_js\n node_js:\n-  - 8.12.0\n+  - 12.14.1\n env:\n   global:\n     - secure: "fPRKgxcbSXyiLqkUjAjPkn5eGBqMqf6c5haTZ9x76sDl1792nDyiL2FXSpiv2s8PeOqMbWgcXly0r+CLXypYkWba9nIxb4bhvtXyDoYAaoBV0lG1NbBakuOwqW/u60WpPJS1qTqmEUSEbSxdntqk7HF1yG6MdMi3PdubxMyw9h0="\ndiff --git a/news/938.feature b/news/938.feature\nnew file mode 100644\nindex 000000000..d62f4e951\n--- /dev/null\n+++ b/news/938.feature\n@@ -0,0 +1,2 @@\n+Upgrade node version for testing on travis.\n+[thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/9b56a533e4ac4345f6a709bfdbb9ee021b44f392

Fix statusmessages shown twice by using a key

Files changed:
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/structure/js/views/table.js
M mockup/patterns/structure/js/views/textfilter.js

b'diff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js\nindex ee64de2bb..baf0ad9cc 100644\n--- a/mockup/patterns/structure/js/views/app.js\n+++ b/mockup/patterns/structure/js/views/app.js\n@@ -464,27 +464,29 @@ define([\n       });\n     },\n \n-    clearStatus: function(status) {\n+    clearStatus: function(key) {\n       var statusContainer = this.$el[0].querySelector(\'.fc-status-container\');\n-\n-      if (status) {\n-        // remove specific status, also those marked with ``fixed``.\n-        try {\n-          statusContainer.removeChild(status.el);\n-        } catch(e) {\n-          // just ignore.\n-        }\n-        var idx = this.statusMessages.indexOf(status);\n-        if (idx > -1) {\n-          this.statusMessages.splice(idx, 1);\n+      var statusItem;\n+\n+      if (key) {\n+        // remove specific status, even if marked with ``fixed``.\n+        var toBeRemoved = this.statusMessages.filter(function (item) { return item.key === key; });\n+        for (var i = 0, len = toBeRemoved.length; i < len; i++) {\n+          statusItem = toBeRemoved[i];\n+          try {\n+            statusContainer.removeChild(statusItem.el);\n+          } catch(e) {\n+            // just ignore.\n+          }\n         }\n+        this.statusMessages = this.statusMessages.filter(function (item) { return item.key !== key; });\n       } else {\n         // remove all status messages except those marked with ``fixed``.\n         for (var i = 0, len = this.statusMessages.length; i < len; i++) {\n-          status = this.statusMessages[i];\n-          if (! status.fixed) {\n+          statusItem = this.statusMessages[i];\n+          if (! statusItem.fixed) {\n             try {\n-              statusContainer.removeChild(status.el);\n+              statusContainer.removeChild(statusItem.el);\n             } catch(e) {\n               // just ignore.\n             }\n@@ -494,7 +496,16 @@ define([\n       }\n     },\n \n-    setStatus: function(status, btn, fixed) {\n+    setStatus: function(status, btn, fixed, key) {\n+\n+      if (\n+        key &&\n+        this.statusMessages.filter(function (item) { return item.key === key; }).length > 0\n+      ) {\n+        // Prevent two same status messages\n+        return;\n+      }\n+\n       var el = this.statusTemplate({\n         label: status.label || \'\',\n         text: status.text,\n@@ -510,7 +521,8 @@ define([\n \n       var status = {\n         el: el,\n-        fixed: fixed\n+        fixed: fixed,\n+        key: key // to be used for filtering to prevent double status messages.\n       };\n \n       var statusContainer = this.$el[0].querySelector(\'.fc-status-container\');\ndiff --git a/mockup/patterns/structure/js/views/table.js b/mockup/patterns/structure/js/views/table.js\nindex d80a58a2e..996d9768e 100644\n--- a/mockup/patterns/structure/js/views/table.js\n+++ b/mockup/patterns/structure/js/views/table.js\n@@ -149,10 +149,10 @@ define([\n         self.app.setStatus({\n           text: _t(\'Notice: Drag and drop reordering is disabled when viewing the contents sorted by a column.\'),\n           type: \'warning\'\n-        }, btn = btn);\n-        $(".pat-datatables tbody").find(\'tr\').off("drag")\n+        }, btn, false, \'sorting_dndreordering_disabled\');\n+        $(".pat-datatables tbody").find(\'tr\').off("drag");\n         self.$el.removeClass(\'order-support\');\n-      } );\n+      });\n \n       return this;\n     },\n@@ -195,7 +195,10 @@ define([\n       var self = this;\n       // if we have a custom query going on, we do not allow sorting.\n       if (self.app.inQueryMode()) {\n-        self.app.setStatus({text: _t(\'Drag and drop reordering is disabled while filters are applied.\'), type: \'warning\'});\n+        self.app.setStatus({\n+          text: _t(\'Drag and drop reordering is disabled while filters are applied.\'),\n+          type: \'warning\'\n+        }, null, false, \'filter_dndreordering_disabled\');\n         self.$el.removeClass(\'order-support\');\n         return;\n       }\ndiff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex 40e4b5427..71a6a96f7 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -28,7 +28,7 @@ define([\n     term: null,\n     timeoutId: null,\n     keyupDelay: 300,\n-    filterStatusMessage: null,\n+    statusKey: \'filter_status_message\',\n \n     initialize: function(options) {\n       BaseView.prototype.initialize.apply(this, [options]);\n@@ -36,26 +36,22 @@ define([\n     },\n \n     setFilterStatusMessage: function() {\n-      if (!this.filterStatusMessage) {\n+      var clear_btn = $(\'<button type="button" class="btn btn-danger btn-xs"></button>\')\n+        .text(_t(\'Clear filter\'))\n+        .on(\'click\', function() {\n+          this.clearFilter();\n+        }.bind(this));\n \n-        var clear_btn = $(\'<button type="button" class="btn btn-danger btn-xs"></button>\')\n-          .text(_t(\'Clear filter\'))\n-          .on(\'click\', function() {\n-            this.clearFilter();\n-          }.bind(this));\n-\n-        this.filterStatusMessage = this.app.setStatus({\n-          label: _t(\'Some filters applied\'),\n-          text: _t(\'This listing has filters applied. Not all items are shown.\'),\n-          type: \'warning\'\n-        }, clear_btn, true);\n-      }\n+      this.app.setStatus({\n+        label: _t(\'Some filters applied\'),\n+        text: _t(\'This listing has filters applied. Not all items are shown.\'),\n+        type: \'warning\'\n+      }, clear_btn, true, this.statusKey);\n     },\n \n     clearFilterStatusMessage: function() {\n-      if (this.filterStatusMessage && !this.term && !this.app.additionalCriterias.length) {\n-        this.app.clearStatus(this.filterStatusMessage);\n-        this.filterStatusMessage = null;\n+      if (!this.term && !this.app.additionalCriterias.length) {\n+        this.app.clearStatus(this.statusKey);\n       }\n     },\n \n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/0f01adc89fa6b4b5079fe51bd5927015d810caba

Quickfilter improvements
Quickfilter is cleared when changing paths.
Visually separate the Quickfilter from Extra filter buttons.
Code simplifications.

Files changed:
M mockup/js/ui/views/button.js
M mockup/patterns/structure/js/views/app.js
M mockup/patterns/structure/js/views/textfilter.js
M mockup/patterns/structure/less/pattern.structure.less
M news/937.feature

b'diff --git a/mockup/js/ui/views/button.js b/mockup/js/ui/views/button.js\nindex 28bde67f4..117c2b6a7 100644\n--- a/mockup/js/ui/views/button.js\n+++ b/mockup/js/ui/views/button.js\n@@ -35,7 +35,7 @@ define([\n         }\n         _.each(this.extraClasses, function(klass){\n           this.$el.addClass(klass);\n-        });\n+        }.bind(this));\n \n         if (this.tooltip !== null) {\n \ndiff --git a/mockup/patterns/structure/js/views/app.js b/mockup/patterns/structure/js/views/app.js\nindex baf0ad9cc..dc44ffad4 100644\n--- a/mockup/patterns/structure/js/views/app.js\n+++ b/mockup/patterns/structure/js/views/app.js\n@@ -39,6 +39,9 @@ define([\n     additionalCriterias: [],\n     cookieSettingPrefix: \'_fc_\',\n \n+    buttons: null,\n+    textfilter: null,\n+\n     pasteAllowed: function () {\n         return !!$.cookie(\'__cp\');\n     },\n@@ -272,8 +275,9 @@ define([\n       return this.collection.getCurrentPath();\n     },\n     setCurrentPath: function(path) {\n-      this.clearStatus();\n       this.collection.setCurrentPath(path);\n+      this.textfilter.clearTerm();\n+      this.clearStatus();\n     },\n     getAjaxUrl: function(url) {\n       return url.replace(\'{path}\', this.getCurrentPath());\n@@ -427,10 +431,12 @@ define([\n       });\n       items.push(self.buttons);\n \n-      items.push(new TextFilterView({\n+      self.textfilter = new TextFilterView({\n         id: \'filter\',\n         app: this\n-      }));\n+      });\n+      items.push(self.textfilter);\n+\n       this.toolbar = new Toolbar({\n         items: items\n       });\n@@ -467,32 +473,31 @@ define([\n     clearStatus: function(key) {\n       var statusContainer = this.$el[0].querySelector(\'.fc-status-container\');\n       var statusItem;\n-\n+      var toBeRemoved = [];\n       if (key) {\n         // remove specific status, even if marked with ``fixed``.\n-        var toBeRemoved = this.statusMessages.filter(function (item) { return item.key === key; });\n-        for (var i = 0, len = toBeRemoved.length; i < len; i++) {\n-          statusItem = toBeRemoved[i];\n+        toBeRemoved = this.statusMessages.filter(function (item) { return item.key === key; });\n+        toBeRemoved.forEach(function (statusItem) {\n           try {\n             statusContainer.removeChild(statusItem.el);\n           } catch(e) {\n             // just ignore.\n           }\n-        }\n+        });\n         this.statusMessages = this.statusMessages.filter(function (item) { return item.key !== key; });\n       } else {\n         // remove all status messages except those marked with ``fixed``.\n-        for (var i = 0, len = this.statusMessages.length; i < len; i++) {\n-          statusItem = this.statusMessages[i];\n-          if (! statusItem.fixed) {\n+        this.statusMessages.forEach(function (statusItem) {\n+          if (!statusItem.fixed) {\n             try {\n               statusContainer.removeChild(statusItem.el);\n+              toBeRemoved.push(statusItem);\n             } catch(e) {\n               // just ignore.\n             }\n           }\n-        }\n-        this.statusMessages = [];\n+        }.bind(this));\n+        this.statusMessages = this.statusMessages.filter(function (item) { return toBeRemoved.indexOf(item) === -1; });\n       }\n     },\n \ndiff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex 71a6a96f7..64f0aaf89 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -14,7 +14,7 @@ define([\n     className: \'navbar-search form-search ui-offset-parent\',\n     template: _.template(\n       \'<div class="input-group">\' +\n-      \'<input type="text" class="form-control search-query" placeholder="<%- _t("Filter") %>">\' +\n+      \'<input type="text" class="form-control search-query" placeholder="<%- _t("Search") %>">\' +\n       \'<span class="input-group-btn">\' +\n       \'</span>\' +\n       \'</div>\'\n@@ -55,50 +55,85 @@ define([\n       }\n     },\n \n-    setTerm: function(term) {\n+    setTerm: function(term, set_input) {\n       var term_el = this.$el[0].querySelector(\'.search-query\');\n-      this.term = term;\n-      term_el.value = term;\n+      this.term = encodeURIComponent(term);\n+      if (set_input) {\n+        term_el.value = term;\n+      }\n       this.app.collection.currentPage = 1;\n       this.app.collection.pager();\n+\n       if (term) {\n         term_el.classList.add(\'has-filter\');\n         this.setFilterStatusMessage();\n       } else {\n-        term_el.classList.remove(\'has-filter\');\n+        var hasquery = false;\n+        try {\n+          var qu =this.$queryString.val();\n+          if (qu && JSON.parse(qu).length > 0) {\n+            hasquery = true;\n+          }\n+        } finally {\n+          if (! hasquery) {\n+            term_el.classList.remove(\'has-filter\');\n+            this.clearFilterStatusMessage();\n+          }\n+        }\n       }\n     },\n \n-    setQuery: function(query) {\n-      this.$queryString.val(JSON.stringify(query));\n-      this.app.additionalCriterias = query;\n+    setQuery: function(query, set_input) {\n+      var query_string = null;\n+      var query_obj = null;\n+      try {\n+        if (typeof query === \'string\') {\n+          query_obj = JSON.parse(query);\n+          query_string = query;\n+        } else {\n+          query_string = JSON.stringify(query);\n+          query_obj = query;\n+        }\n+      } catch (e) {\n+        query_obj = [];\n+        query_string = \'[]\';\n+      }\n+\n+      if (set_input) {\n+        this.$queryString.val(query_string);\n+      }\n+      this.app.additionalCriterias = query_obj;\n       this.app.collection.currentPage = 1;\n       this.app.collection.pager();\n-      if (query.length) {\n+      if (query_obj.length) {\n         this.button.$el[0].classList.add(\'has-filter\');\n         this.setFilterStatusMessage();\n-      } else {\n+      } else if (! this.term) {\n         this.button.$el[0].classList.remove(\'has-filter\');\n+        this.clearFilterStatusMessage();\n       }\n     },\n \n+    clearTerm: function() {\n+      this.setTerm(\'\', true);\n+    },\n+\n     clearFilter: function() {\n-      this.setTerm(\'\');\n-      this.setQuery([]);\n-      this.clearFilterStatusMessage();\n-      this.app.clearStatus();\n+      this.setTerm(\'\', true);\n+      this.setQuery([], true);\n     },\n \n     render: function() {\n       this.$el.html(this.template({_t: _t}));\n       this.button = new ButtonView({\n-        tooltip: _t(\'Filter\'),\n-        icon: \'filter\'\n+        title: _t(\'Filter\'),\n+        icon: \'filter\',\n+        extraClasses: [\'btn-queryfilter\', ],\n       });\n       this.popover = new PopoverView({\n         triggerView: this.button,\n         id: \'structure-query\',\n-        title: _.template(_t(\'Query\')),\n+        title: _.template(_t(\'Filter\')),\n         content: this.popoverContent,\n         placement: \'left\'\n       });\n@@ -117,17 +152,7 @@ define([\n           clearTimeout(self.timeoutId);\n         }\n         self.timeoutId = setTimeout(function() {\n-          var criterias = $.parseJSON(self.$queryString.val());\n-          if (criterias.length > 0) {\n-            self.button.$el[0].classList.add(\'has-filter\');\n-            self.setFilterStatusMessage();\n-          } else {\n-            self.button.$el[0].classList.remove(\'has-filter\');\n-            self.clearFilterStatusMessage();\n-          }\n-          self.app.additionalCriterias = criterias;\n-          self.app.collection.currentPage = 1;\n-          self.app.collection.pager();\n+          self.setQuery(self.$queryString.val(), false);\n         }, this.keyupDelay);\n       });\n       self.queryString.$el.on(\'initialized\', function() {\n@@ -156,18 +181,7 @@ define([\n       }\n       self.timeoutId = setTimeout(function() {\n         var term_el = $(event.currentTarget);\n-        self.term = encodeURIComponent(term_el.val());\n-        self.app.collection.currentPage = 1;\n-        self.app.collection.pager();\n-\n-        if (!self.term) {\n-            term_el[0].classList.remove(\'has-filter\');\n-            self.clearFilterStatusMessage();\n-        } else {\n-          term_el[0].classList.add(\'has-filter\');\n-          self.setFilterStatusMessage();\n-        }\n-\n+        self.setTerm(term_el.val(), false);\n       }, this.keyupDelay);\n     }\n   });\ndiff --git a/mockup/patterns/structure/less/pattern.structure.less b/mockup/patterns/structure/less/pattern.structure.less\nindex 30d4d5da1..462307d77 100644\n--- a/mockup/patterns/structure/less/pattern.structure.less\n+++ b/mockup/patterns/structure/less/pattern.structure.less\n@@ -90,8 +90,12 @@\n             margin-right: 1em;\n         }\n         #filter {\n-            width: 200px;\n+            width: 20em;\n             float: right;\n+\n+            .btn-queryfilter {\n+                margin-left: 1em;\n+            }\n         }\n         &>a.btn, .btn-group, #filter {\n             margin-bottom: 0.5em;\ndiff --git a/news/937.feature b/news/937.feature\nindex daa7cff74..dae1b3d22 100644\n--- a/news/937.feature\n+++ b/news/937.feature\n@@ -1,8 +1,9 @@\n Structure pattern:\n-Show statusmessage with "Clear filter" button when filters are applied.\n+Filter now reads "Search" and is cleared when changing directories.\n+Querystring popover button: filter instead of search icon, "Extra Filter" title.\n+Show statusmessage with "Clear" button when filters are applied.\n Show visually if a filter is set.\n Allow multiple status messages.\n-Querystring popover button: filter icon, "Filter" tooltip.\n Change message from misleading "Cannot order items while querying" to "Drag and drop reordering is disabled while filters are applied.". Fixes: https://github.com/collective/plone.app.locales/issues/173\n Display toolbar a bit compacter.\n [thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/953604223083a30ffa4b8ac69aedaf6a24be8273

move the drag/drop disabled warning to textfilter.js where filter is applied

Files changed:
M mockup/patterns/structure/js/views/table.js
M mockup/patterns/structure/js/views/textfilter.js

b'diff --git a/mockup/patterns/structure/js/views/table.js b/mockup/patterns/structure/js/views/table.js\nindex 996d9768e..cb83f07ba 100644\n--- a/mockup/patterns/structure/js/views/table.js\n+++ b/mockup/patterns/structure/js/views/table.js\n@@ -195,10 +195,6 @@ define([\n       var self = this;\n       // if we have a custom query going on, we do not allow sorting.\n       if (self.app.inQueryMode()) {\n-        self.app.setStatus({\n-          text: _t(\'Drag and drop reordering is disabled while filters are applied.\'),\n-          type: \'warning\'\n-        }, null, false, \'filter_dndreordering_disabled\');\n         self.$el.removeClass(\'order-support\');\n         return;\n       }\ndiff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex 64f0aaf89..031127bc5 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -28,7 +28,8 @@ define([\n     term: null,\n     timeoutId: null,\n     keyupDelay: 300,\n-    statusKey: \'filter_status_message\',\n+    statusKeyFilter: \'textfilter_status_message_filter\',\n+    statusKeySorting: \'textfilter_status_message_sorting\',\n \n     initialize: function(options) {\n       BaseView.prototype.initialize.apply(this, [options]);\n@@ -36,22 +37,30 @@ define([\n     },\n \n     setFilterStatusMessage: function() {\n-      var clear_btn = $(\'<button type="button" class="btn btn-danger btn-xs"></button>\')\n+      var clear_btn = $(\'<button type="button" class="btn btn-primary btn-xs"></button>\')\n         .text(_t(\'Clear filter\'))\n         .on(\'click\', function() {\n           this.clearFilter();\n         }.bind(this));\n \n+      var statusTextFilter = _t(\'This listing has filters applied. Not all items are shown.\');\n       this.app.setStatus({\n-        label: _t(\'Some filters applied\'),\n-        text: _t(\'This listing has filters applied. Not all items are shown.\'),\n+        text: statusTextFilter,\n+        type: \'info\'\n+      }, clear_btn, true, this.statusKeyFilter);\n+\n+      var statusTextSorting = _t(\'Drag and drop reordering is disabled while filters are applied.\');\n+      this.app.setStatus({\n+        text: statusTextSorting,\n         type: \'warning\'\n-      }, clear_btn, true, this.statusKey);\n+      }, null, true, this.statusKeySorting);\n+\n     },\n \n     clearFilterStatusMessage: function() {\n       if (!this.term && !this.app.additionalCriterias.length) {\n-        this.app.clearStatus(this.statusKey);\n+        this.app.clearStatus(this.statusKeyFilter);\n+        this.app.clearStatus(this.statusKeySorting);\n       }\n     },\n \n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/8c48d8ec3f6764905bd13ad91c7b7fe3b59391e3

For the i18n-dump Grunt task, do not read files in directories except mockup and js.

Files changed:
A news/943.bugfix
M mockup/Gruntfile.js

b"diff --git a/mockup/Gruntfile.js b/mockup/Gruntfile.js\nindex 9e0bcebcb..ff1f657fd 100644\n--- a/mockup/Gruntfile.js\n+++ b/mockup/Gruntfile.js\n@@ -158,7 +158,14 @@ module.exports = function(grunt) {\n       console.log('read folder: ' + path);\n       var files = fs.readdirSync(path);\n       files.forEach(function(filename) {\n-        if (filename === 'node_modules' || filename === 'node_modules') {\n+        if (\n+          filename === '__pycache__' ||\n+          filename === 'build' ||\n+          filename === 'coverage' ||\n+          filename === 'less' ||\n+          filename === 'node_modules' ||\n+          filename === 'tests'\n+        ) {\n           return;\n         }\n         var stats = fs.statSync(path + filename);\ndiff --git a/news/943.bugfix b/news/943.bugfix\nnew file mode 100644\nindex 000000000..ba69c6b22\n--- /dev/null\n+++ b/news/943.bugfix\n@@ -0,0 +1,2 @@\n+For the ``i18n-dump`` Grunt task, do not read files in directories except ``mockup`` and ``js``.\n+[thet]\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/c9ef3cb05603577b6156b425aec10770e55e8abd

Change filter status message from info to success, use "Clear" instead "Clear filter"

Files changed:
M mockup/patterns/structure/js/views/textfilter.js

b'diff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex 031127bc5..bdc933c5e 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -38,7 +38,7 @@ define([\n \n     setFilterStatusMessage: function() {\n       var clear_btn = $(\'<button type="button" class="btn btn-primary btn-xs"></button>\')\n-        .text(_t(\'Clear filter\'))\n+        .text(_t(\'Clear\'))\n         .on(\'click\', function() {\n           this.clearFilter();\n         }.bind(this));\n@@ -46,7 +46,7 @@ define([\n       var statusTextFilter = _t(\'This listing has filters applied. Not all items are shown.\');\n       this.app.setStatus({\n         text: statusTextFilter,\n-        type: \'info\'\n+        type: \'success\',\n       }, clear_btn, true, this.statusKeyFilter);\n \n       var statusTextSorting = _t(\'Drag and drop reordering is disabled while filters are applied.\');\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-11T15:36:49+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/4c4931987a7607717df7558ff6c687d225e302d9

try to clear the querystring form. not working.

Files changed:
M mockup/patterns/structure/js/views/textfilter.js

b'diff --git a/mockup/patterns/structure/js/views/textfilter.js b/mockup/patterns/structure/js/views/textfilter.js\nindex bdc933c5e..6019b1b24 100644\n--- a/mockup/patterns/structure/js/views/textfilter.js\n+++ b/mockup/patterns/structure/js/views/textfilter.js\n@@ -110,6 +110,8 @@ define([\n \n       if (set_input) {\n         this.$queryString.val(query_string);\n+        // TODO clear query string form\n+        // this.queryString._init();\n       }\n       this.app.additionalCriterias = query_obj;\n       this.app.collection.currentPage = 1;\n'

