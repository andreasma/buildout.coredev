Repository: plone.indexer


Branch: refs/heads/master
Date: 2018-07-17T10:54:18+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.indexer/commit/9c410083c6422e5535811230873cb0c20d1b3681

fix tests for py3

Files changed:
M CHANGES.rst
M plone/indexer/README.rst
M plone/indexer/tests.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex fd0dd7b..8d83672 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -23,6 +23,9 @@ Fixes:\n   because they get the acquisition-wrapped object.\n   [jensens]\n \n+- Fix tests to work in Python 3\n+  [pbauer]\n+\n \n 1.0.4 (2016-02-25)\n ------------------\ndiff --git a/plone/indexer/README.rst b/plone/indexer/README.rst\nindex 3b1daf1..47db46d 100644\n--- a/plone/indexer/README.rst\n+++ b/plone/indexer/README.rst\n@@ -80,7 +80,7 @@ For example::\n \n     >>> test_page = Page(text=u"My page with some text")\n     >>> page_description(test_page)()\n-    u\'My page wi\'\n+    \'My page wi\'\n \n This will suffice in most cases.\n Note that there is actually a second parameter, catalog, which defaults to None.\n@@ -163,7 +163,7 @@ We have a compatibility alias in this package for use with CMF 2.1.\n     ...                 indexed_value = getattr(object, idx)\n     ...                 if callable(indexed_value):\n     ...                     indexed_value = indexed_value()\n-    ...                 print idx, "=", indexed_value\n+    ...                 print(idx, "=", indexed_value)\n     ...             except (AttributeError, TypeError,):\n     ...                 pass\n \ndiff --git a/plone/indexer/tests.py b/plone/indexer/tests.py\nindex d0d5f08..e876ff8 100644\n--- a/plone/indexer/tests.py\n+++ b/plone/indexer/tests.py\n@@ -2,6 +2,8 @@\n from zope.component import testing\n \n import doctest\n+import re\n+import six\n import unittest\n \n \n@@ -20,11 +22,22 @@ def my_func(obj):\n         self.assertEqual(my_func.__name__, \'my_func\')\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     return unittest.TestSuite([\n         doctest.DocFileSuite(\n-            \'README.rst\', package=\'plone.indexer\',\n-            setUp=testing.setUp, tearDown=testing.tearDown),\n+            \'README.rst\',\n+            package=\'plone.indexer\',\n+            setUp=testing.setUp,\n+            tearDown=testing.tearDown,\n+            checker=Py23DocChecker(),\n+            ),\n         unittest.makeSuite(TestWrapperUpdate),\n     ])\n \n'

Repository: plone.indexer


Branch: refs/heads/master
Date: 2018-07-17T18:15:58+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.indexer/commit/d29596843f2624e478693f34e0eb1da0aaf9c654

Merge pull request #5 from plone/python3

fix tests for py3

Files changed:
M CHANGES.rst
M plone/indexer/README.rst
M plone/indexer/tests.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex fd0dd7b..8d83672 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -23,6 +23,9 @@ Fixes:\n   because they get the acquisition-wrapped object.\n   [jensens]\n \n+- Fix tests to work in Python 3\n+  [pbauer]\n+\n \n 1.0.4 (2016-02-25)\n ------------------\ndiff --git a/plone/indexer/README.rst b/plone/indexer/README.rst\nindex 3b1daf1..47db46d 100644\n--- a/plone/indexer/README.rst\n+++ b/plone/indexer/README.rst\n@@ -80,7 +80,7 @@ For example::\n \n     >>> test_page = Page(text=u"My page with some text")\n     >>> page_description(test_page)()\n-    u\'My page wi\'\n+    \'My page wi\'\n \n This will suffice in most cases.\n Note that there is actually a second parameter, catalog, which defaults to None.\n@@ -163,7 +163,7 @@ We have a compatibility alias in this package for use with CMF 2.1.\n     ...                 indexed_value = getattr(object, idx)\n     ...                 if callable(indexed_value):\n     ...                     indexed_value = indexed_value()\n-    ...                 print idx, "=", indexed_value\n+    ...                 print(idx, "=", indexed_value)\n     ...             except (AttributeError, TypeError,):\n     ...                 pass\n \ndiff --git a/plone/indexer/tests.py b/plone/indexer/tests.py\nindex d0d5f08..e876ff8 100644\n--- a/plone/indexer/tests.py\n+++ b/plone/indexer/tests.py\n@@ -2,6 +2,8 @@\n from zope.component import testing\n \n import doctest\n+import re\n+import six\n import unittest\n \n \n@@ -20,11 +22,22 @@ def my_func(obj):\n         self.assertEqual(my_func.__name__, \'my_func\')\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     return unittest.TestSuite([\n         doctest.DocFileSuite(\n-            \'README.rst\', package=\'plone.indexer\',\n-            setUp=testing.setUp, tearDown=testing.tearDown),\n+            \'README.rst\',\n+            package=\'plone.indexer\',\n+            setUp=testing.setUp,\n+            tearDown=testing.tearDown,\n+            checker=Py23DocChecker(),\n+            ),\n         unittest.makeSuite(TestWrapperUpdate),\n     ])\n \n'

