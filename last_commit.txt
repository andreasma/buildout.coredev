Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-06-07T15:26:39+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/f110f76a9dd4929d6f029bb6bdac11000825766c

Behavior should be saved as native strings

Fixes #296
Closes plone/Products.CMFPlone#2881

Files changed:
A news/296.bugfix
M plone/app/dexterity/browser/behaviors.py
M plone/app/dexterity/tests/editing.rst

b'diff --git a/news/296.bugfix b/news/296.bugfix\nnew file mode 100644\nindex 0000000..be85e20\n--- /dev/null\n+++ b/news/296.bugfix\n@@ -0,0 +1 @@\n+The @@behaviors form was wrongly encoding the added behavior names on Python3 [ale-rt]\ndiff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex a76de50..739c651 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -21,6 +21,23 @@\n import six\n \n \n+try:\n+    from Products.CMFPlone.utils import safe_nativestring\n+except ImportError:\n+    # Not needed for Products.CMFPlone >= 5.2a1\n+    from Products.CMFPlone.utils import safe_encode\n+    from Products.CMFPlone.utils import safe_unicode\n+\n+    def safe_nativestring(value, encoding=\'utf-8\'):\n+        """Convert a value to str in py2 and to text in py3\n+        """\n+        if six.PY2 and isinstance(value, six.text_type):\n+            value = safe_encode(value, encoding)\n+        if not six.PY2 and isinstance(value, six.binary_type):\n+            value = safe_unicode(value, encoding)\n+        return value\n+\n+\n TTW_BEHAVIOR_BLACKLIST = [\n     # skip deprecated behavior\n     \'plone.app.dexterity.behaviors.related.IRelatedItems\',\n@@ -53,14 +70,13 @@ def __setattr__(self, name, value):\n         behaviors = list(self.fti.behaviors)\n         reg = lookup_behavior_registration(name=name)\n         iid = reg.interface.__identifier__\n-\n         if reg.name:\n             # behavior has a name -> use it\n             # but first remove the dotted behavior if present\n             if iid in self.fti.behaviors:\n                 behaviors.remove(iid)\n             # prepare named behavior for add/remove\n-            bname = reg.name.encode(\'utf8\')\n+            bname = safe_nativestring(reg.name)\n         else:\n             # no name found -> prepare dotted behavior for add/remove instead\n             bname = iid\ndiff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 8391cce..9955ba5 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -264,6 +264,17 @@ FTI::\n   >>> \'plone.namefromtitle\' in portal.portal_types.plonista.behaviors\n   True\n \n+Let\'s enable one that is not enable and make sure that\n+the change is reflected on the FTI::\n+\n+  >>> sorted(portal.portal_types.plonista.behaviors)\n+  [\'plone.dublincore\', \'plone.namefromtitle\']\n+  >>> \'plone.versioning\' in portal.portal_types.plonista.behaviors\n+  False\n+  >>> browser.getControl(name=\'form.widgets.plone.versioning:list\').value = "selected"\n+  >>> browser.getControl(\'Save\').click()\n+  >>> sorted(portal.portal_types.plonista.behaviors)\n+  [\'plone.dublincore\', \'plone.namefromtitle\', \'plone.versioning\']\n \n Viewing a non-editable schema\n -----------------------------\n@@ -557,4 +568,3 @@ file::\n       ...\n       </schema>\n     </model>\n-\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-06-19T11:48:28+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/62aa920c8766c8eede7772d14ce2eb4b5b98b1e6

The behavior is removed so we should not expect it

Files changed:
M plone/app/dexterity/tests/editing.rst

b'diff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 9955ba5..9cd5de7 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -268,13 +268,13 @@ Let\'s enable one that is not enable and make sure that\n the change is reflected on the FTI::\n \n   >>> sorted(portal.portal_types.plonista.behaviors)\n-  [\'plone.dublincore\', \'plone.namefromtitle\']\n+  [\'plone.namefromtitle\']\n   >>> \'plone.versioning\' in portal.portal_types.plonista.behaviors\n   False\n   >>> browser.getControl(name=\'form.widgets.plone.versioning:list\').value = "selected"\n   >>> browser.getControl(\'Save\').click()\n   >>> sorted(portal.portal_types.plonista.behaviors)\n-  [\'plone.dublincore\', \'plone.namefromtitle\', \'plone.versioning\']\n+  [\'plone.namefromtitle\', \'plone.versioning\']\n \n Viewing a non-editable schema\n -----------------------------\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-06-20T15:06:16+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/91a61156a02f4392603e746f480d854c987e556a

Use native strings also for retrieving

Files changed:
M plone/app/dexterity/browser/behaviors.py

b"diff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex 739c651..1ee12a2 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -62,7 +62,7 @@ def __getattr__(self, name):\n         iid = reg.interface.__identifier__\n         return (\n             iid in self.fti.behaviors or\n-            reg.name.encode('utf8') in self.fti.behaviors\n+            safe_nativestring(reg.name) in self.fti.behaviors\n         )\n \n     def __setattr__(self, name, value):\n@@ -98,7 +98,7 @@ def __iter__(self):\n                 # ignore wrong names\n                 continue\n             if reg.name:\n-                yield reg.name.encode('utf8')\n+                yield safe_nativestring(reg.name)\n             else:\n                 yield name\n \n@@ -129,9 +129,7 @@ def fields(self):\n             with_name = counts[id(reg)] > 1\n             if with_name and reg.name != name:\n                 continue\n-            fname = reg.name if reg.name else name\n-            if six.PY2 and isinstance(fname, six.text_type):\n-                fname = fname.encode('utf8')\n+            fname = safe_nativestring(reg.name if reg.name else name)\n             fields.append(\n                 schema.Bool(\n                     __name__=fname,\n"

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-06-20T18:35:50+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/1c715c5f95404f8bbda90ba2b5ba71863c6e40c1

more safe nativestrings

Files changed:
M plone/app/dexterity/browser/add_type.py

b"diff --git a/plone/app/dexterity/browser/add_type.py b/plone/app/dexterity/browser/add_type.py\nindex d73dc11..6a40841 100644\n--- a/plone/app/dexterity/browser/add_type.py\n+++ b/plone/app/dexterity/browser/add_type.py\n@@ -4,6 +4,7 @@\n from plone.dexterity.fti import DexterityFTI\n from plone.z3cform.layout import wrap_form\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import safe_nativestring\n from z3c.form import field\n from z3c.form import form\n \n@@ -20,9 +21,9 @@ def create(self, data):\n \n         fti = DexterityFTI(id)\n         fti.id = id\n-        data['title'] = data['title'].encode('utf8')\n+        data['title'] = safe_nativestring(data['title'])\n         if data['description']:\n-            data['description'] = data['description'].encode('utf8')\n+            data['description'] = safe_nativestring(data['description'])\n         data['i18n_domain'] = 'plone'\n         data['behaviors'] = '\\n'.join([\n             'plone.dublincore',\n"

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-06-20T19:24:23+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/ddffc1c1cb395e54b7c04445f388d1d7ff9205bd

Plone 5.1 compat

Files changed:
M plone/app/dexterity/browser/add_type.py

b'diff --git a/plone/app/dexterity/browser/add_type.py b/plone/app/dexterity/browser/add_type.py\nindex 6a40841..a028222 100644\n--- a/plone/app/dexterity/browser/add_type.py\n+++ b/plone/app/dexterity/browser/add_type.py\n@@ -4,10 +4,27 @@\n from plone.dexterity.fti import DexterityFTI\n from plone.z3cform.layout import wrap_form\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.utils import safe_nativestring\n from z3c.form import field\n from z3c.form import form\n \n+try:\n+    from Products.CMFPlone.utils import safe_nativestring\n+except ImportError:\n+    # Not needed for Products.CMFPlone >= 5.2a1\n+    from Products.CMFPlone.utils import safe_encode\n+    from Products.CMFPlone.utils import safe_unicode\n+\n+    import six\n+\n+    def safe_nativestring(value, encoding=\'utf-8\'):\n+        """Convert a value to str in py2 and to text in py3\n+        """\n+        if six.PY2 and isinstance(value, six.text_type):\n+            value = safe_encode(value, encoding)\n+        if not six.PY2 and isinstance(value, six.binary_type):\n+            value = safe_unicode(value, encoding)\n+        return value\n+\n \n class TypeAddForm(form.AddForm):\n \n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-06-20T20:17:29+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/177fb39d634cef71980ad9e427f9c4b3987366e0

Merge pull request #297 from plone/296-fix-behaviors-form

Behavior should be saved as native strings

Files changed:
A news/296.bugfix
M plone/app/dexterity/browser/add_type.py
M plone/app/dexterity/browser/behaviors.py
M plone/app/dexterity/tests/editing.rst

b'diff --git a/news/296.bugfix b/news/296.bugfix\nnew file mode 100644\nindex 0000000..be85e20\n--- /dev/null\n+++ b/news/296.bugfix\n@@ -0,0 +1 @@\n+The @@behaviors form was wrongly encoding the added behavior names on Python3 [ale-rt]\ndiff --git a/plone/app/dexterity/browser/add_type.py b/plone/app/dexterity/browser/add_type.py\nindex d73dc11..a028222 100644\n--- a/plone/app/dexterity/browser/add_type.py\n+++ b/plone/app/dexterity/browser/add_type.py\n@@ -7,6 +7,24 @@\n from z3c.form import field\n from z3c.form import form\n \n+try:\n+    from Products.CMFPlone.utils import safe_nativestring\n+except ImportError:\n+    # Not needed for Products.CMFPlone >= 5.2a1\n+    from Products.CMFPlone.utils import safe_encode\n+    from Products.CMFPlone.utils import safe_unicode\n+\n+    import six\n+\n+    def safe_nativestring(value, encoding=\'utf-8\'):\n+        """Convert a value to str in py2 and to text in py3\n+        """\n+        if six.PY2 and isinstance(value, six.text_type):\n+            value = safe_encode(value, encoding)\n+        if not six.PY2 and isinstance(value, six.binary_type):\n+            value = safe_unicode(value, encoding)\n+        return value\n+\n \n class TypeAddForm(form.AddForm):\n \n@@ -20,9 +38,9 @@ def create(self, data):\n \n         fti = DexterityFTI(id)\n         fti.id = id\n-        data[\'title\'] = data[\'title\'].encode(\'utf8\')\n+        data[\'title\'] = safe_nativestring(data[\'title\'])\n         if data[\'description\']:\n-            data[\'description\'] = data[\'description\'].encode(\'utf8\')\n+            data[\'description\'] = safe_nativestring(data[\'description\'])\n         data[\'i18n_domain\'] = \'plone\'\n         data[\'behaviors\'] = \'\\n\'.join([\n             \'plone.dublincore\',\ndiff --git a/plone/app/dexterity/browser/behaviors.py b/plone/app/dexterity/browser/behaviors.py\nindex a76de50..1ee12a2 100644\n--- a/plone/app/dexterity/browser/behaviors.py\n+++ b/plone/app/dexterity/browser/behaviors.py\n@@ -21,6 +21,23 @@\n import six\n \n \n+try:\n+    from Products.CMFPlone.utils import safe_nativestring\n+except ImportError:\n+    # Not needed for Products.CMFPlone >= 5.2a1\n+    from Products.CMFPlone.utils import safe_encode\n+    from Products.CMFPlone.utils import safe_unicode\n+\n+    def safe_nativestring(value, encoding=\'utf-8\'):\n+        """Convert a value to str in py2 and to text in py3\n+        """\n+        if six.PY2 and isinstance(value, six.text_type):\n+            value = safe_encode(value, encoding)\n+        if not six.PY2 and isinstance(value, six.binary_type):\n+            value = safe_unicode(value, encoding)\n+        return value\n+\n+\n TTW_BEHAVIOR_BLACKLIST = [\n     # skip deprecated behavior\n     \'plone.app.dexterity.behaviors.related.IRelatedItems\',\n@@ -45,7 +62,7 @@ def __getattr__(self, name):\n         iid = reg.interface.__identifier__\n         return (\n             iid in self.fti.behaviors or\n-            reg.name.encode(\'utf8\') in self.fti.behaviors\n+            safe_nativestring(reg.name) in self.fti.behaviors\n         )\n \n     def __setattr__(self, name, value):\n@@ -53,14 +70,13 @@ def __setattr__(self, name, value):\n         behaviors = list(self.fti.behaviors)\n         reg = lookup_behavior_registration(name=name)\n         iid = reg.interface.__identifier__\n-\n         if reg.name:\n             # behavior has a name -> use it\n             # but first remove the dotted behavior if present\n             if iid in self.fti.behaviors:\n                 behaviors.remove(iid)\n             # prepare named behavior for add/remove\n-            bname = reg.name.encode(\'utf8\')\n+            bname = safe_nativestring(reg.name)\n         else:\n             # no name found -> prepare dotted behavior for add/remove instead\n             bname = iid\n@@ -82,7 +98,7 @@ def __iter__(self):\n                 # ignore wrong names\n                 continue\n             if reg.name:\n-                yield reg.name.encode(\'utf8\')\n+                yield safe_nativestring(reg.name)\n             else:\n                 yield name\n \n@@ -113,9 +129,7 @@ def fields(self):\n             with_name = counts[id(reg)] > 1\n             if with_name and reg.name != name:\n                 continue\n-            fname = reg.name if reg.name else name\n-            if six.PY2 and isinstance(fname, six.text_type):\n-                fname = fname.encode(\'utf8\')\n+            fname = safe_nativestring(reg.name if reg.name else name)\n             fields.append(\n                 schema.Bool(\n                     __name__=fname,\ndiff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 8391cce..9cd5de7 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -264,6 +264,17 @@ FTI::\n   >>> \'plone.namefromtitle\' in portal.portal_types.plonista.behaviors\n   True\n \n+Let\'s enable one that is not enable and make sure that\n+the change is reflected on the FTI::\n+\n+  >>> sorted(portal.portal_types.plonista.behaviors)\n+  [\'plone.namefromtitle\']\n+  >>> \'plone.versioning\' in portal.portal_types.plonista.behaviors\n+  False\n+  >>> browser.getControl(name=\'form.widgets.plone.versioning:list\').value = "selected"\n+  >>> browser.getControl(\'Save\').click()\n+  >>> sorted(portal.portal_types.plonista.behaviors)\n+  [\'plone.namefromtitle\', \'plone.versioning\']\n \n Viewing a non-editable schema\n -----------------------------\n@@ -557,4 +568,3 @@ file::\n       ...\n       </schema>\n     </model>\n-\n'

