Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2019-11-12T12:24:51+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/6dd9fffff3041860dbe0933a7f921fbe301a2295

Use MemberData adapter
Create the MemberData object from an adapter instead of directly instantiating it, as intended in Products.CMFCore.MemberDataTool.
This allows for better extensibility.

Files changed:
A news/52.bugfix
A src/Products/PlonePAS/interfaces/memberdata.py
A src/Products/PlonePAS/tools/configure.zcml
M src/Products/PlonePAS/configure.zcml
M src/Products/PlonePAS/tests/test_memberdatatool.py
M src/Products/PlonePAS/tools/memberdata.py

b'diff --git a/news/52.bugfix b/news/52.bugfix\nnew file mode 100644\nindex 00000000..9beaabf2\n--- /dev/null\n+++ b/news/52.bugfix\n@@ -0,0 +1,3 @@\n+Create the MemberData object from an adapter instead of directly instantiating it, as intended in Products.CMFCore.MemberDataTool.\n+This allows for better extensibility.\n+[thet]\ndiff --git a/src/Products/PlonePAS/configure.zcml b/src/Products/PlonePAS/configure.zcml\nindex f326d9ef..d7c003ae 100644\n--- a/src/Products/PlonePAS/configure.zcml\n+++ b/src/Products/PlonePAS/configure.zcml\n@@ -6,6 +6,7 @@\n     xmlns:i18n="http://namespaces.zope.org/i18n">\n \n   <include package=".browser" />\n+  <include package=".tools" />\n   <include file="profiles.zcml" />\n   <include file="exportimport.zcml" />\n \ndiff --git a/src/Products/PlonePAS/interfaces/memberdata.py b/src/Products/PlonePAS/interfaces/memberdata.py\nnew file mode 100644\nindex 00000000..024c73cc\n--- /dev/null\n+++ b/src/Products/PlonePAS/interfaces/memberdata.py\n@@ -0,0 +1,10 @@\n+# -*- coding: utf-8 -*-\n+from Products.CMFCore import interfaces\n+\n+\n+class IMemberDataTool(interfaces.IMemberDataTool):\n+    """More specific PlonePAS MemberDataTool interface.\n+    """\n+\n+\n+__all__ = (IMemberDataTool,)\ndiff --git a/src/Products/PlonePAS/tests/test_memberdatatool.py b/src/Products/PlonePAS/tests/test_memberdatatool.py\nindex c4321242..89ba2267 100644\n--- a/src/Products/PlonePAS/tests/test_memberdatatool.py\n+++ b/src/Products/PlonePAS/tests/test_memberdatatool.py\n@@ -4,6 +4,8 @@\n from plone.app.testing import TEST_USER_ID as default_user\n from Products.PlonePAS.tests import dummy\n from Products.PlonePAS.testing import PRODUCTS_PLONEPAS_INTEGRATION_TESTING\n+from zope.component import getMultiAdapter\n+from Products.CMFCore.interfaces import IMember\n \n import unittest\n \n@@ -73,3 +75,16 @@ def testFulltextMemberSearch(self):\n         self.assertEqual(len(search(\'bambam.net\')), 1)\n         self.assertEqual(len(search(\'bedrock.com\')), 2)\n         self.assertEqual(len(search(\'brubble\')), 1)\n+\n+    def testMemberDataAdapter(self):\n+        """Test, if the PlonePAS MemberData adapter is used instead of the\n+        default one from Products.CMFCore.MemberDataTool\n+        """\n+        from Products.PlonePAS.tools.memberdata import MemberData\n+        member = self.membership.getMemberById(\'fred\')\n+\n+        adapter = getMultiAdapter((member, self.memberdata), IMember)\n+        self.assertEqual(adapter.__class__, MemberData)\n+\n+        wrapped_user = self.memberdata.wrapUser(member)\n+        self.assertEqual(wrapped_user.__class__, MemberData)\ndiff --git a/src/Products/PlonePAS/tools/configure.zcml b/src/Products/PlonePAS/tools/configure.zcml\nnew file mode 100644\nindex 00000000..ce5e9d4d\n--- /dev/null\n+++ b/src/Products/PlonePAS/tools/configure.zcml\n@@ -0,0 +1,8 @@\n+<configure xmlns="http://namespaces.zope.org/zope">\n+\n+  <adapter\n+      provides="Products.CMFCore.interfaces.IMember"\n+      factory=".memberdata.MemberData"\n+      />\n+\n+</configure>\ndiff --git a/src/Products/PlonePAS/tools/memberdata.py b/src/Products/PlonePAS/tools/memberdata.py\nindex 68cfbb14..063f25bd 100644\n--- a/src/Products/PlonePAS/tools/memberdata.py\n+++ b/src/Products/PlonePAS/tools/memberdata.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n+from AccessControl.interfaces import IUser\n from AccessControl.requestmethod import postonly\n from AccessControl.class_init import InitializeClass\n from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2\n@@ -15,6 +16,7 @@\n from Products.PlonePAS.interfaces.capabilities import IManageCapabilities\n from Products.PlonePAS.interfaces.capabilities import IPasswordSetCapability\n from Products.PlonePAS.interfaces.group import IGroupManagement\n+from Products.PlonePAS.interfaces.memberdata import IMemberDataTool\n from Products.PlonePAS.interfaces.plugins import IUserManagement\n from Products.PlonePAS.interfaces.propertysheets import IMutablePropertySheet\n from Products.PluggableAuthService.interfaces.authservice import \\\n@@ -22,11 +24,13 @@\n from Products.PluggableAuthService.interfaces.plugins import IPropertiesPlugin\n from Products.PluggableAuthService.interfaces.plugins import \\\n     IRoleAssignerPlugin\n+from zope.component import adapter\n from zope.interface import implementer\n \n import six\n \n \n+@implementer(IMemberDataTool)\n class MemberDataTool(BaseTool):\n     """PAS-specific implementation of memberdata tool.\n     """\n@@ -185,13 +189,6 @@ def canAddMemberData(self):\n             pass\n         return False\n \n-    def wrapUser(self, u):\n-        \'\'\'\n-        If possible, returns the Member object that corresponds\n-        to the given User object.\n-        \'\'\'\n-        return MemberData(u, self)\n-\n     @postonly\n     def deleteMemberData(self, member_id, REQUEST=None):\n         """ Delete member data of specified member.\n@@ -221,10 +218,12 @@ def deleteMemberData(self, member_id, REQUEST=None):\n     def _getPlugins(self):\n         return self.acl_users.plugins\n \n+\n InitializeClass(MemberDataTool)\n \n \n @implementer(IManageCapabilities, IMember)\n+@adapter(IUser, IMemberDataTool)\n class MemberData(BaseMemberAdapter):\n \n     security = ClassSecurityInfo()\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2019-11-12T14:35:19+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.PlonePAS/commit/eaad89d2c54cc8585926ae0d69d312026e301f01

Merge pull request #52 from plone/thet-memberdataadapter

Use MemberData adapter

Files changed:
A news/52.bugfix
A src/Products/PlonePAS/interfaces/memberdata.py
A src/Products/PlonePAS/tools/configure.zcml
M src/Products/PlonePAS/configure.zcml
M src/Products/PlonePAS/tests/test_memberdatatool.py
M src/Products/PlonePAS/tools/memberdata.py

b'diff --git a/news/52.bugfix b/news/52.bugfix\nnew file mode 100644\nindex 00000000..9beaabf2\n--- /dev/null\n+++ b/news/52.bugfix\n@@ -0,0 +1,3 @@\n+Create the MemberData object from an adapter instead of directly instantiating it, as intended in Products.CMFCore.MemberDataTool.\n+This allows for better extensibility.\n+[thet]\ndiff --git a/src/Products/PlonePAS/configure.zcml b/src/Products/PlonePAS/configure.zcml\nindex f326d9ef..d7c003ae 100644\n--- a/src/Products/PlonePAS/configure.zcml\n+++ b/src/Products/PlonePAS/configure.zcml\n@@ -6,6 +6,7 @@\n     xmlns:i18n="http://namespaces.zope.org/i18n">\n \n   <include package=".browser" />\n+  <include package=".tools" />\n   <include file="profiles.zcml" />\n   <include file="exportimport.zcml" />\n \ndiff --git a/src/Products/PlonePAS/interfaces/memberdata.py b/src/Products/PlonePAS/interfaces/memberdata.py\nnew file mode 100644\nindex 00000000..024c73cc\n--- /dev/null\n+++ b/src/Products/PlonePAS/interfaces/memberdata.py\n@@ -0,0 +1,10 @@\n+# -*- coding: utf-8 -*-\n+from Products.CMFCore import interfaces\n+\n+\n+class IMemberDataTool(interfaces.IMemberDataTool):\n+    """More specific PlonePAS MemberDataTool interface.\n+    """\n+\n+\n+__all__ = (IMemberDataTool,)\ndiff --git a/src/Products/PlonePAS/tests/test_memberdatatool.py b/src/Products/PlonePAS/tests/test_memberdatatool.py\nindex c4321242..89ba2267 100644\n--- a/src/Products/PlonePAS/tests/test_memberdatatool.py\n+++ b/src/Products/PlonePAS/tests/test_memberdatatool.py\n@@ -4,6 +4,8 @@\n from plone.app.testing import TEST_USER_ID as default_user\n from Products.PlonePAS.tests import dummy\n from Products.PlonePAS.testing import PRODUCTS_PLONEPAS_INTEGRATION_TESTING\n+from zope.component import getMultiAdapter\n+from Products.CMFCore.interfaces import IMember\n \n import unittest\n \n@@ -73,3 +75,16 @@ def testFulltextMemberSearch(self):\n         self.assertEqual(len(search(\'bambam.net\')), 1)\n         self.assertEqual(len(search(\'bedrock.com\')), 2)\n         self.assertEqual(len(search(\'brubble\')), 1)\n+\n+    def testMemberDataAdapter(self):\n+        """Test, if the PlonePAS MemberData adapter is used instead of the\n+        default one from Products.CMFCore.MemberDataTool\n+        """\n+        from Products.PlonePAS.tools.memberdata import MemberData\n+        member = self.membership.getMemberById(\'fred\')\n+\n+        adapter = getMultiAdapter((member, self.memberdata), IMember)\n+        self.assertEqual(adapter.__class__, MemberData)\n+\n+        wrapped_user = self.memberdata.wrapUser(member)\n+        self.assertEqual(wrapped_user.__class__, MemberData)\ndiff --git a/src/Products/PlonePAS/tools/configure.zcml b/src/Products/PlonePAS/tools/configure.zcml\nnew file mode 100644\nindex 00000000..ce5e9d4d\n--- /dev/null\n+++ b/src/Products/PlonePAS/tools/configure.zcml\n@@ -0,0 +1,8 @@\n+<configure xmlns="http://namespaces.zope.org/zope">\n+\n+  <adapter\n+      provides="Products.CMFCore.interfaces.IMember"\n+      factory=".memberdata.MemberData"\n+      />\n+\n+</configure>\ndiff --git a/src/Products/PlonePAS/tools/memberdata.py b/src/Products/PlonePAS/tools/memberdata.py\nindex 68cfbb14..063f25bd 100644\n--- a/src/Products/PlonePAS/tools/memberdata.py\n+++ b/src/Products/PlonePAS/tools/memberdata.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from AccessControl import ClassSecurityInfo\n+from AccessControl.interfaces import IUser\n from AccessControl.requestmethod import postonly\n from AccessControl.class_init import InitializeClass\n from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2\n@@ -15,6 +16,7 @@\n from Products.PlonePAS.interfaces.capabilities import IManageCapabilities\n from Products.PlonePAS.interfaces.capabilities import IPasswordSetCapability\n from Products.PlonePAS.interfaces.group import IGroupManagement\n+from Products.PlonePAS.interfaces.memberdata import IMemberDataTool\n from Products.PlonePAS.interfaces.plugins import IUserManagement\n from Products.PlonePAS.interfaces.propertysheets import IMutablePropertySheet\n from Products.PluggableAuthService.interfaces.authservice import \\\n@@ -22,11 +24,13 @@\n from Products.PluggableAuthService.interfaces.plugins import IPropertiesPlugin\n from Products.PluggableAuthService.interfaces.plugins import \\\n     IRoleAssignerPlugin\n+from zope.component import adapter\n from zope.interface import implementer\n \n import six\n \n \n+@implementer(IMemberDataTool)\n class MemberDataTool(BaseTool):\n     """PAS-specific implementation of memberdata tool.\n     """\n@@ -185,13 +189,6 @@ def canAddMemberData(self):\n             pass\n         return False\n \n-    def wrapUser(self, u):\n-        \'\'\'\n-        If possible, returns the Member object that corresponds\n-        to the given User object.\n-        \'\'\'\n-        return MemberData(u, self)\n-\n     @postonly\n     def deleteMemberData(self, member_id, REQUEST=None):\n         """ Delete member data of specified member.\n@@ -221,10 +218,12 @@ def deleteMemberData(self, member_id, REQUEST=None):\n     def _getPlugins(self):\n         return self.acl_users.plugins\n \n+\n InitializeClass(MemberDataTool)\n \n \n @implementer(IManageCapabilities, IMember)\n+@adapter(IUser, IMemberDataTool)\n class MemberData(BaseMemberAdapter):\n \n     security = ClassSecurityInfo()\n'

