Repository: plone.transformchain


Branch: refs/heads/master
Date: 2018-03-16T09:30:20+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.transformchain/commit/5426b2bf85b58e757f0ac4eb6534d4663d3f7d78

make ZServer optional

Files changed:
M plone/transformchain/tests.py
M plone/transformchain/transformer.py

diff --git a/plone/transformchain/tests.py b/plone/transformchain/tests.py
index efe7a3b..1d4a6ce 100644
--- a/plone/transformchain/tests.py
+++ b/plone/transformchain/tests.py
@@ -12,12 +12,21 @@
 from zope.interface import Interface
 from ZPublisher.HTTPResponse import default_encoding
 from ZPublisher.Iterators import filestream_iterator
-from ZServer.FTPRequest import FTPRequest
 
 import os
 import tempfile
 import unittest
 
+import pkg_resources
+HAS_ZSERVER = True
+try:
+    dist = pkg_resources.get_distribution('ZServer')
+except pkg_resources.DistributionNotFound:
+    HAS_ZSERVER = False
+
+if HAS_ZSERVER:
+    from ZServer.FTPRequest import FTPRequest
+
 
 class FauxPubEvent(object):
 
@@ -57,8 +66,9 @@ def __init__(self, published, response=None):
         self.environ = {}
 
 
-class FauxFTPRequest(FauxRequest, FTPRequest):
-    pass
+if HAS_ZSERVER:
+    class FauxFTPRequest(FauxRequest, FTPRequest):
+        pass
 
 
 class FauxPublished(object):
@@ -142,6 +152,7 @@ def transformIterable(self, result, encoding):
         new_result = self.t(request, result, encoding)
         self.assertEqual(None, new_result)
 
+    @unittest.skipUnless(HAS_ZSERVER)
     def test_ftp_request_not_transformed(self):
         request = FauxFTPRequest(FauxPublished())
         result = ['Blah']
diff --git a/plone/transformchain/transformer.py b/plone/transformchain/transformer.py
index 9721ca1..889d965 100644
--- a/plone/transformchain/transformer.py
+++ b/plone/transformchain/transformer.py
@@ -7,11 +7,20 @@
 from zope.component import getAdapters
 from zope.event import notify
 from zope.interface import implementer
-from ZServer.FTPRequest import FTPRequest
 
 import six
 import logging
 
+import pkg_resources
+HAS_ZSERVER = True
+try:
+    dist = pkg_resources.get_distribution('ZServer')
+except pkg_resources.DistributionNotFound:
+    HAS_ZSERVER = False
+
+if HAS_ZSERVER:
+    from ZServer.FTPRequest import FTPRequest
+
 
 LOGGER = logging.getLogger('plone.transformchain')
 
@@ -27,7 +36,7 @@ class Transformer(object):
     """
 
     def __call__(self, request, result, encoding):
-        if isinstance(request, FTPRequest):
+        if HAS_ZSERVER and isinstance(request, FTPRequest):
             # Don't transform FTP requests
             return None
         if request.environ.get(DISABLE_TRANSFORM_REQUEST_KEY, False):


Repository: plone.transformchain


Branch: refs/heads/master
Date: 2018-04-01T11:58:55+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.transformchain/commit/c953fa62503d2510fb01df9a027026db8f669f72

fix transform to text. concatenate body as bytes

Files changed:
M plone/transformchain/transformer.py
M plone/transformchain/zpublisher.py

diff --git a/plone/transformchain/transformer.py b/plone/transformchain/transformer.py
index 889d965..135a199 100644
--- a/plone/transformchain/transformer.py
+++ b/plone/transformchain/transformer.py
@@ -53,7 +53,7 @@ def __call__(self, request, result, encoding):
                 notify(events.BeforeSingleTransform(request, name, handler))
                 if isinstance(result, six.text_type):
                     newResult = handler.transformUnicode(result, encoding)
-                elif isinstance(result, str):
+                elif isinstance(result, six.binary_type):
                     newResult = handler.transformBytes(result, encoding)
                 else:
                     newResult = handler.transformIterable(result, encoding)
diff --git a/plone/transformchain/zpublisher.py b/plone/transformchain/zpublisher.py
index 70b8a57..ee25e88 100644
--- a/plone/transformchain/zpublisher.py
+++ b/plone/transformchain/zpublisher.py
@@ -96,7 +96,7 @@ def applyTransformOnSuccess(event):
         response.setBody(transformed)
     # ... but not with iterables
     else:
-        response.setBody(''.join(transformed))
+        response.setBody(b''.join(transformed))
 
 
 @adapter(IPubBeforeAbort)


Repository: plone.transformchain


Branch: refs/heads/master
Date: 2018-04-28T22:46:40+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.transformchain/commit/6c8cb8670ef206a64fbacae00d6ec4a8c068039e

Changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 64c9cf6..7ed0a0b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Mode fixes for Python 2 / 3 compatibility
+  [pbauer]
 
 
 1.2.2 (2018-02-11)


Repository: plone.transformchain


Branch: refs/heads/master
Date: 2018-04-29T00:03:00+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.transformchain/commit/aebf1a6ef5282864485815e73fa1d5a391296494

Fix changelog

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 7ed0a0b..8f2fc9f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,11 +10,11 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Make ZServer optional
 
 Bug fixes:
 
-- Mode fixes for Python 2 / 3 compatibility
+- More fixes for Python 2 / 3 compatibility
   [pbauer]
 
 


Repository: plone.transformchain


Branch: refs/heads/master
Date: 2018-05-05T14:24:16+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.transformchain/commit/415ca9657d16be0d76ac0da27e7abfa6fb3044cc

Add a comment to skipUnless

Files changed:
M plone/transformchain/tests.py

diff --git a/plone/transformchain/tests.py b/plone/transformchain/tests.py
index 1d4a6ce..fdfab50 100644
--- a/plone/transformchain/tests.py
+++ b/plone/transformchain/tests.py
@@ -14,10 +14,11 @@
 from ZPublisher.Iterators import filestream_iterator
 
 import os
+import pkg_resources
 import tempfile
 import unittest
 
-import pkg_resources
+
 HAS_ZSERVER = True
 try:
     dist = pkg_resources.get_distribution('ZServer')
@@ -152,7 +153,7 @@ def transformIterable(self, result, encoding):
         new_result = self.t(request, result, encoding)
         self.assertEqual(None, new_result)
 
-    @unittest.skipUnless(HAS_ZSERVER)
+    @unittest.skipUnless(HAS_ZSERVER, 'ZServer is optional')
     def test_ftp_request_not_transformed(self):
         request = FauxFTPRequest(FauxPublished())
         result = ['Blah']


Repository: plone.transformchain


Branch: refs/heads/master
Date: 2018-05-05T18:02:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.transformchain/commit/3415eeb53fd85fb737d4c8360641f02ac8471cd3

Merge pull request #8 from plone/python3

Python 3 compatibility

Files changed:
M CHANGES.rst
M plone/transformchain/tests.py
M plone/transformchain/transformer.py
M plone/transformchain/zpublisher.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 64c9cf6..8f2fc9f 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -10,11 +10,12 @@ Breaking changes:
 
 New features:
 
-- *add item here*
+- Make ZServer optional
 
 Bug fixes:
 
-- *add item here*
+- More fixes for Python 2 / 3 compatibility
+  [pbauer]
 
 
 1.2.2 (2018-02-11)
diff --git a/plone/transformchain/tests.py b/plone/transformchain/tests.py
index efe7a3b..fdfab50 100644
--- a/plone/transformchain/tests.py
+++ b/plone/transformchain/tests.py
@@ -12,13 +12,23 @@
 from zope.interface import Interface
 from ZPublisher.HTTPResponse import default_encoding
 from ZPublisher.Iterators import filestream_iterator
-from ZServer.FTPRequest import FTPRequest
 
 import os
+import pkg_resources
 import tempfile
 import unittest
 
 
+HAS_ZSERVER = True
+try:
+    dist = pkg_resources.get_distribution('ZServer')
+except pkg_resources.DistributionNotFound:
+    HAS_ZSERVER = False
+
+if HAS_ZSERVER:
+    from ZServer.FTPRequest import FTPRequest
+
+
 class FauxPubEvent(object):
 
     def __init__(self, request):
@@ -57,8 +67,9 @@ def __init__(self, published, response=None):
         self.environ = {}
 
 
-class FauxFTPRequest(FauxRequest, FTPRequest):
-    pass
+if HAS_ZSERVER:
+    class FauxFTPRequest(FauxRequest, FTPRequest):
+        pass
 
 
 class FauxPublished(object):
@@ -142,6 +153,7 @@ def transformIterable(self, result, encoding):
         new_result = self.t(request, result, encoding)
         self.assertEqual(None, new_result)
 
+    @unittest.skipUnless(HAS_ZSERVER, 'ZServer is optional')
     def test_ftp_request_not_transformed(self):
         request = FauxFTPRequest(FauxPublished())
         result = ['Blah']
diff --git a/plone/transformchain/transformer.py b/plone/transformchain/transformer.py
index 9721ca1..135a199 100644
--- a/plone/transformchain/transformer.py
+++ b/plone/transformchain/transformer.py
@@ -7,11 +7,20 @@
 from zope.component import getAdapters
 from zope.event import notify
 from zope.interface import implementer
-from ZServer.FTPRequest import FTPRequest
 
 import six
 import logging
 
+import pkg_resources
+HAS_ZSERVER = True
+try:
+    dist = pkg_resources.get_distribution('ZServer')
+except pkg_resources.DistributionNotFound:
+    HAS_ZSERVER = False
+
+if HAS_ZSERVER:
+    from ZServer.FTPRequest import FTPRequest
+
 
 LOGGER = logging.getLogger('plone.transformchain')
 
@@ -27,7 +36,7 @@ class Transformer(object):
     """
 
     def __call__(self, request, result, encoding):
-        if isinstance(request, FTPRequest):
+        if HAS_ZSERVER and isinstance(request, FTPRequest):
             # Don't transform FTP requests
             return None
         if request.environ.get(DISABLE_TRANSFORM_REQUEST_KEY, False):
@@ -44,7 +53,7 @@ def __call__(self, request, result, encoding):
                 notify(events.BeforeSingleTransform(request, name, handler))
                 if isinstance(result, six.text_type):
                     newResult = handler.transformUnicode(result, encoding)
-                elif isinstance(result, str):
+                elif isinstance(result, six.binary_type):
                     newResult = handler.transformBytes(result, encoding)
                 else:
                     newResult = handler.transformIterable(result, encoding)
diff --git a/plone/transformchain/zpublisher.py b/plone/transformchain/zpublisher.py
index 70b8a57..ee25e88 100644
--- a/plone/transformchain/zpublisher.py
+++ b/plone/transformchain/zpublisher.py
@@ -96,7 +96,7 @@ def applyTransformOnSuccess(event):
         response.setBody(transformed)
     # ... but not with iterables
     else:
-        response.setBody(''.join(transformed))
+        response.setBody(b''.join(transformed))
 
 
 @adapter(IPubBeforeAbort)


