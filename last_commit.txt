Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T11:27:56+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/f94e497952692b68ecb2a707c4842b217a422cbf

Products.ResourceRegistries made conditional

Files changed:
A news/183.bugfix
M plone/app/upgrade/__init__.py
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v40/alphas.py
M plone/app/upgrade/v42/profiles/to_422/registry.xml
M plone/app/upgrade/v43/profiles/to_alpha2/registry.xml
M plone/app/upgrade/v50/profiles/to_alpha3/registry.xml
M plone/app/upgrade/v51/profiles/to_alpha1/registry.xml

b'diff --git a/news/183.bugfix b/news/183.bugfix\nnew file mode 100644\nindex 00000000..3455d499\n--- /dev/null\n+++ b/news/183.bugfix\n@@ -0,0 +1,2 @@\n+Tolerate lack of legacy resource registry\n+[ksuess]\ndiff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex 1e11d673..e6dbed01 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -7,6 +7,12 @@\n import sys\n \n \n+try:\n+    from Products.ResourceRegistries import JSRegistry\n+    IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED = True\n+except ImportError:\n+    IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED = False\n+\n try:\n     from zope.app.cache.interfaces.ram import IRAMCache  # noqa F401\n except ImportError:\ndiff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py\nindex 322380fc..f773d8eb 100644\n--- a/plone/app/upgrade/tests/base.py\n+++ b/plone/app/upgrade/tests/base.py\n@@ -16,6 +16,7 @@\n import transaction\n import warnings\n \n+from plone.app.upgrade import IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED\n \n #\n # Base TestCase for upgrades\n@@ -67,16 +68,18 @@ def removeActionFromTool(\n             tool._delOb(action_id)\n \n     def addResourceToJSTool(self, resource_name):\n-        # Registers a resource with the javascripts tool\n-        tool = getToolByName(self.portal, \'portal_javascripts\')\n-        if resource_name not in tool.getResourceIds():\n-            tool.registerScript(resource_name)\n+        if IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED:\n+            # Registers a resource with the javascripts tool\n+            tool = getToolByName(self.portal, \'portal_javascripts\')\n+            if resource_name not in tool.getResourceIds():\n+                tool.registerScript(resource_name)\n \n     def addResourceToCSSTool(self, resource_name):\n-        # Registers a resource with the css tool\n-        tool = getToolByName(self.portal, \'portal_css\')\n-        if resource_name not in tool.getResourceIds():\n-            tool.registerStylesheet(resource_name)\n+        if IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED:\n+            # Registers a resource with the css tool\n+            tool = getToolByName(self.portal, \'portal_css\')\n+            if resource_name not in tool.getResourceIds():\n+                tool.registerStylesheet(resource_name)\n \n     def removeSiteProperty(self, property_id):\n         # Removes a site property from portal_properties\ndiff --git a/plone/app/upgrade/v40/alphas.py b/plone/app/upgrade/v40/alphas.py\nindex c83880e3..e08e15ce 100644\n--- a/plone/app/upgrade/v40/alphas.py\n+++ b/plone/app/upgrade/v40/alphas.py\n@@ -16,7 +16,6 @@\n from Products.CMFCore.Expression import Expression\n from Products.CMFCore.interfaces import ICachingPolicyManager\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.setuphandlers import addCacheForResourceRegistry\n from Products.CMFPlone.setuphandlers import addCacheHandlers\n from Products.MailHost.interfaces import IMailHost\n from Products.MailHost.MailHost import MailHost\n@@ -352,7 +351,12 @@ def removeBrokenCacheFu(context):\n         transaction.savepoint(optimistic=True)\n         manage_addCachingPolicyManager(portal)\n         addCacheHandlers(portal)\n-        addCacheForResourceRegistry(portal)\n+        try:\n+            from Products.CMFPlone.setuphandlers import addCacheForResourceRegistry\n+            addCacheForResourceRegistry(portal)\n+        except:\n+            # legacy resource registries replaced by new type\n+            pass\n         logger.info(\'Removed CacheSetup tools.\')\n \n \ndiff --git a/plone/app/upgrade/v42/profiles/to_422/registry.xml b/plone/app/upgrade/v42/profiles/to_422/registry.xml\nindex 8565170c..504d99f0 100644\n--- a/plone/app/upgrade/v42/profiles/to_422/registry.xml\n+++ b/plone/app/upgrade/v42/profiles/to_422/registry.xml\n@@ -1,5 +1,8 @@\n <registry>\n-    <record interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings" field="resourceBundlesForThemes">\n+    <record\n+        interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n+        field="resourceBundlesForThemes"\n+        condition="installed Products.ResourceRegistries">\n         <value purge="false">\n             <element key="(default)">\n                 <element>jquery</element>\ndiff --git a/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml b/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\nindex c69a06b5..07b13715 100644\n--- a/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\n+++ b/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\n@@ -1,5 +1,8 @@\n <registry>\n-    <record interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings" field="resourceBundlesForThemes">\n+    <record\n+        interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n+        field="resourceBundlesForThemes"\n+        condition="installed Products.ResourceRegistries">\n         <value purge="false">\n             <element key="(default)">\n                 <element>jquery</element>\ndiff --git a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\nindex 4f22b14c..4d1c1714 100644\n--- a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\n+++ b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\n@@ -14,7 +14,10 @@\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"\n            prefix="plone" />\n-  <record interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings" field="resourceBundlesForThemes">\n+  <record\n+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n+      field="resourceBundlesForThemes"\n+      condition="installed Products.ResourceRegistries">\n     <value purge="false">\n       <element key="(default)">\n         <element>jquery</element>\ndiff --git a/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml\nindex ba0e3e3e..5071ab04 100644\n--- a/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml\n+++ b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml\n@@ -2,7 +2,8 @@\n <registry>\n   <records\n       interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n-      prefix="plone">\n+      prefix="plone"\n+      condition="installed Products.ResourceRegistries">\n     <value\n         key="lessvariables"\n         purge="False">\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T12:12:43+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/c5f73fe379fde2ebf35b40af43d393f96093af90

remove portal tools and configuration registry. testing

Files changed:
M plone/app/upgrade/v50/testing.py
M plone/app/upgrade/v52/alphas.py
M plone/app/upgrade/v52/profiles/to_beta1/registry.xml
M plone/app/upgrade/v52/tests.py

b'diff --git a/plone/app/upgrade/v50/testing.py b/plone/app/upgrade/v50/testing.py\nindex bef21840..998c28eb 100644\n--- a/plone/app/upgrade/v50/testing.py\n+++ b/plone/app/upgrade/v50/testing.py\n@@ -41,14 +41,12 @@ def setUpPloneSite(self, portal):\n             # run upgrades\n             self[\'portal\'] = portal = app.test\n             setSite(portal)\n-            try:\n+            if get_distribution(\'Products.CMFPlone\').version >= \'5.2\':\n                 # for 5.2 we need tools as utilities\n                 loadMigrationProfile(\n                     portal.portal_setup,\n                     \'profile-plone.app.upgrade.v52:to52alpha1\',\n                     steps=[\'componentregistry\'])\n-            except KeyError:\n-                pass\n             portal.portal_migration.upgrade(swallow_errors=False)\n             setSite(None)\n \ndiff --git a/plone/app/upgrade/v52/alphas.py b/plone/app/upgrade/v52/alphas.py\nindex 3b3938a0..b73a6599 100644\n--- a/plone/app/upgrade/v52/alphas.py\n+++ b/plone/app/upgrade/v52/alphas.py\n@@ -2,7 +2,11 @@\n from BTrees.OOBTree import OOBTree\n from plone.app.upgrade.utils import cleanUpSkinsTool\n from plone.app.upgrade.utils import loadMigrationProfile\n+<<<<<<< HEAD\n from plone.dexterity.interfaces import IDexterityFTI\n+=======\n+from plone.app.upgrade.v40.alphas import cleanUpToolRegistry\n+>>>>>>> remove portal tools and configuration registry. testing\n from plone.folder.nogopip import manage_addGopipIndex\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n@@ -83,6 +87,23 @@ def fix_core_behaviors_in_ftis(context):\n             fti.behaviors = tuple(behaviors)\n \n \n+def remove_portal_tools(context):\n+    """Remove some portal tools."""\n+    portal_url = getToolByName(context, \'portal_url\')\n+    portal = portal_url.getPortalObject()\n+\n+    tools_to_remove = [\n+        \'portal_css\',\n+        \'portal_javascripts\',\n+    ]\n+\n+    # remove obsolete tools\n+    tools = [t for t in tools_to_remove if t in portal]\n+    portal.manage_delObjects(tools)\n+\n+    cleanUpToolRegistry(context)\n+\n+\n def to52alpha1(context):\n     loadMigrationProfile(context, \'profile-plone.app.upgrade.v52:to52alpha1\')\n     portal = getToolByName(context, \'portal_url\').getPortalObject()\n@@ -92,3 +113,4 @@ def to52alpha1(context):\n     migrate_gopipindex(context)\n     rebuild_memberdata(context)\n     fix_core_behaviors_in_ftis(context)\n+    remove_portal_tools(context)\ndiff --git a/plone/app/upgrade/v52/profiles/to_beta1/registry.xml b/plone/app/upgrade/v52/profiles/to_beta1/registry.xml\nindex 707e45e4..b898a9c6 100644\n--- a/plone/app/upgrade/v52/profiles/to_beta1/registry.xml\n+++ b/plone/app/upgrade/v52/profiles/to_beta1/registry.xml\n@@ -47,4 +47,8 @@\n     <value key="last_compilation">2018-10-01 23:00:00</value>\n   </records>\n \n+  <records\n+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n+      prefix="plone"\n+      remove="True"/>\n </registry>\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex 71ef2370..f0d3a3ad 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -1,20 +1,47 @@\n # -*- coding: utf-8 -*-\n+\n+from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL\n+from plone.testing.z2 import Browser\n+from pkg_resources import get_distribution\n+\n import unittest\n \n+PLONE_52 = get_distribution(\'Products.CMFPlone\').version >= \'5.2\'\n+\n+\n+class TestFunctionalMigrations(unittest.TestCase):\n+    """Run an upgrade from a real Plone 4.0 ZEXP to 5.2.\n+    Then test that various things are set up correctly.\n+    """\n+\n+    layer = REAL_UPGRADE_FUNCTIONAL\n \n-try:\n-    from Products.CMFPlone.factory import _IMREALLYPLONE5\n-    _IMREALLYPLONE5  # pyflakes\n-except ImportError:\n-    PLONE_5 = False\n-else:\n-    PLONE_5 = True\n+    def setUp(self):\n+        self.portal = self.layer[\'app\'].test\n+\n+    def testFullyUpgraded(self):\n+        self.assertFalse(self.portal.portal_migration.needUpgrading())\n+\n+    def testCanRenderHomepage(self):\n+        browser = Browser(self.layer[\'app\'])\n+        browser.open(\'http://nohost/test\')\n+        self.assertTrue(\'Welcome\' in browser.contents)\n+\n+    def testToolsAreRemoved(self):\n+        self.assertFalse(\'portal_css\' in self.portal)\n+        self.assertFalse(\'portal_javascripts\' in self.portal)\n \n \n def test_suite():\n-    # Skip these tests on Plone 4\n-    if not PLONE_5:\n+    # Skip these tests on Plone < 5.2\n+\n+    print("PLONE_52 {}").format(PLONE_52)  # debug\n+    import pdb; pdb.set_trace()\n+    if not PLONE_52:\n         return unittest.TestSuite()\n \n     suite = unittest.TestSuite()\n+    suite.addTest(\n+        unittest.makeSuite(TestFunctionalMigrations)\n+        )\n     return suite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T12:15:44+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/cb8e0660bcafb8803293c9b6c23a69e9ef13d991

testing: imported and upgraded Plone 5.1 instance has no rr tools anymore

Files changed:
A plone/app/upgrade/v52/data/test-full-5_1.zexp
A plone/app/upgrade/v52/testing.py
M plone/app/upgrade/v40/alphas.py
M plone/app/upgrade/v50/testing.py
M plone/app/upgrade/v50/tests.py
M plone/app/upgrade/v52/alphas.py
M plone/app/upgrade/v52/tests.py

b'diff --git a/plone/app/upgrade/v40/alphas.py b/plone/app/upgrade/v40/alphas.py\nindex e08e15ce..9b07bf8b 100644\n--- a/plone/app/upgrade/v40/alphas.py\n+++ b/plone/app/upgrade/v40/alphas.py\n@@ -385,7 +385,8 @@ def cleanUpToolRegistry(context):\n     required = toolset._required.copy()\n     existing = portal.keys()\n     changed = False\n-    for name, info in required.items():\n+    items = list(required.items())\n+    for name, info in items:\n         if name not in existing:\n             del required[name]\n             changed = True\ndiff --git a/plone/app/upgrade/v50/testing.py b/plone/app/upgrade/v50/testing.py\nindex 998c28eb..e258aa16 100644\n--- a/plone/app/upgrade/v50/testing.py\n+++ b/plone/app/upgrade/v50/testing.py\n@@ -29,14 +29,13 @@ def setUpZope(self, app, configurationContext):\n     def setUpPloneSite(self, portal):\n         app = portal.aq_parent\n         login(app[\'acl_users\'], \'admin\')\n-\n         # import old ZEXP\n         try:\n             path = os.path.join(os.path.abspath(\n                 os.path.dirname(__file__)), \'data\', \'test-full.zexp\')\n             app._importObjectFromFile(path, verify=0)\n-        except BaseException:\n-            logger.exception(\'Failed to import ZEXP from old site.\')\n+        except Exception as e:\n+            logger.exception(\'Failed to import ZEXP from old site. ({})\'.format(e))\n         else:\n             # run upgrades\n             self[\'portal\'] = portal = app.test\ndiff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py\nindex 913929a8..023206a1 100644\n--- a/plone/app/upgrade/v50/tests.py\n+++ b/plone/app/upgrade/v50/tests.py\n@@ -13,7 +13,6 @@\n import six\n import unittest\n \n-\n try:\n     from Products.CMFPlone.factory import _IMREALLYPLONE5\n     _IMREALLYPLONE5  # pyflakes\n@@ -179,7 +178,7 @@ def test_fix_double_smaxage(self):\n \n \n def test_suite():\n-    # Skip these tests on Plone 4\n+    # Skip these tests if not Plone 5.0 or 5.1\n     from unittest import TestSuite, makeSuite\n     if not six.PY2 or not PLONE_5:\n         return TestSuite()\ndiff --git a/plone/app/upgrade/v52/alphas.py b/plone/app/upgrade/v52/alphas.py\nindex b73a6599..2f6c710a 100644\n--- a/plone/app/upgrade/v52/alphas.py\n+++ b/plone/app/upgrade/v52/alphas.py\n@@ -2,11 +2,8 @@\n from BTrees.OOBTree import OOBTree\n from plone.app.upgrade.utils import cleanUpSkinsTool\n from plone.app.upgrade.utils import loadMigrationProfile\n-<<<<<<< HEAD\n from plone.dexterity.interfaces import IDexterityFTI\n-=======\n from plone.app.upgrade.v40.alphas import cleanUpToolRegistry\n->>>>>>> remove portal tools and configuration registry. testing\n from plone.folder.nogopip import manage_addGopipIndex\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n@@ -36,6 +33,23 @@ def migrate_gopipindex(context):\n     manage_addGopipIndex(catalog, \'getObjPositionInParent\')\n \n \n+def remove_legacy_resource_registries(context):\n+    """Remove portal_css and portal_javascripts."""\n+    portal_url = getToolByName(context, \'portal_url\')\n+    portal = portal_url.getPortalObject()\n+\n+    tools_to_remove = [\n+        \'portal_css\',\n+        \'portal_javascripts\',\n+    ]\n+\n+    # remove obsolete tools\n+    tools = [t for t in tools_to_remove if t in portal]\n+    portal.manage_delObjects(tools)\n+\n+    cleanUpToolRegistry(context)\n+\n+\n def rebuild_memberdata(context):\n     # MemberData has changed radically, see plone/Products.PlonePAS#24\n     # This results in a bug in upgraded sites: plone/Products.CMFPlone#2722\n@@ -111,6 +125,7 @@ def to52alpha1(context):\n \n     cleanup_resources()\n     migrate_gopipindex(context)\n+    remove_legacy_resource_registries(context)\n     rebuild_memberdata(context)\n     fix_core_behaviors_in_ftis(context)\n     remove_portal_tools(context)\ndiff --git a/plone/app/upgrade/v52/data/test-full-5_1.zexp b/plone/app/upgrade/v52/data/test-full-5_1.zexp\nnew file mode 100644\nindex 00000000..791703d1\nBinary files /dev/null and b/plone/app/upgrade/v52/data/test-full-5_1.zexp differ\ndiff --git a/plone/app/upgrade/v52/testing.py b/plone/app/upgrade/v52/testing.py\nnew file mode 100644\nindex 00000000..921c64e1\n--- /dev/null\n+++ b/plone/app/upgrade/v52/testing.py\n@@ -0,0 +1,62 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.testing import PLONE_FIXTURE\n+from plone.app.testing import PloneSandboxLayer\n+from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.testing.z2 import FunctionalTesting\n+from plone.testing.z2 import login\n+from zope.component.hooks import setSite\n+\n+import logging\n+import os\n+\n+\n+logger = logging.getLogger(__file__)\n+\n+\n+class RealUpgradeLayer(PloneSandboxLayer):\n+    defaultBases = (PLONE_FIXTURE,)\n+\n+    # def setUpZope(self, app, configurationContext):\n+    #     # load ZCML\n+    #     # In 5.0 alpha we install or upgrade plone.app.caching,\n+    #     # so it must be available to Zope..\n+    #     import plone.app.caching\n+    #     self.loadZCML(\n+    #         name=\'configure.zcml\',\n+    #         package=plone.app.caching,\n+    #     )\n+\n+    def setUpPloneSite(self, portal):\n+        app = portal.aq_parent\n+        login(app[\'acl_users\'], \'admin\')\n+        # import old ZEXP\n+        try:\n+            path = os.path.join(os.path.abspath(\n+                os.path.dirname(__file__)), \'data\', \'test-full-5_1.zexp\')\n+            app._importObjectFromFile(path, verify=0)\n+        except Exception as e:\n+            import pdb; pdb.set_trace()\n+            logger.exception(\'Failed to import ZEXP from old site. ({})\'.format(e))\n+        else:\n+            # run upgrades\n+            self[\'portal\'] = portal = app.test\n+            setSite(portal)\n+            if get_distribution(\'Products.CMFPlone\').version >= \'5.2\':\n+                # for 5.2 we need tools as utilities\n+                loadMigrationProfile(\n+                    portal.portal_setup,\n+                    \'profile-plone.app.upgrade.v52:to52alpha1\',\n+                    steps=[\'componentregistry\'])\n+            portal.portal_migration.upgrade(swallow_errors=False)\n+            setSite(None)\n+\n+    def tearDownPloneSite(self, portal):\n+        try:\n+            del self[\'portal\']\n+        except KeyError:\n+            pass\n+\n+\n+REAL_UPGRADE_FIXTURE = RealUpgradeLayer()\n+REAL_UPGRADE_FUNCTIONAL = FunctionalTesting(\n+    bases=(REAL_UPGRADE_FIXTURE,), name=\'plone.app.upgrade:5.1 -> 5.2\')\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex f0d3a3ad..ae94ed6b 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -1,12 +1,12 @@\n # -*- coding: utf-8 -*-\n \n-from plone.app.upgrade.v50.testing import REAL_UPGRADE_FUNCTIONAL\n+from plone.app.upgrade.v52.testing import REAL_UPGRADE_FUNCTIONAL\n from plone.testing.z2 import Browser\n from pkg_resources import get_distribution\n \n import unittest\n \n-PLONE_52 = get_distribution(\'Products.CMFPlone\').version >= \'5.2\'\n+PLONE_51 = get_distribution(\'Products.CMFPlone\').version >= \'5.1\'\n \n \n class TestFunctionalMigrations(unittest.TestCase):\n@@ -17,15 +17,16 @@ class TestFunctionalMigrations(unittest.TestCase):\n     layer = REAL_UPGRADE_FUNCTIONAL\n \n     def setUp(self):\n-        self.portal = self.layer[\'app\'].test\n+        self.portal = self.layer[\'app\'].plone\n \n     def testFullyUpgraded(self):\n         self.assertFalse(self.portal.portal_migration.needUpgrading())\n \n     def testCanRenderHomepage(self):\n         browser = Browser(self.layer[\'app\'])\n-        browser.open(\'http://nohost/test\')\n-        self.assertTrue(\'Welcome\' in browser.contents)\n+        portalURL = self.portal.absolute_url()\n+        browser.open(portalURL)\n+        self.assertTrue(\'Plone\' in browser.contents)\n \n     def testToolsAreRemoved(self):\n         self.assertFalse(\'portal_css\' in self.portal)\n@@ -33,11 +34,8 @@ def testToolsAreRemoved(self):\n \n \n def test_suite():\n-    # Skip these tests on Plone < 5.2\n-\n-    print("PLONE_52 {}").format(PLONE_52)  # debug\n-    import pdb; pdb.set_trace()\n-    if not PLONE_52:\n+    # Skip these tests on Plone < 5.1\n+    if not PLONE_51:\n         return unittest.TestSuite()\n \n     suite = unittest.TestSuite()\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T12:15:44+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/fae9241a303aa2cdef834ec84c8e8c652e66dd88

Tests removed for removal of legacy resource registries

Files changed:
M plone/app/upgrade/v52/tests.py
D plone/app/upgrade/v52/data/test-full-5_1.zexp
D plone/app/upgrade/v52/testing.py

b'diff --git a/plone/app/upgrade/v52/data/test-full-5_1.zexp b/plone/app/upgrade/v52/data/test-full-5_1.zexp\ndeleted file mode 100644\nindex 791703d1..00000000\nBinary files a/plone/app/upgrade/v52/data/test-full-5_1.zexp and /dev/null differ\ndiff --git a/plone/app/upgrade/v52/testing.py b/plone/app/upgrade/v52/testing.py\ndeleted file mode 100644\nindex 921c64e1..00000000\n--- a/plone/app/upgrade/v52/testing.py\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-# -*- coding: utf-8 -*-\n-from plone.app.testing import PLONE_FIXTURE\n-from plone.app.testing import PloneSandboxLayer\n-from plone.app.upgrade.utils import loadMigrationProfile\n-from plone.testing.z2 import FunctionalTesting\n-from plone.testing.z2 import login\n-from zope.component.hooks import setSite\n-\n-import logging\n-import os\n-\n-\n-logger = logging.getLogger(__file__)\n-\n-\n-class RealUpgradeLayer(PloneSandboxLayer):\n-    defaultBases = (PLONE_FIXTURE,)\n-\n-    # def setUpZope(self, app, configurationContext):\n-    #     # load ZCML\n-    #     # In 5.0 alpha we install or upgrade plone.app.caching,\n-    #     # so it must be available to Zope..\n-    #     import plone.app.caching\n-    #     self.loadZCML(\n-    #         name=\'configure.zcml\',\n-    #         package=plone.app.caching,\n-    #     )\n-\n-    def setUpPloneSite(self, portal):\n-        app = portal.aq_parent\n-        login(app[\'acl_users\'], \'admin\')\n-        # import old ZEXP\n-        try:\n-            path = os.path.join(os.path.abspath(\n-                os.path.dirname(__file__)), \'data\', \'test-full-5_1.zexp\')\n-            app._importObjectFromFile(path, verify=0)\n-        except Exception as e:\n-            import pdb; pdb.set_trace()\n-            logger.exception(\'Failed to import ZEXP from old site. ({})\'.format(e))\n-        else:\n-            # run upgrades\n-            self[\'portal\'] = portal = app.test\n-            setSite(portal)\n-            if get_distribution(\'Products.CMFPlone\').version >= \'5.2\':\n-                # for 5.2 we need tools as utilities\n-                loadMigrationProfile(\n-                    portal.portal_setup,\n-                    \'profile-plone.app.upgrade.v52:to52alpha1\',\n-                    steps=[\'componentregistry\'])\n-            portal.portal_migration.upgrade(swallow_errors=False)\n-            setSite(None)\n-\n-    def tearDownPloneSite(self, portal):\n-        try:\n-            del self[\'portal\']\n-        except KeyError:\n-            pass\n-\n-\n-REAL_UPGRADE_FIXTURE = RealUpgradeLayer()\n-REAL_UPGRADE_FUNCTIONAL = FunctionalTesting(\n-    bases=(REAL_UPGRADE_FIXTURE,), name=\'plone.app.upgrade:5.1 -> 5.2\')\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex ae94ed6b..a693e22c 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -6,40 +6,7 @@\n \n import unittest\n \n-PLONE_51 = get_distribution(\'Products.CMFPlone\').version >= \'5.1\'\n-\n-\n-class TestFunctionalMigrations(unittest.TestCase):\n-    """Run an upgrade from a real Plone 4.0 ZEXP to 5.2.\n-    Then test that various things are set up correctly.\n-    """\n-\n-    layer = REAL_UPGRADE_FUNCTIONAL\n-\n-    def setUp(self):\n-        self.portal = self.layer[\'app\'].plone\n-\n-    def testFullyUpgraded(self):\n-        self.assertFalse(self.portal.portal_migration.needUpgrading())\n-\n-    def testCanRenderHomepage(self):\n-        browser = Browser(self.layer[\'app\'])\n-        portalURL = self.portal.absolute_url()\n-        browser.open(portalURL)\n-        self.assertTrue(\'Plone\' in browser.contents)\n-\n-    def testToolsAreRemoved(self):\n-        self.assertFalse(\'portal_css\' in self.portal)\n-        self.assertFalse(\'portal_javascripts\' in self.portal)\n-\n \n def test_suite():\n-    # Skip these tests on Plone < 5.1\n-    if not PLONE_51:\n-        return unittest.TestSuite()\n-\n     suite = unittest.TestSuite()\n-    suite.addTest(\n-        unittest.makeSuite(TestFunctionalMigrations)\n-        )\n     return suite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T12:15:44+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/56c8599914e74c77cef9dd81ce88850653a99053

using utils

Files changed:
M plone/app/upgrade/v50/testing.py
M plone/app/upgrade/v52/tests.py

b"diff --git a/plone/app/upgrade/v50/testing.py b/plone/app/upgrade/v50/testing.py\nindex e258aa16..f95b84c9 100644\n--- a/plone/app/upgrade/v50/testing.py\n+++ b/plone/app/upgrade/v50/testing.py\n@@ -2,6 +2,7 @@\n from plone.app.testing import PLONE_FIXTURE\n from plone.app.testing import PloneSandboxLayer\n from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.app.upgrade.utils import plone_version\n from plone.testing.z2 import FunctionalTesting\n from plone.testing.z2 import login\n from zope.component.hooks import setSite\n@@ -40,7 +41,7 @@ def setUpPloneSite(self, portal):\n             # run upgrades\n             self['portal'] = portal = app.test\n             setSite(portal)\n-            if get_distribution('Products.CMFPlone').version >= '5.2':\n+            if plone_version >= '5.2':\n                 # for 5.2 we need tools as utilities\n                 loadMigrationProfile(\n                     portal.portal_setup,\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex a693e22c..e8fcd1b2 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -1,8 +1,6 @@\n # -*- coding: utf-8 -*-\n \n-from plone.app.upgrade.v52.testing import REAL_UPGRADE_FUNCTIONAL\n from plone.testing.z2 import Browser\n-from pkg_resources import get_distribution\n \n import unittest\n \n"

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T15:00:12+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/03febe6045ea842a7df6aa3037d8ac832c984d3a

getting closer to style guide. taking account of used version of p.a.registry

Files changed:
M plone/app/upgrade/__init__.py
M plone/app/upgrade/v42/final.py
M plone/app/upgrade/v42/profiles/to_422/registry.xml
M plone/app/upgrade/v43/profiles/to_alpha2/registry.xml
M plone/app/upgrade/v50/profiles/to_alpha3/registry.xml
M plone/app/upgrade/v52/alphas.py

b'diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex e6dbed01..beb03f6d 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -8,10 +8,11 @@\n \n \n try:\n-    from Products.ResourceRegistries import JSRegistry\n-    IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED = True\n-except ImportError:\n+    pkg_resources.get_distribution(\'Products.ResourceRegistries\')\n+except pkg_resources.DistributionNotFound:\n     IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED = False\n+else:\n+    IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED = True\n \n try:\n     from zope.app.cache.interfaces.ram import IRAMCache  # noqa F401\ndiff --git a/plone/app/upgrade/v42/final.py b/plone/app/upgrade/v42/final.py\nindex d7648979..3a0a1d42 100644\n--- a/plone/app/upgrade/v42/final.py\n+++ b/plone/app/upgrade/v42/final.py\n@@ -1,4 +1,5 @@\n # -*- coding: utf-8 -*-\n+from plone.app.upgrade import IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED\n from plone.app.upgrade.utils import loadMigrationProfile\n from Products.CMFCore.utils import getToolByName\n \n@@ -34,7 +35,8 @@ def to421(context):\n def to422(context):\n     """4.2.1 -> 4.2.2\n     """\n-    loadMigrationProfile(context, \'profile-plone.app.upgrade.v42:to422\')\n+    if IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED:\n+        loadMigrationProfile(context, \'profile-plone.app.upgrade.v42:to422\')\n \n \n def to423(context):\ndiff --git a/plone/app/upgrade/v42/profiles/to_422/registry.xml b/plone/app/upgrade/v42/profiles/to_422/registry.xml\nindex 504d99f0..c61bf1a9 100644\n--- a/plone/app/upgrade/v42/profiles/to_422/registry.xml\n+++ b/plone/app/upgrade/v42/profiles/to_422/registry.xml\n@@ -1,8 +1,7 @@\n <registry>\n     <record\n         interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n-        field="resourceBundlesForThemes"\n-        condition="installed Products.ResourceRegistries">\n+        field="resourceBundlesForThemes">\n         <value purge="false">\n             <element key="(default)">\n                 <element>jquery</element>\ndiff --git a/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml b/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\nindex 07b13715..551007f0 100644\n--- a/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\n+++ b/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\n@@ -1,15 +1,4 @@\n <registry>\n-    <record\n-        interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n-        field="resourceBundlesForThemes"\n-        condition="installed Products.ResourceRegistries">\n-        <value purge="false">\n-            <element key="(default)">\n-                <element>jquery</element>\n-                <element>default</element>\n-            </element>\n-        </value>\n-    </record>\n     <record name="plone.app.layout.globals.bodyClass.depth">\n         <field type="plone.registry.field.Int">\n             <title>Body class path depth</title>\ndiff --git a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\nindex 4d1c1714..c16c6ae8 100644\n--- a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\n+++ b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\n@@ -14,17 +14,6 @@\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"\n            prefix="plone" />\n-  <record\n-      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n-      field="resourceBundlesForThemes"\n-      condition="installed Products.ResourceRegistries">\n-    <value purge="false">\n-      <element key="(default)">\n-        <element>jquery</element>\n-        <element>default</element>\n-      </element>\n-    </value>\n-  </record>\n   <record name="Products.CMFPlone.i18nl10n.override_dateformat.Enabled">\n     <field type="plone.registry.field.Bool">\n       <title>Enabled</title>\ndiff --git a/plone/app/upgrade/v52/alphas.py b/plone/app/upgrade/v52/alphas.py\nindex 2f6c710a..fc6baff5 100644\n--- a/plone/app/upgrade/v52/alphas.py\n+++ b/plone/app/upgrade/v52/alphas.py\n@@ -33,23 +33,6 @@ def migrate_gopipindex(context):\n     manage_addGopipIndex(catalog, \'getObjPositionInParent\')\n \n \n-def remove_legacy_resource_registries(context):\n-    """Remove portal_css and portal_javascripts."""\n-    portal_url = getToolByName(context, \'portal_url\')\n-    portal = portal_url.getPortalObject()\n-\n-    tools_to_remove = [\n-        \'portal_css\',\n-        \'portal_javascripts\',\n-    ]\n-\n-    # remove obsolete tools\n-    tools = [t for t in tools_to_remove if t in portal]\n-    portal.manage_delObjects(tools)\n-\n-    cleanUpToolRegistry(context)\n-\n-\n def rebuild_memberdata(context):\n     # MemberData has changed radically, see plone/Products.PlonePAS#24\n     # This results in a bug in upgraded sites: plone/Products.CMFPlone#2722\n@@ -101,8 +84,8 @@ def fix_core_behaviors_in_ftis(context):\n             fti.behaviors = tuple(behaviors)\n \n \n-def remove_portal_tools(context):\n-    """Remove some portal tools."""\n+def remove_legacy_resource_registries(context):\n+    """Remove portal_css and portal_javascripts."""\n     portal_url = getToolByName(context, \'portal_url\')\n     portal = portal_url.getPortalObject()\n \n@@ -125,7 +108,6 @@ def to52alpha1(context):\n \n     cleanup_resources()\n     migrate_gopipindex(context)\n-    remove_legacy_resource_registries(context)\n     rebuild_memberdata(context)\n     fix_core_behaviors_in_ftis(context)\n-    remove_portal_tools(context)\n+    remove_legacy_resource_registries(context)\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T15:16:08+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/8d9bccd8dc4e55d0d36a51d2a74c9b7727be9c8a

skippping some tests for Plone 4

Files changed:
M plone/app/upgrade/v50/testing.py
M plone/app/upgrade/v50/tests.py

b'diff --git a/plone/app/upgrade/v50/testing.py b/plone/app/upgrade/v50/testing.py\nindex f95b84c9..63b922da 100644\n--- a/plone/app/upgrade/v50/testing.py\n+++ b/plone/app/upgrade/v50/testing.py\n@@ -35,8 +35,8 @@ def setUpPloneSite(self, portal):\n             path = os.path.join(os.path.abspath(\n                 os.path.dirname(__file__)), \'data\', \'test-full.zexp\')\n             app._importObjectFromFile(path, verify=0)\n-        except Exception as e:\n-            logger.exception(\'Failed to import ZEXP from old site. ({})\'.format(e))\n+        except Exception:\n+            logger.exception(\'Failed to import ZEXP from old site.\')\n         else:\n             # run upgrades\n             self[\'portal\'] = portal = app.test\ndiff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py\nindex 023206a1..856d4361 100644\n--- a/plone/app/upgrade/v50/tests.py\n+++ b/plone/app/upgrade/v50/tests.py\n@@ -177,14 +177,13 @@ def test_fix_double_smaxage(self):\n         self.assertEqual(registry[maxage], 999)\n \n \n+@unittest.skipIf(\n+    not six.PY2 or not PLONE_5,\n+    "not Plone 5.0, 5.1 or 5.2 / Python 2")\n def test_suite():\n-    # Skip these tests if not Plone 5.0 or 5.1\n     from unittest import TestSuite, makeSuite\n-    if not six.PY2 or not PLONE_5:\n-        return TestSuite()\n-    else:\n-        suite = TestSuite()\n-        suite.addTest(makeSuite(PASUpgradeTest))\n-        suite.addTest(makeSuite(TestFunctionalMigrations))\n-        suite.addTest(makeSuite(VariousTest))\n-        return suite\n+    suite = TestSuite()\n+    suite.addTest(makeSuite(PASUpgradeTest))\n+    suite.addTest(makeSuite(TestFunctionalMigrations))\n+    suite.addTest(makeSuite(VariousTest))\n+    return suite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T16:22:13+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/149808a5452dbde67434484bc7da26ca023c5d85

Kupu-Test only with existing legacy resource registries.

Files changed:
M plone/app/upgrade/v43/tests.py
M plone/app/upgrade/v52/alphas.py

b"diff --git a/plone/app/upgrade/v43/tests.py b/plone/app/upgrade/v43/tests.py\nindex 7f029fc1..83d8a121 100644\n--- a/plone/app/upgrade/v43/tests.py\n+++ b/plone/app/upgrade/v43/tests.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.tests.base import MigrationTest\n from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.app.upgrade.utils import plone_version\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import INonInstallable\n from Products.CMFPlone.utils import getFSVersionTuple\n@@ -174,7 +175,7 @@ def testAddDefaultPlonePasswordPolicy(self):\n         # now it has been added...\n         self.assertTrue('password_policy' in portal.acl_users.objectIds())\n \n-\n+@unittest.skipIf(plone_version >= '5.2', 'Plone >=5.2')\n class TestFakeKupuMigration(MigrationTest):\n \n     def afterSetUp(self):\ndiff --git a/plone/app/upgrade/v52/alphas.py b/plone/app/upgrade/v52/alphas.py\nindex fc6baff5..8f59af10 100644\n--- a/plone/app/upgrade/v52/alphas.py\n+++ b/plone/app/upgrade/v52/alphas.py\n@@ -96,7 +96,8 @@ def remove_legacy_resource_registries(context):\n \n     # remove obsolete tools\n     tools = [t for t in tools_to_remove if t in portal]\n-    portal.manage_delObjects(tools)\n+    if tools:\n+        portal.manage_delObjects(tools)\n \n     cleanUpToolRegistry(context)\n \n@@ -104,6 +105,7 @@ def remove_legacy_resource_registries(context):\n def to52alpha1(context):\n     loadMigrationProfile(context, 'profile-plone.app.upgrade.v52:to52alpha1')\n     portal = getToolByName(context, 'portal_url').getPortalObject()\n+\n     cleanUpSkinsTool(portal)\n \n     cleanup_resources()\n"

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-09T18:50:22+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/9d556cf6d1e7464bb7097feb185cefd5b87cbdc6

Skip only test not entire test suite

Files changed:
M plone/app/upgrade/v50/tests.py

b'diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py\nindex 856d4361..c86d72b0 100644\n--- a/plone/app/upgrade/v50/tests.py\n+++ b/plone/app/upgrade/v50/tests.py\n@@ -90,7 +90,9 @@ def test_migrate_members_default_layout(self):\n         self.assertIsNone(members.get(\'index_html\', None))\n         self.assertEqual(members.getLayout(), \'@@member-search\')\n \n-\n+@unittest.skipIf(\n+    not six.PY2 or not PLONE_5,\n+    "not Plone 5.0, 5.1 or 5.2 / Python 2")\n class TestFunctionalMigrations(unittest.TestCase):\n     """Run an upgrade from a real Plone 4.0 ZEXP dump.\n \n@@ -177,9 +179,6 @@ def test_fix_double_smaxage(self):\n         self.assertEqual(registry[maxage], 999)\n \n \n-@unittest.skipIf(\n-    not six.PY2 or not PLONE_5,\n-    "not Plone 5.0, 5.1 or 5.2 / Python 2")\n def test_suite():\n     from unittest import TestSuite, makeSuite\n     suite = TestSuite()\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-10T14:29:44+01:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.app.upgrade/commit/95675931922fc17b695da25508cb27e5220865da

less test skipping on versions. clean up

Files changed:
M plone/app/upgrade/v50/tests.py
M plone/app/upgrade/v52/alphas.py
M plone/app/upgrade/v52/betas.py
M plone/app/upgrade/v52/tests.py

b'diff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py\nindex c86d72b0..9166ad89 100644\n--- a/plone/app/upgrade/v50/tests.py\n+++ b/plone/app/upgrade/v50/tests.py\n@@ -90,6 +90,7 @@ def test_migrate_members_default_layout(self):\n         self.assertIsNone(members.get(\'index_html\', None))\n         self.assertEqual(members.getLayout(), \'@@member-search\')\n \n+\n @unittest.skipIf(\n     not six.PY2 or not PLONE_5,\n     "not Plone 5.0, 5.1 or 5.2 / Python 2")\n@@ -183,6 +184,9 @@ def test_suite():\n     from unittest import TestSuite, makeSuite\n     suite = TestSuite()\n     suite.addTest(makeSuite(PASUpgradeTest))\n-    suite.addTest(makeSuite(TestFunctionalMigrations))\n     suite.addTest(makeSuite(VariousTest))\n+    if not six.PY2 or not PLONE_5:\n+        return TestSuite()\n+    else:\n+        suite.addTest(makeSuite(TestFunctionalMigrations))\n     return suite\ndiff --git a/plone/app/upgrade/v52/alphas.py b/plone/app/upgrade/v52/alphas.py\nindex 8f59af10..a1cb8550 100644\n--- a/plone/app/upgrade/v52/alphas.py\n+++ b/plone/app/upgrade/v52/alphas.py\n@@ -3,7 +3,6 @@\n from plone.app.upgrade.utils import cleanUpSkinsTool\n from plone.app.upgrade.utils import loadMigrationProfile\n from plone.dexterity.interfaces import IDexterityFTI\n-from plone.app.upgrade.v40.alphas import cleanUpToolRegistry\n from plone.folder.nogopip import manage_addGopipIndex\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n@@ -84,24 +83,6 @@ def fix_core_behaviors_in_ftis(context):\n             fti.behaviors = tuple(behaviors)\n \n \n-def remove_legacy_resource_registries(context):\n-    """Remove portal_css and portal_javascripts."""\n-    portal_url = getToolByName(context, \'portal_url\')\n-    portal = portal_url.getPortalObject()\n-\n-    tools_to_remove = [\n-        \'portal_css\',\n-        \'portal_javascripts\',\n-    ]\n-\n-    # remove obsolete tools\n-    tools = [t for t in tools_to_remove if t in portal]\n-    if tools:\n-        portal.manage_delObjects(tools)\n-\n-    cleanUpToolRegistry(context)\n-\n-\n def to52alpha1(context):\n     loadMigrationProfile(context, \'profile-plone.app.upgrade.v52:to52alpha1\')\n     portal = getToolByName(context, \'portal_url\').getPortalObject()\n@@ -112,4 +93,3 @@ def to52alpha1(context):\n     migrate_gopipindex(context)\n     rebuild_memberdata(context)\n     fix_core_behaviors_in_ftis(context)\n-    remove_legacy_resource_registries(context)\ndiff --git a/plone/app/upgrade/v52/betas.py b/plone/app/upgrade/v52/betas.py\nindex 8e7a1b01..5fdad80f 100644\n--- a/plone/app/upgrade/v52/betas.py\n+++ b/plone/app/upgrade/v52/betas.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from Products.CMFCore.utils import getToolByName\n from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.app.upgrade.v40.alphas import cleanUpToolRegistry\n \n import logging\n \n@@ -25,6 +26,25 @@ def add_exclude_from_nav_index(context):\n         catalog.manage_reindexIndex(ids=indexables)\n \n \n+def remove_legacy_resource_registries(context):\n+    """Remove portal_css and portal_javascripts."""\n+    portal_url = getToolByName(context, \'portal_url\')\n+    portal = portal_url.getPortalObject()\n+\n+    tools_to_remove = [\n+        \'portal_css\',\n+        \'portal_javascripts\',\n+    ]\n+\n+    # remove obsolete tools\n+    tools = [t for t in tools_to_remove if t in portal]\n+    if tools:\n+        portal.manage_delObjects(tools)\n+\n+    cleanUpToolRegistry(context)\n+\n+\n def to52beta1(context):\n     loadMigrationProfile(context, \'profile-plone.app.upgrade.v52:to52beta1\')\n     add_exclude_from_nav_index(context)\n+    remove_legacy_resource_registries(context)\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex e8fcd1b2..313bed46 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -1,10 +1,14 @@\n # -*- coding: utf-8 -*-\n \n+from plone.app.upgrade.utils import plone_version\n from plone.testing.z2 import Browser\n \n import unittest\n \n \n def test_suite():\n+    # Skip these tests on Plone 4\n+    if plone_version <= \'5.0\':\n+        return unittest.TestSuite()\n     suite = unittest.TestSuite()\n     return suite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-10T16:37:42+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/8dd4e29c4ac0b60e32a85e368e4a48328fbf874a

Merge branch 'master' into remove-legacy-resource-registries-2

Files changed:
A news/195.bugfix
M plone/app/upgrade/v52/betas.py

b'diff --git a/news/195.bugfix b/news/195.bugfix\nnew file mode 100644\nindex 00000000..597f7f69\n--- /dev/null\n+++ b/news/195.bugfix\n@@ -0,0 +1 @@\n+Remove interface indexes from relation catalog [jmevissen]\n\\ No newline at end of file\ndiff --git a/plone/app/upgrade/v52/betas.py b/plone/app/upgrade/v52/betas.py\nindex 5fdad80f..7604cba4 100644\n--- a/plone/app/upgrade/v52/betas.py\n+++ b/plone/app/upgrade/v52/betas.py\n@@ -2,6 +2,9 @@\n from Products.CMFCore.utils import getToolByName\n from plone.app.upgrade.utils import loadMigrationProfile\n from plone.app.upgrade.v40.alphas import cleanUpToolRegistry\n+from zc.relation.interfaces import ICatalog\n+from zope import component\n+from zope.intid.interfaces import IntIdMissingError\n \n import logging\n \n@@ -42,9 +45,29 @@ def remove_legacy_resource_registries(context):\n         portal.manage_delObjects(tools)\n \n     cleanUpToolRegistry(context)\n+    \n+    \n+def remove_interface_indexes_from_relations_catalog():\n+    """ remove unused interface indexes from relations catalog """\n+    catalog = component.queryUtility(ICatalog)\n+    indexes_to_remove = [\n+        \'from_interfaces_flattened\',\n+        \'to_interfaces_flattened\'\n+    ]\n+    for index_to_remove in indexes_to_remove:\n+        if index_to_remove in catalog._name_TO_mapping:\n+            catalog.removeValueIndex(index_to_remove)\n+\n+    for rel in catalog:\n+        catalog.unindex(rel)\n+        try:\n+            catalog.index(rel)\n+        except IntIdMissingError:\n+            logger.warn(\'Broken relation removed.\')\n \n \n def to52beta1(context):\n     loadMigrationProfile(context, \'profile-plone.app.upgrade.v52:to52beta1\')\n     add_exclude_from_nav_index(context)\n     remove_legacy_resource_registries(context)\n+    remove_interface_indexes_from_relations_catalog()\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-02-10T16:39:33+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/95b9e3fb085cbe461da92ca5e76bd6eb8ecd2d07

Merge pull request #183 from plone/remove-legacy-resource-registries-2

Products.ResourceRegistries made conditional

Files changed:
A news/183.bugfix
M plone/app/upgrade/__init__.py
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/v40/alphas.py
M plone/app/upgrade/v42/final.py
M plone/app/upgrade/v42/profiles/to_422/registry.xml
M plone/app/upgrade/v43/profiles/to_alpha2/registry.xml
M plone/app/upgrade/v43/tests.py
M plone/app/upgrade/v50/profiles/to_alpha3/registry.xml
M plone/app/upgrade/v50/testing.py
M plone/app/upgrade/v50/tests.py
M plone/app/upgrade/v51/profiles/to_alpha1/registry.xml
M plone/app/upgrade/v52/alphas.py
M plone/app/upgrade/v52/betas.py
M plone/app/upgrade/v52/profiles/to_beta1/registry.xml
M plone/app/upgrade/v52/tests.py

b'diff --git a/news/183.bugfix b/news/183.bugfix\nnew file mode 100644\nindex 00000000..3455d499\n--- /dev/null\n+++ b/news/183.bugfix\n@@ -0,0 +1,2 @@\n+Tolerate lack of legacy resource registry\n+[ksuess]\ndiff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex 1e11d673..beb03f6d 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -7,6 +7,13 @@\n import sys\n \n \n+try:\n+    pkg_resources.get_distribution(\'Products.ResourceRegistries\')\n+except pkg_resources.DistributionNotFound:\n+    IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED = False\n+else:\n+    IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED = True\n+\n try:\n     from zope.app.cache.interfaces.ram import IRAMCache  # noqa F401\n except ImportError:\ndiff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py\nindex 322380fc..f773d8eb 100644\n--- a/plone/app/upgrade/tests/base.py\n+++ b/plone/app/upgrade/tests/base.py\n@@ -16,6 +16,7 @@\n import transaction\n import warnings\n \n+from plone.app.upgrade import IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED\n \n #\n # Base TestCase for upgrades\n@@ -67,16 +68,18 @@ def removeActionFromTool(\n             tool._delOb(action_id)\n \n     def addResourceToJSTool(self, resource_name):\n-        # Registers a resource with the javascripts tool\n-        tool = getToolByName(self.portal, \'portal_javascripts\')\n-        if resource_name not in tool.getResourceIds():\n-            tool.registerScript(resource_name)\n+        if IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED:\n+            # Registers a resource with the javascripts tool\n+            tool = getToolByName(self.portal, \'portal_javascripts\')\n+            if resource_name not in tool.getResourceIds():\n+                tool.registerScript(resource_name)\n \n     def addResourceToCSSTool(self, resource_name):\n-        # Registers a resource with the css tool\n-        tool = getToolByName(self.portal, \'portal_css\')\n-        if resource_name not in tool.getResourceIds():\n-            tool.registerStylesheet(resource_name)\n+        if IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED:\n+            # Registers a resource with the css tool\n+            tool = getToolByName(self.portal, \'portal_css\')\n+            if resource_name not in tool.getResourceIds():\n+                tool.registerStylesheet(resource_name)\n \n     def removeSiteProperty(self, property_id):\n         # Removes a site property from portal_properties\ndiff --git a/plone/app/upgrade/v40/alphas.py b/plone/app/upgrade/v40/alphas.py\nindex c83880e3..9b07bf8b 100644\n--- a/plone/app/upgrade/v40/alphas.py\n+++ b/plone/app/upgrade/v40/alphas.py\n@@ -16,7 +16,6 @@\n from Products.CMFCore.Expression import Expression\n from Products.CMFCore.interfaces import ICachingPolicyManager\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.setuphandlers import addCacheForResourceRegistry\n from Products.CMFPlone.setuphandlers import addCacheHandlers\n from Products.MailHost.interfaces import IMailHost\n from Products.MailHost.MailHost import MailHost\n@@ -352,7 +351,12 @@ def removeBrokenCacheFu(context):\n         transaction.savepoint(optimistic=True)\n         manage_addCachingPolicyManager(portal)\n         addCacheHandlers(portal)\n-        addCacheForResourceRegistry(portal)\n+        try:\n+            from Products.CMFPlone.setuphandlers import addCacheForResourceRegistry\n+            addCacheForResourceRegistry(portal)\n+        except:\n+            # legacy resource registries replaced by new type\n+            pass\n         logger.info(\'Removed CacheSetup tools.\')\n \n \n@@ -381,7 +385,8 @@ def cleanUpToolRegistry(context):\n     required = toolset._required.copy()\n     existing = portal.keys()\n     changed = False\n-    for name, info in required.items():\n+    items = list(required.items())\n+    for name, info in items:\n         if name not in existing:\n             del required[name]\n             changed = True\ndiff --git a/plone/app/upgrade/v42/final.py b/plone/app/upgrade/v42/final.py\nindex d7648979..3a0a1d42 100644\n--- a/plone/app/upgrade/v42/final.py\n+++ b/plone/app/upgrade/v42/final.py\n@@ -1,4 +1,5 @@\n # -*- coding: utf-8 -*-\n+from plone.app.upgrade import IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED\n from plone.app.upgrade.utils import loadMigrationProfile\n from Products.CMFCore.utils import getToolByName\n \n@@ -34,7 +35,8 @@ def to421(context):\n def to422(context):\n     """4.2.1 -> 4.2.2\n     """\n-    loadMigrationProfile(context, \'profile-plone.app.upgrade.v42:to422\')\n+    if IS_PRODUCT_RESOURCE_REGISTRIES_INSTALLED:\n+        loadMigrationProfile(context, \'profile-plone.app.upgrade.v42:to422\')\n \n \n def to423(context):\ndiff --git a/plone/app/upgrade/v42/profiles/to_422/registry.xml b/plone/app/upgrade/v42/profiles/to_422/registry.xml\nindex 8565170c..c61bf1a9 100644\n--- a/plone/app/upgrade/v42/profiles/to_422/registry.xml\n+++ b/plone/app/upgrade/v42/profiles/to_422/registry.xml\n@@ -1,5 +1,7 @@\n <registry>\n-    <record interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings" field="resourceBundlesForThemes">\n+    <record\n+        interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n+        field="resourceBundlesForThemes">\n         <value purge="false">\n             <element key="(default)">\n                 <element>jquery</element>\ndiff --git a/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml b/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\nindex c69a06b5..551007f0 100644\n--- a/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\n+++ b/plone/app/upgrade/v43/profiles/to_alpha2/registry.xml\n@@ -1,12 +1,4 @@\n <registry>\n-    <record interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings" field="resourceBundlesForThemes">\n-        <value purge="false">\n-            <element key="(default)">\n-                <element>jquery</element>\n-                <element>default</element>\n-            </element>\n-        </value>\n-    </record>\n     <record name="plone.app.layout.globals.bodyClass.depth">\n         <field type="plone.registry.field.Int">\n             <title>Body class path depth</title>\ndiff --git a/plone/app/upgrade/v43/tests.py b/plone/app/upgrade/v43/tests.py\nindex 7f029fc1..83d8a121 100644\n--- a/plone/app/upgrade/v43/tests.py\n+++ b/plone/app/upgrade/v43/tests.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.tests.base import MigrationTest\n from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.app.upgrade.utils import plone_version\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import INonInstallable\n from Products.CMFPlone.utils import getFSVersionTuple\n@@ -174,7 +175,7 @@ def testAddDefaultPlonePasswordPolicy(self):\n         # now it has been added...\n         self.assertTrue(\'password_policy\' in portal.acl_users.objectIds())\n \n-\n+@unittest.skipIf(plone_version >= \'5.2\', \'Plone >=5.2\')\n class TestFakeKupuMigration(MigrationTest):\n \n     def afterSetUp(self):\ndiff --git a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\nindex 4f22b14c..c16c6ae8 100644\n--- a/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\n+++ b/plone/app/upgrade/v50/profiles/to_alpha3/registry.xml\n@@ -14,14 +14,6 @@\n            prefix="plone" />\n   <records interface="Products.CMFPlone.interfaces.IDateAndTimeSchema"\n            prefix="plone" />\n-  <record interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings" field="resourceBundlesForThemes">\n-    <value purge="false">\n-      <element key="(default)">\n-        <element>jquery</element>\n-        <element>default</element>\n-      </element>\n-    </value>\n-  </record>\n   <record name="Products.CMFPlone.i18nl10n.override_dateformat.Enabled">\n     <field type="plone.registry.field.Bool">\n       <title>Enabled</title>\ndiff --git a/plone/app/upgrade/v50/testing.py b/plone/app/upgrade/v50/testing.py\nindex bef21840..63b922da 100644\n--- a/plone/app/upgrade/v50/testing.py\n+++ b/plone/app/upgrade/v50/testing.py\n@@ -2,6 +2,7 @@\n from plone.app.testing import PLONE_FIXTURE\n from plone.app.testing import PloneSandboxLayer\n from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.app.upgrade.utils import plone_version\n from plone.testing.z2 import FunctionalTesting\n from plone.testing.z2 import login\n from zope.component.hooks import setSite\n@@ -29,26 +30,23 @@ def setUpZope(self, app, configurationContext):\n     def setUpPloneSite(self, portal):\n         app = portal.aq_parent\n         login(app[\'acl_users\'], \'admin\')\n-\n         # import old ZEXP\n         try:\n             path = os.path.join(os.path.abspath(\n                 os.path.dirname(__file__)), \'data\', \'test-full.zexp\')\n             app._importObjectFromFile(path, verify=0)\n-        except BaseException:\n+        except Exception:\n             logger.exception(\'Failed to import ZEXP from old site.\')\n         else:\n             # run upgrades\n             self[\'portal\'] = portal = app.test\n             setSite(portal)\n-            try:\n+            if plone_version >= \'5.2\':\n                 # for 5.2 we need tools as utilities\n                 loadMigrationProfile(\n                     portal.portal_setup,\n                     \'profile-plone.app.upgrade.v52:to52alpha1\',\n                     steps=[\'componentregistry\'])\n-            except KeyError:\n-                pass\n             portal.portal_migration.upgrade(swallow_errors=False)\n             setSite(None)\n \ndiff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py\nindex 913929a8..9166ad89 100644\n--- a/plone/app/upgrade/v50/tests.py\n+++ b/plone/app/upgrade/v50/tests.py\n@@ -13,7 +13,6 @@\n import six\n import unittest\n \n-\n try:\n     from Products.CMFPlone.factory import _IMREALLYPLONE5\n     _IMREALLYPLONE5  # pyflakes\n@@ -92,6 +91,9 @@ def test_migrate_members_default_layout(self):\n         self.assertEqual(members.getLayout(), \'@@member-search\')\n \n \n+@unittest.skipIf(\n+    not six.PY2 or not PLONE_5,\n+    "not Plone 5.0, 5.1 or 5.2 / Python 2")\n class TestFunctionalMigrations(unittest.TestCase):\n     """Run an upgrade from a real Plone 4.0 ZEXP dump.\n \n@@ -179,13 +181,12 @@ def test_fix_double_smaxage(self):\n \n \n def test_suite():\n-    # Skip these tests on Plone 4\n     from unittest import TestSuite, makeSuite\n+    suite = TestSuite()\n+    suite.addTest(makeSuite(PASUpgradeTest))\n+    suite.addTest(makeSuite(VariousTest))\n     if not six.PY2 or not PLONE_5:\n         return TestSuite()\n     else:\n-        suite = TestSuite()\n-        suite.addTest(makeSuite(PASUpgradeTest))\n         suite.addTest(makeSuite(TestFunctionalMigrations))\n-        suite.addTest(makeSuite(VariousTest))\n-        return suite\n+    return suite\ndiff --git a/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml\nindex ba0e3e3e..5071ab04 100644\n--- a/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml\n+++ b/plone/app/upgrade/v51/profiles/to_alpha1/registry.xml\n@@ -2,7 +2,8 @@\n <registry>\n   <records\n       interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n-      prefix="plone">\n+      prefix="plone"\n+      condition="installed Products.ResourceRegistries">\n     <value\n         key="lessvariables"\n         purge="False">\ndiff --git a/plone/app/upgrade/v52/alphas.py b/plone/app/upgrade/v52/alphas.py\nindex 3b3938a0..a1cb8550 100644\n--- a/plone/app/upgrade/v52/alphas.py\n+++ b/plone/app/upgrade/v52/alphas.py\n@@ -86,6 +86,7 @@ def fix_core_behaviors_in_ftis(context):\n def to52alpha1(context):\n     loadMigrationProfile(context, \'profile-plone.app.upgrade.v52:to52alpha1\')\n     portal = getToolByName(context, \'portal_url\').getPortalObject()\n+\n     cleanUpSkinsTool(portal)\n \n     cleanup_resources()\ndiff --git a/plone/app/upgrade/v52/betas.py b/plone/app/upgrade/v52/betas.py\nindex 10897d85..7604cba4 100644\n--- a/plone/app/upgrade/v52/betas.py\n+++ b/plone/app/upgrade/v52/betas.py\n@@ -1,11 +1,11 @@\n # -*- coding: utf-8 -*-\n from Products.CMFCore.utils import getToolByName\n from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.app.upgrade.v40.alphas import cleanUpToolRegistry\n from zc.relation.interfaces import ICatalog\n from zope import component\n from zope.intid.interfaces import IntIdMissingError\n \n-\n import logging\n \n \n@@ -29,6 +29,24 @@ def add_exclude_from_nav_index(context):\n         catalog.manage_reindexIndex(ids=indexables)\n \n \n+def remove_legacy_resource_registries(context):\n+    """Remove portal_css and portal_javascripts."""\n+    portal_url = getToolByName(context, \'portal_url\')\n+    portal = portal_url.getPortalObject()\n+\n+    tools_to_remove = [\n+        \'portal_css\',\n+        \'portal_javascripts\',\n+    ]\n+\n+    # remove obsolete tools\n+    tools = [t for t in tools_to_remove if t in portal]\n+    if tools:\n+        portal.manage_delObjects(tools)\n+\n+    cleanUpToolRegistry(context)\n+    \n+    \n def remove_interface_indexes_from_relations_catalog():\n     """ remove unused interface indexes from relations catalog """\n     catalog = component.queryUtility(ICatalog)\n@@ -51,4 +69,5 @@ def remove_interface_indexes_from_relations_catalog():\n def to52beta1(context):\n     loadMigrationProfile(context, \'profile-plone.app.upgrade.v52:to52beta1\')\n     add_exclude_from_nav_index(context)\n+    remove_legacy_resource_registries(context)\n     remove_interface_indexes_from_relations_catalog()\ndiff --git a/plone/app/upgrade/v52/profiles/to_beta1/registry.xml b/plone/app/upgrade/v52/profiles/to_beta1/registry.xml\nindex 707e45e4..b898a9c6 100644\n--- a/plone/app/upgrade/v52/profiles/to_beta1/registry.xml\n+++ b/plone/app/upgrade/v52/profiles/to_beta1/registry.xml\n@@ -47,4 +47,8 @@\n     <value key="last_compilation">2018-10-01 23:00:00</value>\n   </records>\n \n+  <records\n+      interface="Products.ResourceRegistries.interfaces.settings.IResourceRegistriesSettings"\n+      prefix="plone"\n+      remove="True"/>\n </registry>\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex 71ef2370..313bed46 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -1,20 +1,14 @@\n # -*- coding: utf-8 -*-\n-import unittest\n \n+from plone.app.upgrade.utils import plone_version\n+from plone.testing.z2 import Browser\n \n-try:\n-    from Products.CMFPlone.factory import _IMREALLYPLONE5\n-    _IMREALLYPLONE5  # pyflakes\n-except ImportError:\n-    PLONE_5 = False\n-else:\n-    PLONE_5 = True\n+import unittest\n \n \n def test_suite():\n     # Skip these tests on Plone 4\n-    if not PLONE_5:\n+    if plone_version <= \'5.0\':\n         return unittest.TestSuite()\n-\n     suite = unittest.TestSuite()\n     return suite\n'

