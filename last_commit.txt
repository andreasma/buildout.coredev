Repository: plone.app.event


Branch: refs/heads/master
Date: 2019-03-14T15:45:32+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.event/commit/70b0fdb5fdc52af5633c27a2dc85940c50e1ac18

fix SearchableText indexer for Python 3

Files changed:
A news/302.bugfix
A plone/app/event/tests/test_search.py
M plone/app/event/dx/behaviors.py
M plone/app/event/tests/base_setup.py

b"diff --git a/news/302.bugfix b/news/302.bugfix\nnew file mode 100644\nindex 00000000..09836fd9\n--- /dev/null\n+++ b/news/302.bugfix\n@@ -0,0 +1,2 @@\n+fix SearchableText indexer for Python 3\n+[petschki]\ndiff --git a/plone/app/event/dx/behaviors.py b/plone/app/event/dx/behaviors.py\nindex 26055374..c361c6df 100644\n--- a/plone/app/event/dx/behaviors.py\n+++ b/plone/app/event/dx/behaviors.py\n@@ -382,16 +382,16 @@ def searchable_text_indexer(obj):\n         raise AttributeError\n     transforms = getToolByName(obj, 'portal_transforms')\n     if six.PY2:\n-        textvalue = textvalue.encode('utf8')\n+        textvalue = textvalue.encode('utf8', 'replace')\n     body_plain = transforms.convertTo(\n         'text/plain',\n         textvalue,\n         mimetype='text/html',\n     ).getData().strip()\n-    if isinstance(body_plain, str):\n-        body_plain = body_plain.decode('utf-8')\n-    text += body_plain\n-    return text.strip().encode('utf-8')\n+    text += safe_unicode(body_plain)\n+    if six.PY2:\n+        text = text.strip().encode('utf-8')\n+    return text\n \n \n # Object adapters\ndiff --git a/plone/app/event/tests/base_setup.py b/plone/app/event/tests/base_setup.py\nindex 7f7e9dbc..5958bcb4 100644\n--- a/plone/app/event/tests/base_setup.py\n+++ b/plone/app/event/tests/base_setup.py\n@@ -1,13 +1,14 @@\n # -*- coding: utf-8 -*-\n+from Products.CMFCore.utils import getToolByName\n from datetime import datetime\n from datetime import timedelta\n from plone.app.event.dx import behaviors\n from plone.app.event.testing import set_browserlayer\n from plone.app.event.testing import set_timezone\n-from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import setRoles\n+from plone.app.textfield.value import RichTextValue\n from plone.dexterity.utils import createContentInContainer\n-from Products.CMFCore.utils import getToolByName\n \n import pytz\n import unittest\n@@ -121,6 +122,11 @@ def setUp(self):\n             container=self.portal,\n             id='future',\n             title=u'Future Event',\n+            text=RichTextValue(\n+                u'\xc3\x9cberraschung! Du kannst nach mir suchen',\n+                'text/plain',\n+                'text/html',\n+            ),\n             start=future,\n             end=future + duration,\n             location=u'Graz')\ndiff --git a/plone/app/event/tests/test_search.py b/plone/app/event/tests/test_search.py\nnew file mode 100644\nindex 00000000..90fe3c03\n--- /dev/null\n+++ b/plone/app/event/tests/test_search.py\n@@ -0,0 +1,15 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.event.testing import PAEventDX_FUNCTIONAL_TESTING\n+from plone.app.event.tests.base_setup import patched_now as PN\n+from plone.app.event.tests.base_setup import AbstractSampleDataEvents\n+\n+import mock\n+\n+\n+class FunctionalTestSearchEvent(AbstractSampleDataEvents):\n+    layer = PAEventDX_FUNCTIONAL_TESTING\n+\n+    @mock.patch('plone.app.event.base.localized_now', new=PN)\n+    def test_searchabletext(self):\n+        results = self.portal.portal_catalog(SearchableText=u'\xc3\x9cberraschung')\n+        self.assertTrue(len(results) == 1)\n"

Repository: plone.app.event


Branch: refs/heads/master
Date: 2019-03-15T15:03:55+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.event/commit/5c8299dd70cceff5d4f79b85a6a6f1bf78e24d2d

Merge pull request #303 from plone/petschki-fix-searchabletext

fix SearchableText indexer for Python 3

Files changed:
A news/302.bugfix
A plone/app/event/tests/test_search.py
M plone/app/event/dx/behaviors.py
M plone/app/event/tests/base_setup.py

b"diff --git a/news/302.bugfix b/news/302.bugfix\nnew file mode 100644\nindex 00000000..09836fd9\n--- /dev/null\n+++ b/news/302.bugfix\n@@ -0,0 +1,2 @@\n+fix SearchableText indexer for Python 3\n+[petschki]\ndiff --git a/plone/app/event/dx/behaviors.py b/plone/app/event/dx/behaviors.py\nindex 26055374..c361c6df 100644\n--- a/plone/app/event/dx/behaviors.py\n+++ b/plone/app/event/dx/behaviors.py\n@@ -382,16 +382,16 @@ def searchable_text_indexer(obj):\n         raise AttributeError\n     transforms = getToolByName(obj, 'portal_transforms')\n     if six.PY2:\n-        textvalue = textvalue.encode('utf8')\n+        textvalue = textvalue.encode('utf8', 'replace')\n     body_plain = transforms.convertTo(\n         'text/plain',\n         textvalue,\n         mimetype='text/html',\n     ).getData().strip()\n-    if isinstance(body_plain, str):\n-        body_plain = body_plain.decode('utf-8')\n-    text += body_plain\n-    return text.strip().encode('utf-8')\n+    text += safe_unicode(body_plain)\n+    if six.PY2:\n+        text = text.strip().encode('utf-8')\n+    return text\n \n \n # Object adapters\ndiff --git a/plone/app/event/tests/base_setup.py b/plone/app/event/tests/base_setup.py\nindex 7f7e9dbc..5958bcb4 100644\n--- a/plone/app/event/tests/base_setup.py\n+++ b/plone/app/event/tests/base_setup.py\n@@ -1,13 +1,14 @@\n # -*- coding: utf-8 -*-\n+from Products.CMFCore.utils import getToolByName\n from datetime import datetime\n from datetime import timedelta\n from plone.app.event.dx import behaviors\n from plone.app.event.testing import set_browserlayer\n from plone.app.event.testing import set_timezone\n-from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import setRoles\n+from plone.app.textfield.value import RichTextValue\n from plone.dexterity.utils import createContentInContainer\n-from Products.CMFCore.utils import getToolByName\n \n import pytz\n import unittest\n@@ -121,6 +122,11 @@ def setUp(self):\n             container=self.portal,\n             id='future',\n             title=u'Future Event',\n+            text=RichTextValue(\n+                u'\xc3\x9cberraschung! Du kannst nach mir suchen',\n+                'text/plain',\n+                'text/html',\n+            ),\n             start=future,\n             end=future + duration,\n             location=u'Graz')\ndiff --git a/plone/app/event/tests/test_search.py b/plone/app/event/tests/test_search.py\nnew file mode 100644\nindex 00000000..90fe3c03\n--- /dev/null\n+++ b/plone/app/event/tests/test_search.py\n@@ -0,0 +1,15 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.event.testing import PAEventDX_FUNCTIONAL_TESTING\n+from plone.app.event.tests.base_setup import patched_now as PN\n+from plone.app.event.tests.base_setup import AbstractSampleDataEvents\n+\n+import mock\n+\n+\n+class FunctionalTestSearchEvent(AbstractSampleDataEvents):\n+    layer = PAEventDX_FUNCTIONAL_TESTING\n+\n+    @mock.patch('plone.app.event.base.localized_now', new=PN)\n+    def test_searchabletext(self):\n+        results = self.portal.portal_catalog(SearchableText=u'\xc3\x9cberraschung')\n+        self.assertTrue(len(results) == 1)\n"

