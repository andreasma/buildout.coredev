Repository: plone.app.folder


Branch: refs/heads/1.1.x
Date: 2019-08-13T23:52:28+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.folder/commit/baf70647efe66a6ce3a7fa35e35ddd1bed477830

Implement a simplified traverse and use it in GOPIP.

Files changed:
M CHANGES.rst
M src/plone/app/folder/nogopip.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 1fe419d..6b9e08c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,7 +10,10 @@ New:\n \n Fixes:\n \n-- *add item here*\n+- Fixes slow lookup of documentToKeyMap in GopipIndex.\n+  About 66x speedup.\n+  This may add up to seconds less on large navtree renderings.\n+  [jensens]\n \n \n 1.1.2 (2015-10-27)\ndiff --git a/src/plone/app/folder/nogopip.py b/src/plone/app/folder/nogopip.py\nindex f78dcb2..74ebd0b 100644\n--- a/src/plone/app/folder/nogopip.py\n+++ b/src/plone/app/folder/nogopip.py\n@@ -12,6 +12,24 @@\n logger = getLogger(__name__)\n \n \n+def traverse(base, path):\n+    """simplified fast unrestricted traverse.\n+\n+    base: the root to start from\n+    path: absolute path from app root as string\n+    returns: content at the end or None\n+    """\n+    current = base\n+    for cid in path.split(\'/\'):\n+        if not cid:\n+            continue\n+        try:\n+            current = current[cid]\n+        except KeyError:\n+            return None\n+    return current\n+\n+\n @implementer(IPluggableIndex)\n class StubIndex(SimpleItem):\n     """ stub catalog index doing nothing """\n@@ -74,13 +92,13 @@ def documentToKeyMap(self):\n         items = []\n         containers = {}\n         getpath = self.catalog.paths.get\n-        traverse = getUtility(ISiteRoot).unrestrictedTraverse\n+        root = getUtility(ISiteRoot).getPhysicalRoot()\n         for rid in rs:\n             path = getpath(rid)\n             parent, id = path.rsplit(\'/\', 1)\n             container = containers.get(parent)\n             if container is None:\n-                containers[parent] = container = traverse(parent)\n+                containers[parent] = container = traverse(root, parent)\n             rids[id] = rid              # remember in case of single folder\n             items.append((rid, container, id))  # or else for deferred lookup\n         pos = {}\n'

Repository: plone.app.folder


Branch: refs/heads/1.1.x
Date: 2019-09-03T09:53:53+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.folder/commit/735640d2ff22b392a31cbd29d383a8a3e978285b

Merge pull request #23 from plone/jensens-1.1.x-experimental

Speedup Large Navtree Rendering

Files changed:
M CHANGES.rst
M src/plone/app/folder/nogopip.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 1fe419d..6b9e08c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,7 +10,10 @@ New:\n \n Fixes:\n \n-- *add item here*\n+- Fixes slow lookup of documentToKeyMap in GopipIndex.\n+  About 66x speedup.\n+  This may add up to seconds less on large navtree renderings.\n+  [jensens]\n \n \n 1.1.2 (2015-10-27)\ndiff --git a/src/plone/app/folder/nogopip.py b/src/plone/app/folder/nogopip.py\nindex f78dcb2..74ebd0b 100644\n--- a/src/plone/app/folder/nogopip.py\n+++ b/src/plone/app/folder/nogopip.py\n@@ -12,6 +12,24 @@\n logger = getLogger(__name__)\n \n \n+def traverse(base, path):\n+    """simplified fast unrestricted traverse.\n+\n+    base: the root to start from\n+    path: absolute path from app root as string\n+    returns: content at the end or None\n+    """\n+    current = base\n+    for cid in path.split(\'/\'):\n+        if not cid:\n+            continue\n+        try:\n+            current = current[cid]\n+        except KeyError:\n+            return None\n+    return current\n+\n+\n @implementer(IPluggableIndex)\n class StubIndex(SimpleItem):\n     """ stub catalog index doing nothing """\n@@ -74,13 +92,13 @@ def documentToKeyMap(self):\n         items = []\n         containers = {}\n         getpath = self.catalog.paths.get\n-        traverse = getUtility(ISiteRoot).unrestrictedTraverse\n+        root = getUtility(ISiteRoot).getPhysicalRoot()\n         for rid in rs:\n             path = getpath(rid)\n             parent, id = path.rsplit(\'/\', 1)\n             container = containers.get(parent)\n             if container is None:\n-                containers[parent] = container = traverse(parent)\n+                containers[parent] = container = traverse(root, parent)\n             rids[id] = rid              # remember in case of single folder\n             items.append((rid, container, id))  # or else for deferred lookup\n         pos = {}\n'

