Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-11-28T11:32:16+01:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/plone.app.layout/commit/e7d682005e5706d3fe7a333effb1f7a57ec5368c

add is_navigation_root checker

Files changed:
A news/225.feature
M plone/app/layout/globals/context.py
M plone/app/layout/globals/tests/test_context.py

b"diff --git a/news/225.feature b/news/225.feature\nnew file mode 100644\nindex 00000000..e694d0b1\n--- /dev/null\n+++ b/news/225.feature\n@@ -0,0 +1,2 @@\n+Add is_navigation_root check in plone_context_state view\n+[erral]\ndiff --git a/plone/app/layout/globals/context.py b/plone/app/layout/globals/context.py\nindex f9f2878c..7c9b9825 100644\n--- a/plone/app/layout/globals/context.py\n+++ b/plone/app/layout/globals/context.py\n@@ -3,6 +3,7 @@\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n from .interfaces import IContextState\n+from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.memoize.view import memoize\n from plone.portlets.interfaces import ILocalPortletAssignable\n from plone.registry.interfaces import IRegistry\n@@ -199,6 +200,14 @@ def is_portal_root(self):\n             (self.is_default_page() and\n              aq_base(aq_parent(context)) is aq_base(portal))\n \n+    @memoize\n+    def is_navigation_root(self):\n+        context = aq_inner(self.context)\n+        return INavigationRoot.providedBy(context) or (\n+            self.is_default_page()\n+            and INavigationRoot.providedBy(aq_parent(context))\n+        )\n+\n     @memoize\n     def is_editable(self):\n         tool = getToolByName(self.context, 'portal_membership')\ndiff --git a/plone/app/layout/globals/tests/test_context.py b/plone/app/layout/globals/tests/test_context.py\nindex d97940f2..ca8c50df 100644\n--- a/plone/app/layout/globals/tests/test_context.py\n+++ b/plone/app/layout/globals/tests/test_context.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n-from plone.app.layout.testing import INTEGRATION_TESTING \n+from plone.app.layout.navigation.interfaces import INavigationRoot\n+from plone.app.layout.testing import INTEGRATION_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing.helpers import logout\n@@ -7,6 +8,7 @@\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n from Products.CMFPlone.interfaces import INonStructuralFolder\n from Products.CMFPlone.utils import _createObjectByType\n+from zope.interface import alsoProvides\n from zope.interface import directlyProvides\n \n import unittest\n@@ -221,6 +223,14 @@ def test_is_portal_root(self):\n         self.assertEqual(self.sview.is_portal_root(), False)\n         self.assertEqual(self.pview.is_portal_root(), True)\n \n+    def test_is_navigation_root(self):\n+        alsoProvides(self.folder, INavigationRoot)\n+        self.assertEqual(self.fview.is_navigation_root(), True)\n+        self.assertEqual(self.dview.is_navigation_root(), True)\n+        self.assertEqual(self.sview.is_navigation_root(), False)\n+        self.assertEqual(self.pview.is_navigation_root(), True)\n+\n+\n     def test_is_editable(self):\n         self.assertEqual(self.dview.is_editable(), True)\n         logout()\n"

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2019-11-29T15:46:10+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/68b3eb6d062a71a41af44b327faa625d0bfcae84

Merge pull request #226 from plone/erral-issue-225

Add is_navigation_root checker in plone_context_state view

Files changed:
A news/225.feature
M plone/app/layout/globals/context.py
M plone/app/layout/globals/tests/test_context.py

b"diff --git a/news/225.feature b/news/225.feature\nnew file mode 100644\nindex 00000000..e694d0b1\n--- /dev/null\n+++ b/news/225.feature\n@@ -0,0 +1,2 @@\n+Add is_navigation_root check in plone_context_state view\n+[erral]\ndiff --git a/plone/app/layout/globals/context.py b/plone/app/layout/globals/context.py\nindex f9f2878c..7c9b9825 100644\n--- a/plone/app/layout/globals/context.py\n+++ b/plone/app/layout/globals/context.py\n@@ -3,6 +3,7 @@\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n from .interfaces import IContextState\n+from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.memoize.view import memoize\n from plone.portlets.interfaces import ILocalPortletAssignable\n from plone.registry.interfaces import IRegistry\n@@ -199,6 +200,14 @@ def is_portal_root(self):\n             (self.is_default_page() and\n              aq_base(aq_parent(context)) is aq_base(portal))\n \n+    @memoize\n+    def is_navigation_root(self):\n+        context = aq_inner(self.context)\n+        return INavigationRoot.providedBy(context) or (\n+            self.is_default_page()\n+            and INavigationRoot.providedBy(aq_parent(context))\n+        )\n+\n     @memoize\n     def is_editable(self):\n         tool = getToolByName(self.context, 'portal_membership')\ndiff --git a/plone/app/layout/globals/tests/test_context.py b/plone/app/layout/globals/tests/test_context.py\nindex d97940f2..ca8c50df 100644\n--- a/plone/app/layout/globals/tests/test_context.py\n+++ b/plone/app/layout/globals/tests/test_context.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n-from plone.app.layout.testing import INTEGRATION_TESTING \n+from plone.app.layout.navigation.interfaces import INavigationRoot\n+from plone.app.layout.testing import INTEGRATION_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing.helpers import logout\n@@ -7,6 +8,7 @@\n from Products.CMFDynamicViewFTI.interfaces import IBrowserDefault\n from Products.CMFPlone.interfaces import INonStructuralFolder\n from Products.CMFPlone.utils import _createObjectByType\n+from zope.interface import alsoProvides\n from zope.interface import directlyProvides\n \n import unittest\n@@ -221,6 +223,14 @@ def test_is_portal_root(self):\n         self.assertEqual(self.sview.is_portal_root(), False)\n         self.assertEqual(self.pview.is_portal_root(), True)\n \n+    def test_is_navigation_root(self):\n+        alsoProvides(self.folder, INavigationRoot)\n+        self.assertEqual(self.fview.is_navigation_root(), True)\n+        self.assertEqual(self.dview.is_navigation_root(), True)\n+        self.assertEqual(self.sview.is_navigation_root(), False)\n+        self.assertEqual(self.pview.is_navigation_root(), True)\n+\n+\n     def test_is_editable(self):\n         self.assertEqual(self.dview.is_editable(), True)\n         logout()\n"

