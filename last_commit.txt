Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-10-30T12:19:08-04:00
Author: Flip McFadden (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/6c95d23c3b756d130a1634420f7374d0661be35e

Update intro suggesting deprication of Archetypes

First stab at new intro paragraph.  I'm not in love with it.

Files changed:
M docs/intro.rst

b'diff --git a/docs/intro.rst b/docs/intro.rst\nindex ef458cc..26b3ca2 100644\n--- a/docs/intro.rst\n+++ b/docs/intro.rst\n@@ -54,6 +54,4 @@ Some of the main differences include:\n * It is possible to extend the schemata of existing Archetypes types with the archetypes.schemaextender product, although this adds some performance overhead and relies on a somewhat awkward programming technique. Dexterity types were built to be extensible from the beginning, and it is possible to declaratively turn on or off aspects of a type (such as Dublin Core metadata, locking support, ratings, tagging, etc) with re-usable "behaviors".\n * Dexterity is built from the ground up to support through-the-web type creation. There are products that achieve the same thing with Archetypes types, but they have to work around a number of limitations in the design of Archetypes that make them somewhat brittle or slow. Dexterity also allows types to be developed jointly through-the-web and on the filesystem. For example, a schema can be written in Python and then extended through the web.\n \n-All that said, Archetypes is still an older and more mature framework. Dexterity is a viable alternative to Archetypes in many projects, but if you are happy with Archetypes, you should not immediately rush to rewrite your types to use Dexterity.\n-\n-There are also some things that Dexterity does not yet support, or, more commonly, services that Plone ships with that currently assume all content objects are built using Archetypes. The current list of "gaps" can be found in the Dexterity issue tracker. You should take a look at this before deciding whether Dexterity will work for you. If in doubt, don\'t hesitate to write to the Dexterity mailing list and ask for advice.\n+As of version 5 of Plone, Dexterity is the preferred way of creating content types.  Additionally, Archetypes was removed from Plone core in 5.2.  It can still be added to Plone to support Archetypes-based add-ons, but it will not function when running Plone using Python 3.   If you are considering upgrading to Plone 5 and Python 3, you are reading the right documentation.\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-11-04T12:57:04-05:00
Author: flipmcf (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/955396cd7ee2a62e9091e5c49efd3955428aa5b7

update news

Files changed:
A news/302.bugfix

b'diff --git a/news/302.bugfix b/news/302.bugfix\nnew file mode 100644\nindex 0000000..a1d5bca\n--- /dev/null\n+++ b/news/302.bugfix\n@@ -0,0 +1 @@\n+Update documentation introduction w/r/t archetypes (#301)\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-11-04T13:02:13-05:00
Author: flipmcf (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/21798f08951f3ae98eb3821438d4fd6f310f7916

Apply styleguide

Files changed:
M docs/intro.rst

b'diff --git a/docs/intro.rst b/docs/intro.rst\nindex 26b3ca2..a5fb141 100644\n--- a/docs/intro.rst\n+++ b/docs/intro.rst\n@@ -54,4 +54,7 @@ Some of the main differences include:\n * It is possible to extend the schemata of existing Archetypes types with the archetypes.schemaextender product, although this adds some performance overhead and relies on a somewhat awkward programming technique. Dexterity types were built to be extensible from the beginning, and it is possible to declaratively turn on or off aspects of a type (such as Dublin Core metadata, locking support, ratings, tagging, etc) with re-usable "behaviors".\n * Dexterity is built from the ground up to support through-the-web type creation. There are products that achieve the same thing with Archetypes types, but they have to work around a number of limitations in the design of Archetypes that make them somewhat brittle or slow. Dexterity also allows types to be developed jointly through-the-web and on the filesystem. For example, a schema can be written in Python and then extended through the web.\n \n-As of version 5 of Plone, Dexterity is the preferred way of creating content types.  Additionally, Archetypes was removed from Plone core in 5.2.  It can still be added to Plone to support Archetypes-based add-ons, but it will not function when running Plone using Python 3.   If you are considering upgrading to Plone 5 and Python 3, you are reading the right documentation.\n+As of version 5 of Plone, Dexterity is the preferred way of creating content types.\n+Additionally, Archetypes was removed from Plone core in 5.2.  \n+Archetypes can still be added to Plone 5 to support Archetypes-based add-ons, but it will not function when running Plone using Python 3.\n+\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-11-05T08:40:27+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/b08b01f04726f3c12b79a82a960bc7729b122541

Merge pull request #302 from flipmcf/#301

Update intro suggesting deprication of Archetypes

Files changed:
A news/302.bugfix
M docs/intro.rst

b'diff --git a/docs/intro.rst b/docs/intro.rst\nindex ef458cc..a5fb141 100644\n--- a/docs/intro.rst\n+++ b/docs/intro.rst\n@@ -54,6 +54,7 @@ Some of the main differences include:\n * It is possible to extend the schemata of existing Archetypes types with the archetypes.schemaextender product, although this adds some performance overhead and relies on a somewhat awkward programming technique. Dexterity types were built to be extensible from the beginning, and it is possible to declaratively turn on or off aspects of a type (such as Dublin Core metadata, locking support, ratings, tagging, etc) with re-usable "behaviors".\n * Dexterity is built from the ground up to support through-the-web type creation. There are products that achieve the same thing with Archetypes types, but they have to work around a number of limitations in the design of Archetypes that make them somewhat brittle or slow. Dexterity also allows types to be developed jointly through-the-web and on the filesystem. For example, a schema can be written in Python and then extended through the web.\n \n-All that said, Archetypes is still an older and more mature framework. Dexterity is a viable alternative to Archetypes in many projects, but if you are happy with Archetypes, you should not immediately rush to rewrite your types to use Dexterity.\n+As of version 5 of Plone, Dexterity is the preferred way of creating content types.\n+Additionally, Archetypes was removed from Plone core in 5.2.  \n+Archetypes can still be added to Plone 5 to support Archetypes-based add-ons, but it will not function when running Plone using Python 3.\n \n-There are also some things that Dexterity does not yet support, or, more commonly, services that Plone ships with that currently assume all content objects are built using Archetypes. The current list of "gaps" can be found in the Dexterity issue tracker. You should take a look at this before deciding whether Dexterity will work for you. If in doubt, don\'t hesitate to write to the Dexterity mailing list and ask for advice.\ndiff --git a/news/302.bugfix b/news/302.bugfix\nnew file mode 100644\nindex 0000000..a1d5bca\n--- /dev/null\n+++ b/news/302.bugfix\n@@ -0,0 +1 @@\n+Update documentation introduction w/r/t archetypes (#301)\n'

