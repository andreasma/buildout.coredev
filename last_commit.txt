Repository: plone.app.versioningbehavior


Branch: refs/heads/master
Date: 2019-06-07T16:52:16+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.versioningbehavior/commit/c6896f63eef50c4d63cb1ebf8f59c62ba108496e

Initial version for versionable objects is properly created

Fixes #47

Files changed:
A news/47.bugfix
M plone/app/versioningbehavior/configure.zcml

b'diff --git a/news/47.bugfix b/news/47.bugfix\nnew file mode 100644\nindex 0000000..28cb80f\n--- /dev/null\n+++ b/news/47.bugfix\n@@ -0,0 +1 @@\n+Initial version for versionable objects is properly created [ale-rt]\ndiff --git a/plone/app/versioningbehavior/configure.zcml b/plone/app/versioningbehavior/configure.zcml\nindex edcf6d4..ba6176e 100644\n--- a/plone/app/versioningbehavior/configure.zcml\n+++ b/plone/app/versioningbehavior/configure.zcml\n@@ -33,7 +33,7 @@\n     <subscriber\n         for="plone.app.versioningbehavior.behaviors.IVersioningSupport\n              zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".subscribers.create_version_on_save"\n+        handler=".subscribers.create_initial_version_after_adding"\n         />\n \n     <browser:page\n'

Repository: plone.app.versioningbehavior


Branch: refs/heads/master
Date: 2019-06-11T11:51:38+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.versioningbehavior/commit/e1c70184afbf842f9c3466914d44fd43790ca8d5

Added test coverage

Files changed:
A plone/app/versioningbehavior/tests/test_subscribers.py

b'diff --git a/plone/app/versioningbehavior/tests/test_subscribers.py b/plone/app/versioningbehavior/tests/test_subscribers.py\nnew file mode 100644\nindex 0000000..e150c74\n--- /dev/null\n+++ b/plone/app/versioningbehavior/tests/test_subscribers.py\n@@ -0,0 +1,38 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.app.versioningbehavior.testing import \\\n+    PLONE_APP_VERSIONINGBEHAVIOR_INTEGRATION_TESTING\n+from Products.CMFCore.utils import getToolByName\n+from zope.event import notify\n+from zope.lifecycleevent import ObjectModifiedEvent\n+\n+import unittest\n+\n+\n+class TestSubscribers(unittest.TestCase):\n+\n+    layer = PLONE_APP_VERSIONINGBEHAVIOR_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+        # we need to have the Manager role to be able to add things\n+        # to the portal root\n+        setRoles(self.portal, TEST_USER_ID, ["Manager"])\n+        self.portal.invokeFactory("Document", "foo", title="Document")\n+        self.doc = self.portal.foo\n+\n+    def test_create_initial_version_after_adding(self):\n+        pr = getToolByName(self.portal, "portal_repository")\n+        version_data = pr.retrieve(self.doc)\n+        self.assertEqual(version_data.comment.default, "Initial version")\n+        self.assertEqual(version_data.version_id, 0)\n+\n+    def test_create_version_on_save(self):\n+        self.doc.title = "Edited document"\n+        notify(ObjectModifiedEvent(self.doc))\n+        pr = getToolByName(self.portal, "portal_repository")\n+        version_data = pr.retrieve(self.doc)\n+        self.assertIsNone(version_data.comment)\n+        self.assertEqual(version_data.version_id, 1)\n'

Repository: plone.app.versioningbehavior


Branch: refs/heads/master
Date: 2019-06-20T18:56:35+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.versioningbehavior/commit/64c9dd108709328b66437f596e36cdde01768a5a

Merge pull request #48 from plone/47-fix-handlers

Initial version for versionable objects is properly created

Files changed:
A news/47.bugfix
A plone/app/versioningbehavior/tests/test_subscribers.py
M plone/app/versioningbehavior/configure.zcml

b'diff --git a/news/47.bugfix b/news/47.bugfix\nnew file mode 100644\nindex 0000000..28cb80f\n--- /dev/null\n+++ b/news/47.bugfix\n@@ -0,0 +1 @@\n+Initial version for versionable objects is properly created [ale-rt]\ndiff --git a/plone/app/versioningbehavior/configure.zcml b/plone/app/versioningbehavior/configure.zcml\nindex edcf6d4..ba6176e 100644\n--- a/plone/app/versioningbehavior/configure.zcml\n+++ b/plone/app/versioningbehavior/configure.zcml\n@@ -33,7 +33,7 @@\n     <subscriber\n         for="plone.app.versioningbehavior.behaviors.IVersioningSupport\n              zope.lifecycleevent.interfaces.IObjectAddedEvent"\n-        handler=".subscribers.create_version_on_save"\n+        handler=".subscribers.create_initial_version_after_adding"\n         />\n \n     <browser:page\ndiff --git a/plone/app/versioningbehavior/tests/test_subscribers.py b/plone/app/versioningbehavior/tests/test_subscribers.py\nnew file mode 100644\nindex 0000000..e150c74\n--- /dev/null\n+++ b/plone/app/versioningbehavior/tests/test_subscribers.py\n@@ -0,0 +1,38 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.testing import setRoles\n+from plone.app.testing import TEST_USER_ID\n+from plone.app.versioningbehavior.testing import \\\n+    PLONE_APP_VERSIONINGBEHAVIOR_INTEGRATION_TESTING\n+from Products.CMFCore.utils import getToolByName\n+from zope.event import notify\n+from zope.lifecycleevent import ObjectModifiedEvent\n+\n+import unittest\n+\n+\n+class TestSubscribers(unittest.TestCase):\n+\n+    layer = PLONE_APP_VERSIONINGBEHAVIOR_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+        # we need to have the Manager role to be able to add things\n+        # to the portal root\n+        setRoles(self.portal, TEST_USER_ID, ["Manager"])\n+        self.portal.invokeFactory("Document", "foo", title="Document")\n+        self.doc = self.portal.foo\n+\n+    def test_create_initial_version_after_adding(self):\n+        pr = getToolByName(self.portal, "portal_repository")\n+        version_data = pr.retrieve(self.doc)\n+        self.assertEqual(version_data.comment.default, "Initial version")\n+        self.assertEqual(version_data.version_id, 0)\n+\n+    def test_create_version_on_save(self):\n+        self.doc.title = "Edited document"\n+        notify(ObjectModifiedEvent(self.doc))\n+        pr = getToolByName(self.portal, "portal_repository")\n+        version_data = pr.retrieve(self.doc)\n+        self.assertIsNone(version_data.comment)\n+        self.assertEqual(version_data.version_id, 1)\n'

