Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2018-06-22T08:48:44+02:00
Author: Thomas Lotze (tlotze) <thomas@thomas-lotze.net>
Commit: https://github.com/plone/plone.app.upgrade/commit/77eaed986eb32010d438d4525822b7e2b0d1ff65

transformations for language compatibility

Files changed:
M plone/app/upgrade/__init__.py
M plone/app/upgrade/utils.py
M plone/app/upgrade/v40/__init__.py
M plone/app/upgrade/v41/__init__.py
M plone/app/upgrade/v42/__init__.py
M plone/app/upgrade/v43/__init__.py
M setup.py

b'diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex 37d70ac0..61b87a15 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -1,8 +1,8 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.utils import alias_module\n \n-import bbb\n-import bbbd\n+from . import bbb\n+from . import bbbd\n import pkg_resources\n import sys\n \n@@ -16,7 +16,7 @@\n     alias_module(\'zope.app.cache.ram\', zope.ramcache.ram)\n \n if \'products.kupu\' not in pkg_resources.working_set.by_key:\n-    import kupu_bbb\n+    from . import kupu_bbb\n     alias_module(\'Products.kupu.plone.plonelibrarytool\', kupu_bbb)\n \n try:\ndiff --git a/plone/app/upgrade/utils.py b/plone/app/upgrade/utils.py\nindex 82fc1a65..bb17fdba 100644\n--- a/plone/app/upgrade/utils.py\n+++ b/plone/app/upgrade/utils.py\n@@ -7,12 +7,10 @@\n from Products.GenericSetup.registry import _export_step_registry\n from Products.GenericSetup.registry import _import_step_registry\n from Products.ZCatalog.ProgressHandler import ZLogHandler\n-from types import ListType\n-from types import TupleType\n+from types import ModuleType\n from ZODB.POSException import ConflictError\n \n import logging\n-import new\n import pkg_resources\n import sys\n import transaction\n@@ -52,15 +50,15 @@ def safeEditProperty(obj, key, value, data_type=\'string\'):\n def addLinesToProperty(obj, key, values):\n     if obj.hasProperty(key):\n         data = getattr(obj, key)\n-        if isinstance(data, TupleType):\n+        if isinstance(data, tuple):\n             data = list(data)\n-        if isinstance(values, ListType):\n+        if isinstance(values, list):\n             data.extend(values)\n         else:\n             data.append(values)\n         obj._updateProperty(key, data)\n     else:\n-        if not isinstance(values, ListType):\n+        if not isinstance(values, list):\n             values = [values]\n         obj._setProperty(key, values, \'lines\')\n \n@@ -221,7 +219,7 @@ def alias_module(name, target):\n         try:\n             __import__(module_name)\n         except ImportError:\n-            new_module = new.module(module_name)\n+            new_module = ModuleType(module_name)\n             sys.modules[module_name] = new_module\n             if module is not None:\n                 setattr(module, parts[i - 1], new_module)\ndiff --git a/plone/app/upgrade/v40/__init__.py b/plone/app/upgrade/v40/__init__.py\nindex 8b8d5f7d..57a23c6e 100644\n--- a/plone/app/upgrade/v40/__init__.py\n+++ b/plone/app/upgrade/v40/__init__.py\n@@ -1,3 +1,3 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n-import betas  # noqa F401\n+from . import alphas  # noqa F401\n+from . import betas  # noqa F401\ndiff --git a/plone/app/upgrade/v41/__init__.py b/plone/app/upgrade/v41/__init__.py\nindex 401f1ca0..9fb6b049 100644\n--- a/plone/app/upgrade/v41/__init__.py\n+++ b/plone/app/upgrade/v41/__init__.py\n@@ -1,4 +1,4 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n-import betas  # noqa F401\n-import final  # noqa F401\n+from . import alphas  # noqa F401\n+from . import betas  # noqa F401\n+from . import final  # noqa F401\ndiff --git a/plone/app/upgrade/v42/__init__.py b/plone/app/upgrade/v42/__init__.py\nindex 401f1ca0..9fb6b049 100644\n--- a/plone/app/upgrade/v42/__init__.py\n+++ b/plone/app/upgrade/v42/__init__.py\n@@ -1,4 +1,4 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n-import betas  # noqa F401\n-import final  # noqa F401\n+from . import alphas  # noqa F401\n+from . import betas  # noqa F401\n+from . import final  # noqa F401\ndiff --git a/plone/app/upgrade/v43/__init__.py b/plone/app/upgrade/v43/__init__.py\nindex ae3ecbfd..0a655b3d 100644\n--- a/plone/app/upgrade/v43/__init__.py\n+++ b/plone/app/upgrade/v43/__init__.py\n@@ -1,2 +1,2 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n+from . import alphas  # noqa F401\ndiff --git a/setup.py b/setup.py\nindex ebe88409..171dcb6f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -61,6 +61,7 @@\n         \'plone.contentrules\',\n         \'plone.app.iterate\',\n         \'plone.app.viewletmanager\',\n+        \'six\',\n     ],\n     entry_points="""\n     [z3c.autoinclude.plugin]\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2018-06-22T08:48:44+02:00
Author: Thomas Lotze (tlotze) <thomas@thomas-lotze.net>
Commit: https://github.com/plone/plone.app.upgrade/commit/91689a2fa2f6e49d81395084fdd648d7ea00cb97

in Python 3, skip tests for migrations that will never run with Python 3

Files changed:
M plone/app/upgrade/v40/tests.py
M plone/app/upgrade/v41/tests.py
M plone/app/upgrade/v42/tests.py
M plone/app/upgrade/v43/tests.py
M plone/app/upgrade/v50/tests.py
M plone/app/upgrade/v51/tests.py

b"diff --git a/plone/app/upgrade/v40/tests.py b/plone/app/upgrade/v40/tests.py\nindex 717fc1f0..be5524d0 100644\n--- a/plone/app/upgrade/v40/tests.py\n+++ b/plone/app/upgrade/v40/tests.py\n@@ -33,7 +33,9 @@\n from zope.component import queryUtility\n from zope.ramcache.interfaces.ram import IRAMCache\n \n+import six\n import time\n+import unittest\n \n \n class FakeSecureMailHost(object):\n@@ -668,7 +670,6 @@ def testProfile(self):\n \n \n def test_suite():\n-    import unittest\n-    if not version_match('4.0'):\n+    if not six.PY2 or not version_match('4.0'):\n         return unittest.TestSuite()\n     return unittest.defaultTestLoader.loadTestsFromName(__name__)\ndiff --git a/plone/app/upgrade/v41/tests.py b/plone/app/upgrade/v41/tests.py\nindex 8d27b6c9..7caf6333 100644\n--- a/plone/app/upgrade/v41/tests.py\n+++ b/plone/app/upgrade/v41/tests.py\n@@ -4,6 +4,7 @@\n from Products.ZCTextIndex.ZCTextIndex import PLexicon\n from Products.ZCTextIndex.ZCTextIndex import ZCTextIndex\n \n+import six\n import unittest\n \n \n@@ -20,3 +21,8 @@ def test_fixOkapiIndexes(self):\n         from plone.app.upgrade.v41.final import fixOkapiIndexes\n         fixOkapiIndexes(catalog)\n         self.assertEqual(0, catalog.Indexes['test'].index._totaldoclen())\n+\n+\n+if not six.PY2:\n+    def test_suite():\n+        return unittest.TestSuite()\ndiff --git a/plone/app/upgrade/v42/tests.py b/plone/app/upgrade/v42/tests.py\nindex 6db94fef..ef8ba228 100644\n--- a/plone/app/upgrade/v42/tests.py\n+++ b/plone/app/upgrade/v42/tests.py\n@@ -1,8 +1,10 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.tests.base import MigrationTest\n from plone.app.upgrade.utils import loadMigrationProfile\n+from . import betas\n \n-import betas\n+import six\n+import unittest\n \n \n class TestMigrations_v4_2beta1(MigrationTest):\n@@ -24,3 +26,8 @@ def testAddSiteAdminToKeywordRoles(self):\n         betas.to42beta1(self.portal.portal_setup)\n         roles = site_props.allowRolesToAddKeywords\n         self.assertEqual(roles, ('Manager', 'Reviewer', 'Site Administrator'))\n+\n+\n+if not six.PY2:\n+    def test_suite():\n+        return unittest.TestSuite()\ndiff --git a/plone/app/upgrade/v43/tests.py b/plone/app/upgrade/v43/tests.py\nindex e34df873..7f029fc1 100644\n--- a/plone/app/upgrade/v43/tests.py\n+++ b/plone/app/upgrade/v43/tests.py\n@@ -12,8 +12,10 @@\n from zope.contentprovider.interfaces import IContentProvider\n from zope.interface import implementer\n from zope.viewlet.interfaces import IViewlet\n+from . import alphas\n \n-import alphas\n+import six\n+import unittest\n \n \n try:\n@@ -401,3 +403,8 @@ def testCleanupUninstalledProducts(self):\n         profile_registry.unregisterProfile('default', 'newproduct')\n         profile_registry.unregisterProfile('default', 'installed')\n         profile_registry.unregisterProfile('default', 'uninstalled')\n+\n+\n+if not six.PY2:\n+    def test_suite():\n+        return unittest.TestSuite()\ndiff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py\nindex afc31f2c..913929a8 100644\n--- a/plone/app/upgrade/v50/tests.py\n+++ b/plone/app/upgrade/v50/tests.py\n@@ -10,7 +10,7 @@\n from zope.component import getMultiAdapter\n from zope.component import getSiteManager\n from zope.component import getUtility\n-\n+import six\n import unittest\n \n \n@@ -181,7 +181,7 @@ def test_fix_double_smaxage(self):\n def test_suite():\n     # Skip these tests on Plone 4\n     from unittest import TestSuite, makeSuite\n-    if not PLONE_5:\n+    if not six.PY2 or not PLONE_5:\n         return TestSuite()\n     else:\n         suite = TestSuite()\ndiff --git a/plone/app/upgrade/v51/tests.py b/plone/app/upgrade/v51/tests.py\nindex 457f6e02..cf8b2f6b 100644\n--- a/plone/app/upgrade/v51/tests.py\n+++ b/plone/app/upgrade/v51/tests.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.interfaces import IFilterSchema\n from zope.component import getUtility\n-\n+import six\n import unittest\n \n \n@@ -67,7 +67,7 @@ def test_migrate_safe_html_settings(self):\n \n def test_suite():\n     # Skip these tests on Plone 4\n-    if not PLONE_5:\n+    if not six.PY2 or not PLONE_5:\n         return unittest.TestSuite()\n \n     suite = unittest.TestSuite()\n"

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2018-09-22T15:20:10+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/c2cd5925b89b3f3f7f966e9c0675b76d3d39a783

Merge remote-tracking branch 'origin/master' into python3

Files changed:
A plone/app/upgrade/v51/profiles/to_513/registry.xml
A plone/app/upgrade/v51/profiles/to_514/registry.xml
A plone/app/upgrade/v51/profiles/to_514/skins.xml
A plone/app/upgrade/v52/profiles/to_alpha1/registry.xml
M CHANGES.rst
M plone/app/upgrade/v50/alphas.py
M plone/app/upgrade/v51/configure.zcml
M plone/app/upgrade/v51/final.py
M plone/app/upgrade/v51/profiles.zcml
M plone/app/upgrade/v52/alphas.py
M plone/app/upgrade/v52/profiles/to_alpha1/skins.xml

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 6cd7462f..dfc7248c 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,12 +10,18 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Add upgrade steps for Datatbles on Plone 5.1.4\n+  [frapell]\n+\n+- Add upgrade step removing the jquery-highlightsearchterms resource\n+  and the plone_ecmascript skin layer, on Plone 5.2 and 5.1.4\n \n Bug fixes:\n \n - *add item here*\n \n+- Update resources for plone.app.event.  [agitator]\n+\n \n 2.0.15 (2018-06-21)\n -------------------\ndiff --git a/plone/app/upgrade/v50/alphas.py b/plone/app/upgrade/v50/alphas.py\nindex 9ebc6d72..2b1a8de4 100644\n--- a/plone/app/upgrade/v50/alphas.py\n+++ b/plone/app/upgrade/v50/alphas.py\n@@ -74,6 +74,8 @@ def to50alpha1(context):\n         qi = getToolByName(portal, \'portal_quickinstaller\')\n     else:\n         qi = get_installer(portal)\n+    if not qi.isProductInstalled(\'plone.resource\'):\n+        qi.installProduct(\'plone.resource\')\n     if not qi.isProductInstalled(\'plone.app.event\'):\n         qi.installProduct(\'plone.app.event\')\n \ndiff --git a/plone/app/upgrade/v51/configure.zcml b/plone/app/upgrade/v51/configure.zcml\nindex b8be9b8d..ad19471b 100644\n--- a/plone/app/upgrade/v51/configure.zcml\n+++ b/plone/app/upgrade/v51/configure.zcml\n@@ -243,12 +243,38 @@ Add image scaling options to image handling control panel.\n         destination="5113"\n         profile="Products.CMFPlone:plone">\n \n+        <gs:upgradeDepends\n+            title="Run to513 upgrade profile."\n+            description="Update resources for plone.app.event"\n+            import_profile="plone.app.upgrade.v51:to513"\n+            />\n+\n+        <gs:upgradeStep\n+            title="Force remove old p.a.event resources"\n+            handler=".final.remove_old_PAE_rescources"\n+            />\n+\n+\n+    </gs:upgradeSteps>\n+\n+    <gs:upgradeSteps\n+        source="5113"\n+        destination="5114"\n+        profile="Products.CMFPlone:plone">\n+\n+        <gs:upgradeDepends\n+            title="Run to514 upgrade profile."\n+            description="Update resources for Datatables"\n+            import_profile="plone.app.upgrade.v51:to514"\n+            />\n+\n         <gs:upgradeStep\n             title="Miscellaneous"\n             description=""\n-            handler="..utils.null_upgrade_step"\n+            handler=".final.remove_highlightsearchterms"\n             />\n \n     </gs:upgradeSteps>\n \n+\n </configure>\ndiff --git a/plone/app/upgrade/v51/final.py b/plone/app/upgrade/v51/final.py\nindex c6e9a498..1866708a 100644\n--- a/plone/app/upgrade/v51/final.py\n+++ b/plone/app/upgrade/v51/final.py\n@@ -1,6 +1,9 @@\n # -*- coding: utf-8 -*-\n+from plone.app.upgrade.utils import cleanUpSkinsTool\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from zExceptions import BadRequest\n+from zope.component import getUtility\n \n import logging\n \n@@ -38,3 +41,24 @@ def fix_i18n_domain(context):\n                 \'Action object/%s does not have an i18n_domain property\',\n                 action_id,\n             )\n+\n+\n+def remove_highlightsearchterms(context):\n+    portal = getToolByName(context, \'portal_url\').getPortalObject()\n+    cleanUpSkinsTool(portal)\n+\n+    registry = getUtility(IRegistry)\n+    record = \'plone.bundles/plone-legacy.resources\'\n+    resources = registry.records[record]\n+    if u\'jquery-highlightsearchterms\' in resources.value:\n+        resources.value.remove(u\'jquery-highlightsearchterms\')\n+\n+\n+def remove_old_PAE_rescources(context):  # noqa\n+    """FORCE remove old p.a.event resources"""\n+    registry = getUtility(IRegistry)\n+    resources = registry.records[\'plone.bundles/plone-legacy.resources\']\n+    if u\'resource-plone-app-event-event-js\' in resources.value:\n+        resources.value.remove(\'resource-plone-app-event-event-js\')\n+    if u\'resource-plone-app-event-event-css\' in resources.value:\n+        resources.value.remove(\'resource-plone-app-event-event-css\')\ndiff --git a/plone/app/upgrade/v51/profiles.zcml b/plone/app/upgrade/v51/profiles.zcml\nindex e90ab39c..54756efe 100644\n--- a/plone/app/upgrade/v51/profiles.zcml\n+++ b/plone/app/upgrade/v51/profiles.zcml\n@@ -77,4 +77,22 @@\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       />\n \n+  <genericsetup:registerProfile\n+      name="to513"\n+      title="Upgrade profile for Plone 5.1.2 to Plone 5.1.3"\n+      description=""\n+      directory="profiles/to_513"\n+      for="Products.CMFPlone.interfaces.IMigratingPloneSiteRoot"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      />\n+\n+  <genericsetup:registerProfile\n+      name="to514"\n+      title="Upgrade profile for Plone 5.1.3 to Plone 5.1.4"\n+      description=""\n+      directory="profiles/to_514"\n+      for="Products.CMFPlone.interfaces.IMigratingPloneSiteRoot"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      />\n+\n </configure>\ndiff --git a/plone/app/upgrade/v51/profiles/to_513/registry.xml b/plone/app/upgrade/v51/profiles/to_513/registry.xml\nnew file mode 100644\nindex 00000000..195fbadc\n--- /dev/null\n+++ b/plone/app/upgrade/v51/profiles/to_513/registry.xml\n@@ -0,0 +1,26 @@\n+<?xml version="1.0"?>\n+<registry>\n+\n+  <!-- remove old resources and update legacy bundle -->\n+  <records prefix="plone.resources/resource-plone-app-event-js" remove="True"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+  </records>\n+  <records prefix="plone.resources/resource-plone-app-event-css" remove="True"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+  </records>\n+\n+  <!-- register as resource for legacy bundle -->\n+  <records prefix="plone.resources/plone-app-event"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++plone.app.event/event.js</value>\n+  </records>\n+\n+  <records prefix="plone.bundles/plone-legacy"\n+            interface=\'Products.CMFPlone.interfaces.IBundleRegistry\'>\n+    <value key="resources" purge="False">\n+      <element>plone-app-event</element>\n+    </value>\n+    <value key="last_compilation"></value>\n+  </records>\n+\n+</registry>\ndiff --git a/plone/app/upgrade/v51/profiles/to_514/registry.xml b/plone/app/upgrade/v51/profiles/to_514/registry.xml\nnew file mode 100644\nindex 00000000..ef3704aa\n--- /dev/null\n+++ b/plone/app/upgrade/v51/profiles/to_514/registry.xml\n@@ -0,0 +1,133 @@\n+<?xml version="1.0"?>\n+<registry>\n+\n+  <records prefix="plone.resources/mockup-patterns-datatables"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++resource++mockup/datatables/pattern.js</value>\n+      <value key="css">\n+        <element>++resource++mockup/datatables/pattern.datatables.less</element>\n+      </value>\n+  </records>\n+\n+  <!-- DataTables resources -->\n+  <records prefix="plone.resources/datatables.net"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net/js/jquery.dataTables.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-bs"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-bs/js/dataTables.bootstrap.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-autofill"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-autofill/js/dataTables.autoFill.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-autofill-bs"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-autofill-bs/js/autoFill.bootstrap.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-buttons"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-buttons/js/dataTables.buttons.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-buttons-colvis"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-buttons/js/buttons.colVis.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-buttons-flash"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-buttons/js/buttons.flash.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-buttons-html5"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-buttons/js/buttons.html5.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-buttons-print"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-buttons/js/buttons.print.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-buttons-bs"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-buttons-bs/js/buttons.bootstrap.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-colreorder"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-colreorder/js/dataTables.colReorder.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-fixedcolumns"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-fixedheader"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-keytable"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-keytable/js/dataTables.keyTable.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-responsive"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-responsive/js/dataTables.responsive.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-responsive-bs"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-responsive-bs/js/responsive.bootstrap.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-rowreorder"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-rowreorder/js/dataTables.rowReorder.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-scroller"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-scroller/js/dataTables.scroller.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/datatables.net-select"\n+            interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'>\n+      <value key="js">++plone++static/components/datatables.net-select/js/dataTables.select.min.js</value>\n+  </records>\n+\n+  <records prefix="plone.resources/jquery-highlightsearchterms"\n+           interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'\n+           remove="True">\n+  </records>\n+\n+  <!-- Update ``last_compilation`` to deliver new bundles -->\n+  <records\n+      prefix="plone.bundles/plone"\n+      interface="Products.CMFPlone.interfaces.IBundleRegistry"\n+      purge="False">\n+    <value key="last_compilation">2018-09-06 00:00:00</value>\n+  </records>\n+  <records\n+      prefix="plone.bundles/plone-logged-in"\n+      interface="Products.CMFPlone.interfaces.IBundleRegistry"\n+      purge="False">\n+    <value key="last_compilation">2018-09-06 00:00:00</value>\n+  </records>\n+\n+  <!-- Update legacy bundle -->\n+  <records prefix="plone.bundles/plone-legacy"\n+            interface=\'Products.CMFPlone.interfaces.IBundleRegistry\'>\n+    <value key="last_compilation"></value>\n+  </records>\n+\n+</registry>\ndiff --git a/plone/app/upgrade/v51/profiles/to_514/skins.xml b/plone/app/upgrade/v51/profiles/to_514/skins.xml\nnew file mode 100644\nindex 00000000..3e7c38da\n--- /dev/null\n+++ b/plone/app/upgrade/v51/profiles/to_514/skins.xml\n@@ -0,0 +1,11 @@\n+<?xml version="1.0"?>\n+<object name="portal_skins">\n+  <object\n+      name="plone_ecmascript"\n+      meta_type="Filesystem Directory View"\n+      directory="Products.CMFPlone:skins/plone_ecmascript"\n+      remove="True"/>\n+  <skin-path name="*">\n+    <layer name="plone_ecmascript" remove="True"/>\n+  </skin-path>\n+</object>\ndiff --git a/plone/app/upgrade/v52/alphas.py b/plone/app/upgrade/v52/alphas.py\nindex 774a4b9d..972ee8a7 100644\n--- a/plone/app/upgrade/v52/alphas.py\n+++ b/plone/app/upgrade/v52/alphas.py\n@@ -1,7 +1,9 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.utils import cleanUpSkinsTool\n from plone.app.upgrade.utils import loadMigrationProfile\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n+from zope.component import getUtility\n \n import logging\n \n@@ -13,3 +15,9 @@ def to52alpha1(context):\n     loadMigrationProfile(context, \'profile-plone.app.upgrade.v52:to52alpha1\')\n     portal = getToolByName(context, \'portal_url\').getPortalObject()\n     cleanUpSkinsTool(portal)\n+\n+    registry = getUtility(IRegistry)\n+    record = \'plone.bundles/plone-legacy.resources\'\n+    resources = registry.records[record]\n+    if u\'jquery-highlightsearchterms\' in resources.value:\n+        resources.value.remove(u\'jquery-highlightsearchterms\')\ndiff --git a/plone/app/upgrade/v52/profiles/to_alpha1/registry.xml b/plone/app/upgrade/v52/profiles/to_alpha1/registry.xml\nnew file mode 100644\nindex 00000000..6582f962\n--- /dev/null\n+++ b/plone/app/upgrade/v52/profiles/to_alpha1/registry.xml\n@@ -0,0 +1,16 @@\n+<?xml version="1.0"?>\n+<registry>\n+\n+\n+  <records prefix="plone.resources/jquery-highlightsearchterms"\n+           interface=\'Products.CMFPlone.interfaces.IResourceRegistry\'\n+           remove="True">\n+  </records>\n+\n+  <!-- Update legacy bundle -->\n+  <records prefix="plone.bundles/plone-legacy"\n+            interface=\'Products.CMFPlone.interfaces.IBundleRegistry\'>\n+    <value key="last_compilation"></value>\n+  </records>\n+\n+</registry>\ndiff --git a/plone/app/upgrade/v52/profiles/to_alpha1/skins.xml b/plone/app/upgrade/v52/profiles/to_alpha1/skins.xml\nindex c0d3ddf6..12509b31 100644\n--- a/plone/app/upgrade/v52/profiles/to_alpha1/skins.xml\n+++ b/plone/app/upgrade/v52/profiles/to_alpha1/skins.xml\n@@ -8,4 +8,12 @@\n   <skin-path name="*">\n     <layer name="plone_login" remove="True"/>\n   </skin-path>\n+  <object\n+      name="plone_ecmascript"\n+      meta_type="Filesystem Directory View"\n+      directory="Products.CMFPlone:skins/plone_ecmascript"\n+      remove="True"/>\n+  <skin-path name="*">\n+    <layer name="plone_ecmascript" remove="True"/>\n+  </skin-path>\n </object>\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2018-09-22T17:45:19+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/3d48f6bf936088595a4c4c2f5c3a8928b7647770

plone.app.imaging profile is a dummy one since version 2, see https://github.com/plone/plone.app.imaging/commit/5c5ff1b290be8b87a5eea7b660bee3dbbd3e09e5

Files changed:
M plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml

b'diff --git a/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml b/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml\nindex 4b72ce39..cf4492ac 100644\n--- a/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml\n+++ b/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml\n@@ -1,7 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n   <version>1</version>\n-  <dependencies>\n-    <dependency>profile-plone.app.imaging:default</dependency>\n-  </dependencies>\n </metadata>\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2018-09-22T17:47:47+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/c595661e62f8d9550a9bfb53771021a9d02ee574

Added a changelog line

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex dfc7248c..00012e3d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -18,7 +18,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Prepare for Python 2 / 3 compatibility\n+  [ale-rt, pbauer, tlotze]\n \n - Update resources for plone.app.event.  [agitator]\n \n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2018-09-22T19:00:01+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/a37cb360045a9c5d51dcfb7cd4bcd70bee680dcc

Update classifiers

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 171dcb6f..7d41a5f6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -20,8 +20,9 @@\n         "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        \'Programming Language :: Python :: 2.6\',\n         "Programming Language :: Python :: 2.7",\n+        "Programming Language :: Python :: 3.6",\n+        "Programming Language :: Python :: 3.7",\n     ],\n     keywords=\'Plone upgrade migration\',\n     author=\'Plone Foundation\',\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2018-09-27T14:18:02+02:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/7acb2f3d40d9100f5e90217c5b434ed15bfcc756

Merge pull request #173 from plone/python3

Python3

Files changed:
M CHANGES.rst
M plone/app/upgrade/__init__.py
M plone/app/upgrade/utils.py
M plone/app/upgrade/v40/__init__.py
M plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml
M plone/app/upgrade/v40/tests.py
M plone/app/upgrade/v41/__init__.py
M plone/app/upgrade/v41/tests.py
M plone/app/upgrade/v42/__init__.py
M plone/app/upgrade/v42/tests.py
M plone/app/upgrade/v43/__init__.py
M plone/app/upgrade/v43/tests.py
M plone/app/upgrade/v50/tests.py
M plone/app/upgrade/v51/tests.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex ff4a2042..140b25d2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -22,7 +22,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Prepare for Python 2 / 3 compatibility\n+  [ale-rt, pbauer, tlotze]\n \n - Update resources for plone.app.event.  [agitator]\n \ndiff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex 37d70ac0..61b87a15 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -1,8 +1,8 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.utils import alias_module\n \n-import bbb\n-import bbbd\n+from . import bbb\n+from . import bbbd\n import pkg_resources\n import sys\n \n@@ -16,7 +16,7 @@\n     alias_module(\'zope.app.cache.ram\', zope.ramcache.ram)\n \n if \'products.kupu\' not in pkg_resources.working_set.by_key:\n-    import kupu_bbb\n+    from . import kupu_bbb\n     alias_module(\'Products.kupu.plone.plonelibrarytool\', kupu_bbb)\n \n try:\ndiff --git a/plone/app/upgrade/utils.py b/plone/app/upgrade/utils.py\nindex 82fc1a65..bb17fdba 100644\n--- a/plone/app/upgrade/utils.py\n+++ b/plone/app/upgrade/utils.py\n@@ -7,12 +7,10 @@\n from Products.GenericSetup.registry import _export_step_registry\n from Products.GenericSetup.registry import _import_step_registry\n from Products.ZCatalog.ProgressHandler import ZLogHandler\n-from types import ListType\n-from types import TupleType\n+from types import ModuleType\n from ZODB.POSException import ConflictError\n \n import logging\n-import new\n import pkg_resources\n import sys\n import transaction\n@@ -52,15 +50,15 @@ def safeEditProperty(obj, key, value, data_type=\'string\'):\n def addLinesToProperty(obj, key, values):\n     if obj.hasProperty(key):\n         data = getattr(obj, key)\n-        if isinstance(data, TupleType):\n+        if isinstance(data, tuple):\n             data = list(data)\n-        if isinstance(values, ListType):\n+        if isinstance(values, list):\n             data.extend(values)\n         else:\n             data.append(values)\n         obj._updateProperty(key, data)\n     else:\n-        if not isinstance(values, ListType):\n+        if not isinstance(values, list):\n             values = [values]\n         obj._setProperty(key, values, \'lines\')\n \n@@ -221,7 +219,7 @@ def alias_module(name, target):\n         try:\n             __import__(module_name)\n         except ImportError:\n-            new_module = new.module(module_name)\n+            new_module = ModuleType(module_name)\n             sys.modules[module_name] = new_module\n             if module is not None:\n                 setattr(module, parts[i - 1], new_module)\ndiff --git a/plone/app/upgrade/v40/__init__.py b/plone/app/upgrade/v40/__init__.py\nindex 8b8d5f7d..57a23c6e 100644\n--- a/plone/app/upgrade/v40/__init__.py\n+++ b/plone/app/upgrade/v40/__init__.py\n@@ -1,3 +1,3 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n-import betas  # noqa F401\n+from . import alphas  # noqa F401\n+from . import betas  # noqa F401\ndiff --git a/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml b/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml\nindex 4b72ce39..cf4492ac 100644\n--- a/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml\n+++ b/plone/app/upgrade/v40/profiles/to_alpha1/metadata.xml\n@@ -1,7 +1,4 @@\n <?xml version="1.0"?>\n <metadata>\n   <version>1</version>\n-  <dependencies>\n-    <dependency>profile-plone.app.imaging:default</dependency>\n-  </dependencies>\n </metadata>\ndiff --git a/plone/app/upgrade/v40/tests.py b/plone/app/upgrade/v40/tests.py\nindex 717fc1f0..be5524d0 100644\n--- a/plone/app/upgrade/v40/tests.py\n+++ b/plone/app/upgrade/v40/tests.py\n@@ -33,7 +33,9 @@\n from zope.component import queryUtility\n from zope.ramcache.interfaces.ram import IRAMCache\n \n+import six\n import time\n+import unittest\n \n \n class FakeSecureMailHost(object):\n@@ -668,7 +670,6 @@ def testProfile(self):\n \n \n def test_suite():\n-    import unittest\n-    if not version_match(\'4.0\'):\n+    if not six.PY2 or not version_match(\'4.0\'):\n         return unittest.TestSuite()\n     return unittest.defaultTestLoader.loadTestsFromName(__name__)\ndiff --git a/plone/app/upgrade/v41/__init__.py b/plone/app/upgrade/v41/__init__.py\nindex 401f1ca0..9fb6b049 100644\n--- a/plone/app/upgrade/v41/__init__.py\n+++ b/plone/app/upgrade/v41/__init__.py\n@@ -1,4 +1,4 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n-import betas  # noqa F401\n-import final  # noqa F401\n+from . import alphas  # noqa F401\n+from . import betas  # noqa F401\n+from . import final  # noqa F401\ndiff --git a/plone/app/upgrade/v41/tests.py b/plone/app/upgrade/v41/tests.py\nindex 8d27b6c9..7caf6333 100644\n--- a/plone/app/upgrade/v41/tests.py\n+++ b/plone/app/upgrade/v41/tests.py\n@@ -4,6 +4,7 @@\n from Products.ZCTextIndex.ZCTextIndex import PLexicon\n from Products.ZCTextIndex.ZCTextIndex import ZCTextIndex\n \n+import six\n import unittest\n \n \n@@ -20,3 +21,8 @@ def test_fixOkapiIndexes(self):\n         from plone.app.upgrade.v41.final import fixOkapiIndexes\n         fixOkapiIndexes(catalog)\n         self.assertEqual(0, catalog.Indexes[\'test\'].index._totaldoclen())\n+\n+\n+if not six.PY2:\n+    def test_suite():\n+        return unittest.TestSuite()\ndiff --git a/plone/app/upgrade/v42/__init__.py b/plone/app/upgrade/v42/__init__.py\nindex 401f1ca0..9fb6b049 100644\n--- a/plone/app/upgrade/v42/__init__.py\n+++ b/plone/app/upgrade/v42/__init__.py\n@@ -1,4 +1,4 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n-import betas  # noqa F401\n-import final  # noqa F401\n+from . import alphas  # noqa F401\n+from . import betas  # noqa F401\n+from . import final  # noqa F401\ndiff --git a/plone/app/upgrade/v42/tests.py b/plone/app/upgrade/v42/tests.py\nindex 6db94fef..ef8ba228 100644\n--- a/plone/app/upgrade/v42/tests.py\n+++ b/plone/app/upgrade/v42/tests.py\n@@ -1,8 +1,10 @@\n # -*- coding: utf-8 -*-\n from plone.app.upgrade.tests.base import MigrationTest\n from plone.app.upgrade.utils import loadMigrationProfile\n+from . import betas\n \n-import betas\n+import six\n+import unittest\n \n \n class TestMigrations_v4_2beta1(MigrationTest):\n@@ -24,3 +26,8 @@ def testAddSiteAdminToKeywordRoles(self):\n         betas.to42beta1(self.portal.portal_setup)\n         roles = site_props.allowRolesToAddKeywords\n         self.assertEqual(roles, (\'Manager\', \'Reviewer\', \'Site Administrator\'))\n+\n+\n+if not six.PY2:\n+    def test_suite():\n+        return unittest.TestSuite()\ndiff --git a/plone/app/upgrade/v43/__init__.py b/plone/app/upgrade/v43/__init__.py\nindex ae3ecbfd..0a655b3d 100644\n--- a/plone/app/upgrade/v43/__init__.py\n+++ b/plone/app/upgrade/v43/__init__.py\n@@ -1,2 +1,2 @@\n # -*- coding: utf-8 -*-\n-import alphas  # noqa F401\n+from . import alphas  # noqa F401\ndiff --git a/plone/app/upgrade/v43/tests.py b/plone/app/upgrade/v43/tests.py\nindex e34df873..7f029fc1 100644\n--- a/plone/app/upgrade/v43/tests.py\n+++ b/plone/app/upgrade/v43/tests.py\n@@ -12,8 +12,10 @@\n from zope.contentprovider.interfaces import IContentProvider\n from zope.interface import implementer\n from zope.viewlet.interfaces import IViewlet\n+from . import alphas\n \n-import alphas\n+import six\n+import unittest\n \n \n try:\n@@ -401,3 +403,8 @@ def testCleanupUninstalledProducts(self):\n         profile_registry.unregisterProfile(\'default\', \'newproduct\')\n         profile_registry.unregisterProfile(\'default\', \'installed\')\n         profile_registry.unregisterProfile(\'default\', \'uninstalled\')\n+\n+\n+if not six.PY2:\n+    def test_suite():\n+        return unittest.TestSuite()\ndiff --git a/plone/app/upgrade/v50/tests.py b/plone/app/upgrade/v50/tests.py\nindex afc31f2c..913929a8 100644\n--- a/plone/app/upgrade/v50/tests.py\n+++ b/plone/app/upgrade/v50/tests.py\n@@ -10,7 +10,7 @@\n from zope.component import getMultiAdapter\n from zope.component import getSiteManager\n from zope.component import getUtility\n-\n+import six\n import unittest\n \n \n@@ -181,7 +181,7 @@ def test_fix_double_smaxage(self):\n def test_suite():\n     # Skip these tests on Plone 4\n     from unittest import TestSuite, makeSuite\n-    if not PLONE_5:\n+    if not six.PY2 or not PLONE_5:\n         return TestSuite()\n     else:\n         suite = TestSuite()\ndiff --git a/plone/app/upgrade/v51/tests.py b/plone/app/upgrade/v51/tests.py\nindex 457f6e02..cf8b2f6b 100644\n--- a/plone/app/upgrade/v51/tests.py\n+++ b/plone/app/upgrade/v51/tests.py\n@@ -3,7 +3,7 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.interfaces import IFilterSchema\n from zope.component import getUtility\n-\n+import six\n import unittest\n \n \n@@ -67,7 +67,7 @@ def test_migrate_safe_html_settings(self):\n \n def test_suite():\n     # Skip these tests on Plone 4\n-    if not PLONE_5:\n+    if not six.PY2 or not PLONE_5:\n         return unittest.TestSuite()\n \n     suite = unittest.TestSuite()\ndiff --git a/setup.py b/setup.py\nindex ebe88409..7d41a5f6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -20,8 +20,9 @@\n         "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        \'Programming Language :: Python :: 2.6\',\n         "Programming Language :: Python :: 2.7",\n+        "Programming Language :: Python :: 3.6",\n+        "Programming Language :: Python :: 3.7",\n     ],\n     keywords=\'Plone upgrade migration\',\n     author=\'Plone Foundation\',\n@@ -61,6 +62,7 @@\n         \'plone.contentrules\',\n         \'plone.app.iterate\',\n         \'plone.app.viewletmanager\',\n+        \'six\',\n     ],\n     entry_points="""\n     [z3c.autoinclude.plugin]\n'

