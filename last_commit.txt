Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2018-04-01T01:16:51+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFEditions/commit/6935f6b4cce51ac2677a3084ff46a862c250c7d4

fix versioning for py3

Files changed:
M Products/CMFEditions/ArchivistTool.py
M Products/CMFEditions/ZVCStorageTool.py
M Products/CMFEditions/tests/DummyTools.py

diff --git a/Products/CMFEditions/ArchivistTool.py b/Products/CMFEditions/ArchivistTool.py
index fa16050..1771152 100644
--- a/Products/CMFEditions/ArchivistTool.py
+++ b/Products/CMFEditions/ArchivistTool.py
@@ -54,7 +54,7 @@
 from Products.CMFEditions.utilities import dereference
 from Products.CMFEditions.utilities import KwAsAttributes
 
-from six import StringIO
+from six import BytesIO
 from six.moves.cPickle import Pickler
 from six.moves.cPickle import Unpickler
 from zope.interface import alsoProvides
@@ -70,7 +70,7 @@
 def deepcopy(obj):
     """Makes a deep copy of the object using the pickle mechanism.
     """
-    stream = StringIO()
+    stream = BytesIO()
     p = Pickler(stream, 1)
     p.dump(aq_base(obj))
     stream.seek(0)
@@ -219,7 +219,7 @@ def _cloneByPickle(self, obj):
         else:
             inside_orefs, outside_orefs = (), ()
 
-        stream = StringIO()
+        stream = BytesIO()
         p = Pickler(stream, 1)
         if callbacks is not None:
             p.persistent_id = pers_id
diff --git a/Products/CMFEditions/ZVCStorageTool.py b/Products/CMFEditions/ZVCStorageTool.py
index 74ae411..47fcaa7 100644
--- a/Products/CMFEditions/ZVCStorageTool.py
+++ b/Products/CMFEditions/ZVCStorageTool.py
@@ -54,7 +54,7 @@
 from Products.ZopeVersionControl.Utility import VersionControlError
 from Products.ZopeVersionControl.ZopeRepository import ZopeRepository
 
-from six import StringIO
+from six import BytesIO
 from six.moves.cPickle import dumps
 from six.moves.cPickle import HIGHEST_PROTOCOL
 from six.moves.cPickle import loads
@@ -70,7 +70,7 @@
 logger = logging.getLogger('CMFEditions')
 
 def deepCopy(obj):
-    stream = StringIO()
+    stream = BytesIO()
     p = Pickler(stream, 1)
     p.dump(obj)
     stream.seek(0)
@@ -120,7 +120,7 @@ def getSize(obj):
 
     try:
         # fallback: pickling the object
-        stream = StringIO()
+        stream = BytesIO()
         p = Pickler(stream, 1)
         p.dump(obj)
         size = stream.tell()
@@ -521,11 +521,11 @@ def _encodeMetadata(self, metadata):
             comment = dumps(comment)
         except KeyError:
             comment = ''
-        return '\x00\n'.join((comment, dumps(metadata, HIGHEST_PROTOCOL)))
+        return b'\x00\n'.join((comment, dumps(metadata, HIGHEST_PROTOCOL)))
 
     def _retrieveMetadataFromZVC(self, zvc_histid, zvc_selector):
         logEntry = self._retrieveZVCLogEntry(zvc_histid, zvc_selector)
-        metadata = loads(logEntry.message.split('\x00\n', 1)[1])
+        metadata = loads(logEntry.message.split(b'\x00\n', 1)[1])
         return metadata
 
 
diff --git a/Products/CMFEditions/tests/DummyTools.py b/Products/CMFEditions/tests/DummyTools.py
index 6737a14..1652d63 100644
--- a/Products/CMFEditions/tests/DummyTools.py
+++ b/Products/CMFEditions/tests/DummyTools.py
@@ -19,7 +19,7 @@
 from Products.CMFEditions.interfaces.IStorage import IStreamableReference
 from Products.CMFEditions.utilities import dereference
 
-from six import StringIO
+from six import BytesIO
 from six.moves.cPickle import Pickler
 from six.moves.cPickle import Unpickler
 from zope.interface import implementer
@@ -52,7 +52,7 @@ def getId(self):
         return self.id
 
 def deepCopy(obj):
-    stream = StringIO()
+    stream = BytesIO()
     p = Pickler(stream, 1)
     p.dump(obj)
     stream.seek(0)


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2018-04-03T23:23:25+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFEditions/commit/5fa0d0816c9725e06c430138f4627660c25d6233

Update CHANGES.rst

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index e73c62f..0d5f037 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -17,7 +17,7 @@ New features:
 Bug fixes:
 
 - Make imports Python 3 compatible
-  [ale-rt]
+  [ale-rt, pbauer]
 
 - Don't depend on ZODB version 3 directly
   [tomgross]


Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2018-04-04T14:43:38+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFEditions/commit/fcdb2d16c4e7322ae708285844624bf6e99adf05

Merge pull request #52 from plone/python3

Fix versioning in py3

Files changed:
M CHANGES.rst
M Products/CMFEditions/ArchivistTool.py
M Products/CMFEditions/ZVCStorageTool.py
M Products/CMFEditions/tests/DummyTools.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 6cfc66e..6f11609 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -29,7 +29,7 @@ New features:
 Bug fixes:
 
 - Make imports Python 3 compatible
-  [ale-rt]
+  [ale-rt, pbauer]
 
 - Don't depend on ZODB version 3 directly
   [tomgross]
diff --git a/Products/CMFEditions/ArchivistTool.py b/Products/CMFEditions/ArchivistTool.py
index fa16050..1771152 100644
--- a/Products/CMFEditions/ArchivistTool.py
+++ b/Products/CMFEditions/ArchivistTool.py
@@ -54,7 +54,7 @@
 from Products.CMFEditions.utilities import dereference
 from Products.CMFEditions.utilities import KwAsAttributes
 
-from six import StringIO
+from six import BytesIO
 from six.moves.cPickle import Pickler
 from six.moves.cPickle import Unpickler
 from zope.interface import alsoProvides
@@ -70,7 +70,7 @@
 def deepcopy(obj):
     """Makes a deep copy of the object using the pickle mechanism.
     """
-    stream = StringIO()
+    stream = BytesIO()
     p = Pickler(stream, 1)
     p.dump(aq_base(obj))
     stream.seek(0)
@@ -219,7 +219,7 @@ def _cloneByPickle(self, obj):
         else:
             inside_orefs, outside_orefs = (), ()
 
-        stream = StringIO()
+        stream = BytesIO()
         p = Pickler(stream, 1)
         if callbacks is not None:
             p.persistent_id = pers_id
diff --git a/Products/CMFEditions/ZVCStorageTool.py b/Products/CMFEditions/ZVCStorageTool.py
index 74ae411..47fcaa7 100644
--- a/Products/CMFEditions/ZVCStorageTool.py
+++ b/Products/CMFEditions/ZVCStorageTool.py
@@ -54,7 +54,7 @@
 from Products.ZopeVersionControl.Utility import VersionControlError
 from Products.ZopeVersionControl.ZopeRepository import ZopeRepository
 
-from six import StringIO
+from six import BytesIO
 from six.moves.cPickle import dumps
 from six.moves.cPickle import HIGHEST_PROTOCOL
 from six.moves.cPickle import loads
@@ -70,7 +70,7 @@
 logger = logging.getLogger('CMFEditions')
 
 def deepCopy(obj):
-    stream = StringIO()
+    stream = BytesIO()
     p = Pickler(stream, 1)
     p.dump(obj)
     stream.seek(0)
@@ -120,7 +120,7 @@ def getSize(obj):
 
     try:
         # fallback: pickling the object
-        stream = StringIO()
+        stream = BytesIO()
         p = Pickler(stream, 1)
         p.dump(obj)
         size = stream.tell()
@@ -521,11 +521,11 @@ def _encodeMetadata(self, metadata):
             comment = dumps(comment)
         except KeyError:
             comment = ''
-        return '\x00\n'.join((comment, dumps(metadata, HIGHEST_PROTOCOL)))
+        return b'\x00\n'.join((comment, dumps(metadata, HIGHEST_PROTOCOL)))
 
     def _retrieveMetadataFromZVC(self, zvc_histid, zvc_selector):
         logEntry = self._retrieveZVCLogEntry(zvc_histid, zvc_selector)
-        metadata = loads(logEntry.message.split('\x00\n', 1)[1])
+        metadata = loads(logEntry.message.split(b'\x00\n', 1)[1])
         return metadata
 
 
diff --git a/Products/CMFEditions/tests/DummyTools.py b/Products/CMFEditions/tests/DummyTools.py
index 6737a14..1652d63 100644
--- a/Products/CMFEditions/tests/DummyTools.py
+++ b/Products/CMFEditions/tests/DummyTools.py
@@ -19,7 +19,7 @@
 from Products.CMFEditions.interfaces.IStorage import IStreamableReference
 from Products.CMFEditions.utilities import dereference
 
-from six import StringIO
+from six import BytesIO
 from six.moves.cPickle import Pickler
 from six.moves.cPickle import Unpickler
 from zope.interface import implementer
@@ -52,7 +52,7 @@ def getId(self):
         return self.id
 
 def deepCopy(obj):
-    stream = StringIO()
+    stream = BytesIO()
     p = Pickler(stream, 1)
     p.dump(obj)
     stream.seek(0)


