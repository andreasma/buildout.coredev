Repository: plone.browserlayer


Branch: refs/heads/master
Date: 2018-06-24T14:11:20+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.browserlayer/commit/6a40c04bb5fe537a640d1303b7e494170b7d01f6

fix tests for py3

Files changed:
M plone/browserlayer/README.rst
M plone/browserlayer/tests/test_doctest.py

b"diff --git a/plone/browserlayer/README.rst b/plone/browserlayer/README.rst\nindex df3031b..5962037 100644\n--- a/plone/browserlayer/README.rst\n+++ b/plone/browserlayer/README.rst\n@@ -18,12 +18,12 @@ Before the product is installed, we cannot view this:\n     >>> browser.open(layer['portal'].absolute_url() + '/@@layer-test-view')\n     Traceback (most recent call last):\n     ...\n-    HTTPError: HTTP Error 404: Not Found\n+    urllib.error.HTTPError: HTTP Error 404: Not Found\n \n We can view a view registered for the default layer, though:\n \n     >>> browser.open(layer['portal'].absolute_url() + '/@@standard-test-view')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\n \n However, if we install the product the interface is registered in the local\n@@ -40,14 +40,14 @@ And if we now traverse over the site root and render the view, it should be\n there.\n \n     >>> browser.open(layer['portal'].absolute_url() + '/@@layer-test-view')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A local view\n \n Unlike when applying a new skin, layers installed in this way do not override\n views registered for the default layer.\n \n     >>> browser.open(layer['portal'].absolute_url() + '/@@standard-test-view')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\n \n It is also possible to uninstall a layer:\n@@ -61,7 +61,7 @@ It is also possible to uninstall a layer:\n     >>> browser.open(layer['portal'].absolute_url() + '/@@layer-test-view')\n     Traceback (most recent call last):\n     ...\n-    HTTPError: HTTP Error 404: Not Found\n+    urllib.error.HTTPError: HTTP Error 404: Not Found\n \n GenericSetup support\n --------------------\n@@ -102,11 +102,11 @@ the next three lines are used because of this bug :https://dev.plone.org/ticket/\n And just to prove that everything still works:\n \n     >>> browser.open(layer['portal'].absolute_url() + '/@@layer-test-view')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A local view\n \n     >>> browser.open(layer['portal'].absolute_url() + '/@@standard-test-view')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\n \n We now also have uninstall support.  For the purposes of\n@@ -148,8 +148,8 @@ as expected:\n     >>> browser.open(layer['portal'].absolute_url() + '/@@layer-test-view')\n     Traceback (most recent call last):\n     ...\n-    HTTPError: HTTP Error 404: Not Found\n+    urllib.error.HTTPError: HTTP Error 404: Not Found\n \n     >>> browser.open(layer['portal'].absolute_url() + '/@@standard-test-view')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\ndiff --git a/plone/browserlayer/tests/test_doctest.py b/plone/browserlayer/tests/test_doctest.py\nindex 52a0540..ae839ea 100644\n--- a/plone/browserlayer/tests/test_doctest.py\n+++ b/plone/browserlayer/tests/test_doctest.py\n@@ -1,10 +1,20 @@\n # -*- coding: utf-8 -*-\n from plone.browserlayer.testing import PLONEBROWSERLAYER_FUNCTIONAL_TESTING\n from plone.testing import layered\n+\n import doctest\n+import re\n+import six\n import unittest\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            want = re.sub('urllib.error.HTTPError', 'HTTPError', want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     return unittest.TestSuite([\n         layered(\n@@ -15,6 +25,7 @@ def test_suite():\n                     doctest.ELLIPSIS |\n                     doctest.REPORT_ONLY_FIRST_FAILURE\n                 ),\n+                checker=Py23DocChecker(),\n             ),\n             layer=PLONEBROWSERLAYER_FUNCTIONAL_TESTING\n         )\n"

Repository: plone.browserlayer


Branch: refs/heads/master
Date: 2018-09-18T20:01:38+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.browserlayer/commit/171eb137eb504a135b23c4341f4786b647c33a28

add changelog and classifiers

Files changed:
M CHANGES.rst
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex a991459..c919d81 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix tests for py3\n+  [pbauer]\n \n \n 2.2.1 (2018-02-02)\ndiff --git a/setup.py b/setup.py\nindex 104bcac..67984fa 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -24,6 +24,8 @@\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 2.7",\n+        "Programming Language :: Python :: 3.6",\n+        "Programming Language :: Python :: 3.7",\n     ],\n     keywords=\'plone browser layer\',\n     author=\'Plone Foundation\',\n'

Repository: plone.browserlayer


Branch: refs/heads/master
Date: 2018-09-19T07:48:01+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.browserlayer/commit/fb87c4a5fffa5b6f74fce382b901e4451c35e0d8

Merge pull request #8 from plone/python3

fix tests for py3

Files changed:
M CHANGES.rst
M plone/browserlayer/README.rst
M plone/browserlayer/tests/test_doctest.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex a991459..c919d81 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix tests for py3\n+  [pbauer]\n \n \n 2.2.1 (2018-02-02)\ndiff --git a/plone/browserlayer/README.rst b/plone/browserlayer/README.rst\nindex df3031b..5962037 100644\n--- a/plone/browserlayer/README.rst\n+++ b/plone/browserlayer/README.rst\n@@ -18,12 +18,12 @@ Before the product is installed, we cannot view this:\n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@layer-test-view\')\n     Traceback (most recent call last):\n     ...\n-    HTTPError: HTTP Error 404: Not Found\n+    urllib.error.HTTPError: HTTP Error 404: Not Found\n \n We can view a view registered for the default layer, though:\n \n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@standard-test-view\')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\n \n However, if we install the product the interface is registered in the local\n@@ -40,14 +40,14 @@ And if we now traverse over the site root and render the view, it should be\n there.\n \n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@layer-test-view\')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A local view\n \n Unlike when applying a new skin, layers installed in this way do not override\n views registered for the default layer.\n \n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@standard-test-view\')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\n \n It is also possible to uninstall a layer:\n@@ -61,7 +61,7 @@ It is also possible to uninstall a layer:\n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@layer-test-view\')\n     Traceback (most recent call last):\n     ...\n-    HTTPError: HTTP Error 404: Not Found\n+    urllib.error.HTTPError: HTTP Error 404: Not Found\n \n GenericSetup support\n --------------------\n@@ -102,11 +102,11 @@ the next three lines are used because of this bug :https://dev.plone.org/ticket/\n And just to prove that everything still works:\n \n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@layer-test-view\')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A local view\n \n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@standard-test-view\')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\n \n We now also have uninstall support.  For the purposes of\n@@ -148,8 +148,8 @@ as expected:\n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@layer-test-view\')\n     Traceback (most recent call last):\n     ...\n-    HTTPError: HTTP Error 404: Not Found\n+    urllib.error.HTTPError: HTTP Error 404: Not Found\n \n     >>> browser.open(layer[\'portal\'].absolute_url() + \'/@@standard-test-view\')\n-    >>> print browser.contents\n+    >>> print(browser.contents)\n     A standard view\ndiff --git a/plone/browserlayer/tests/test_doctest.py b/plone/browserlayer/tests/test_doctest.py\nindex 52a0540..ae839ea 100644\n--- a/plone/browserlayer/tests/test_doctest.py\n+++ b/plone/browserlayer/tests/test_doctest.py\n@@ -1,10 +1,20 @@\n # -*- coding: utf-8 -*-\n from plone.browserlayer.testing import PLONEBROWSERLAYER_FUNCTIONAL_TESTING\n from plone.testing import layered\n+\n import doctest\n+import re\n+import six\n import unittest\n \n \n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            want = re.sub(\'urllib.error.HTTPError\', \'HTTPError\', want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n def test_suite():\n     return unittest.TestSuite([\n         layered(\n@@ -15,6 +25,7 @@ def test_suite():\n                     doctest.ELLIPSIS |\n                     doctest.REPORT_ONLY_FIRST_FAILURE\n                 ),\n+                checker=Py23DocChecker(),\n             ),\n             layer=PLONEBROWSERLAYER_FUNCTIONAL_TESTING\n         )\ndiff --git a/setup.py b/setup.py\nindex 104bcac..67984fa 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -24,6 +24,8 @@\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n         "Programming Language :: Python :: 2.7",\n+        "Programming Language :: Python :: 3.6",\n+        "Programming Language :: Python :: 3.7",\n     ],\n     keywords=\'plone browser layer\',\n     author=\'Plone Foundation\',\n'

