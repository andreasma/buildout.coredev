Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2018-06-17T04:45:06+10:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/812d37e740ada39a691f09ef5226497417980d36

Allow related items widget to be used in subforms https://github.com/plone/Products.CMFPlone/issues/2446

Files changed:
M CHANGES.rst
M plone/app/z3cform/widget.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex c3c6db4..1fdac5d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -27,6 +27,8 @@ Bug fixes:\n   brings back the TinyMCE.\n   [sallner]\n \n+- Allow RelatedItems widget to be used in subforms\n+  [tomgross]\n \n 3.0.4 (2018-02-04)\n ------------------\ndiff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py\nindex 269bf76..a671c5a 100644\n--- a/plone/app/z3cform/widget.py\n+++ b/plone/app/z3cform/widget.py\n@@ -1,5 +1,7 @@\n # -*- coding: utf-8 -*-\n+from Acquisition import aq_base\n from Acquisition import ImplicitAcquisitionWrapper\n+from OFS.interfaces import ISimpleItem\n from lxml import etree\n from plone.app.textfield.value import RichTextValue\n from plone.app.textfield.widget import RichTextWidget as patext_RichTextWidget\n@@ -35,6 +37,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import IEditingSchema\n from Products.CMFPlone.utils import safe_unicode\n+from six.moves import UserDict\n from z3c.form.browser.checkbox import SingleCheckBoxWidget\n from z3c.form.browser.select import SelectWidget as z3cform_SelectWidget\n from z3c.form.browser.text import TextWidget as z3cform_TextWidget\n@@ -65,12 +68,6 @@\n import six\n \n \n-try:\n-    from collections import UserDict\n-except ImportError:\n-    from UserDict import UserDict\n-\n-\n class BaseWidget(Widget):\n     """Base widget for z3c.form."""\n \n@@ -125,6 +122,9 @@ def render(self):\n             )\n         return pattern_widget.render()\n \n+    def is_subform_widget(self):\n+        return getattr(aq_base(self.form), \'parentForm\', None) is not None\n+\n \n @implementer_only(IDateWidget)\n class DateWidget(BaseWidget, HTMLInputWidget):\n@@ -486,11 +486,18 @@ def _base_args(self):\n         view_context = get_widget_form(self)\n         # For EditForms and non-Forms (in tests), the vocabulary is looked\n         # up on the context, otherwise on the view\n-        if (\n-            IEditForm.providedBy(view_context) or\n-            not IForm.providedBy(view_context)\n-        ):\n+        if IEditForm.providedBy(view_context):\n+            if self.is_subform_widget():\n+                view_context = self.form.parentForm.context\n+            elif not ISimpleItem.providedBy(context):\n+                view_context = self.form.context\n+            else:\n+                view_context = context\n+        elif not IForm.providedBy(view_context):\n             view_context = context\n+        else:\n+            pass\n+            # view_context is defined above already\n \n         root_search_mode = (\n             args[\'pattern_options\'].get(\'mode\', None) and\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2018-06-18T09:53:58+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/665e20933ec34e4e2f08ed2ad5a2c327efbfe2df

Merge pull request #94 from plone/tg_subforms

Allow related items widget to be used in subforms

Files changed:
M CHANGES.rst
M plone/app/z3cform/widget.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex c3c6db4..1fdac5d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -27,6 +27,8 @@ Bug fixes:\n   brings back the TinyMCE.\n   [sallner]\n \n+- Allow RelatedItems widget to be used in subforms\n+  [tomgross]\n \n 3.0.4 (2018-02-04)\n ------------------\ndiff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py\nindex 269bf76..a671c5a 100644\n--- a/plone/app/z3cform/widget.py\n+++ b/plone/app/z3cform/widget.py\n@@ -1,5 +1,7 @@\n # -*- coding: utf-8 -*-\n+from Acquisition import aq_base\n from Acquisition import ImplicitAcquisitionWrapper\n+from OFS.interfaces import ISimpleItem\n from lxml import etree\n from plone.app.textfield.value import RichTextValue\n from plone.app.textfield.widget import RichTextWidget as patext_RichTextWidget\n@@ -35,6 +37,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces import IEditingSchema\n from Products.CMFPlone.utils import safe_unicode\n+from six.moves import UserDict\n from z3c.form.browser.checkbox import SingleCheckBoxWidget\n from z3c.form.browser.select import SelectWidget as z3cform_SelectWidget\n from z3c.form.browser.text import TextWidget as z3cform_TextWidget\n@@ -65,12 +68,6 @@\n import six\n \n \n-try:\n-    from collections import UserDict\n-except ImportError:\n-    from UserDict import UserDict\n-\n-\n class BaseWidget(Widget):\n     """Base widget for z3c.form."""\n \n@@ -125,6 +122,9 @@ def render(self):\n             )\n         return pattern_widget.render()\n \n+    def is_subform_widget(self):\n+        return getattr(aq_base(self.form), \'parentForm\', None) is not None\n+\n \n @implementer_only(IDateWidget)\n class DateWidget(BaseWidget, HTMLInputWidget):\n@@ -486,11 +486,18 @@ def _base_args(self):\n         view_context = get_widget_form(self)\n         # For EditForms and non-Forms (in tests), the vocabulary is looked\n         # up on the context, otherwise on the view\n-        if (\n-            IEditForm.providedBy(view_context) or\n-            not IForm.providedBy(view_context)\n-        ):\n+        if IEditForm.providedBy(view_context):\n+            if self.is_subform_widget():\n+                view_context = self.form.parentForm.context\n+            elif not ISimpleItem.providedBy(context):\n+                view_context = self.form.context\n+            else:\n+                view_context = context\n+        elif not IForm.providedBy(view_context):\n             view_context = context\n+        else:\n+            pass\n+            # view_context is defined above already\n \n         root_search_mode = (\n             args[\'pattern_options\'].get(\'mode\', None) and\n'

