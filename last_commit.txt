Repository: plone.resource


Branch: refs/heads/master
Date: 2018-03-19T17:15:41+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.resource/commit/6aedb2f38fbe8fb21626cb0e25bef4ed0f87d765

fix exception for py3

Files changed:
M plone/resource/zcml.py

diff --git a/plone/resource/zcml.py b/plone/resource/zcml.py
index 0fd7f69..7a3cd04 100644
--- a/plone/resource/zcml.py
+++ b/plone/resource/zcml.py
@@ -58,7 +58,7 @@ def registerResourceDirectory(_context, directory, name=None, type=None):
         raise ConfigurationError('Traversing to parent directories '
                                  'via .. is not allowed.')
     if not os.path.exists(directory):
-        raise IOError, 'Directory not found: %s' % directory
+        raise IOError('Directory not found: %s' % directory)
 
     if name is None and _context.package:
         name = _context.package.__name__


Repository: plone.resource


Branch: refs/heads/master
Date: 2018-04-01T13:42:46+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.resource/commit/c2f4ec316fddbf76ea59676af48ce0b54044b0b7

use bytes in py2 only

Files changed:
M plone/resource/directory.py

diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index 6cf660f..b85f20c 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -50,7 +50,7 @@ def __repr__(self):
                                       '/'.join(self.context.getPhysicalPath()))
 
     def publishTraverse(self, request, name):
-        if isinstance(name, six.text_type):
+        if six.PY2 and isinstance(name, six.text_type):
             name = name.encode('utf-8')
 
         context = self.context
@@ -74,7 +74,7 @@ def __getitem__(self, name):
         return self.publishTraverse(None, name)
 
     def __setitem__(self, name, item):
-        if isinstance(name, six.text_type):
+        if six.PY2 and isinstance(name, six.text_type):
             name = name.encode('utf-8')
 
         if IResourceDirectory.providedBy(item):
@@ -146,7 +146,7 @@ def makeDirectory(self, path):
         names = path.strip('/').split('/')
         for name in names:
             if name not in parent:
-                if isinstance(name, six.text_type):
+                if six.PY2 and isinstance(name, six.text_type):
                     name = name.encode('utf-8')
                 f = BTreeFolder2(name)
                 parent._setOb(name, f)
@@ -157,8 +157,6 @@ def writeFile(self, path, data):
         if basepath:
             self.makeDirectory(basepath)
         filename = path.split('/')[-1]
-        if isinstance(filename, six.text_type):
-            filename = filename.encode('utf-8')
         f = File(filename, filename, data)
         ct = f.getContentType()
         if ct.startswith('text/') or ct == 'application/javascript':


Repository: plone.resource


Branch: refs/heads/master
Date: 2018-04-29T00:26:25+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.resource/commit/d11962117e96020223b5dee4122bdb42fffca968

More Python 3 fixes

Files changed:
M CHANGES.rst
M plone/resource/directory.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b29bcc7..d5ea899 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- More Python 3 fixes
+  [ale, pbauer]
 
 
 2.0.1 (2018-02-05)
diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index b85f20c..6ffb81b 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -1,11 +1,7 @@
 # -*- coding: utf-8 -*-
-import os.path
-import re
-import zipfile
-
-import six
 from Acquisition import aq_base
 from Acquisition import aq_parent
+from io import StringIO
 from OFS.Image import File
 from OFS.interfaces import IObjectManager
 from plone.resource.events import PloneResourceCreatedEvent
@@ -15,13 +11,17 @@
 from plone.resource.interfaces import IWritableResourceDirectory
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2
 from Products.CMFCore.utils import getToolByName
-from six import StringIO
 from zExceptions import Forbidden
 from zExceptions import NotFound
 from zope.event import notify
 from zope.interface import implementer
 from zope.site.hooks import getSite
 
+import os.path
+import re
+import six
+import zipfile
+
 
 # filter dot files, Mac resource forks
 FILTERS = (r'\..*', '__MACOSX')
@@ -245,7 +245,7 @@ def __getitem__(self, name):
 
     def openFile(self, path):
         filepath = self._resolveSubpath(path)
-        return open(filepath, 'rb')
+        return StringIO(open(filepath, 'rb').read().decode())
 
     def readFile(self, path):
         return self.openFile(path).read()


Repository: plone.resource


Branch: refs/heads/master
Date: 2018-04-29T10:08:04+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.resource/commit/6bc328479b8c3715648038db4fb3db6c90ef7eaa

Fix failing tests in py2

Files changed:
M plone/resource/directory.py

diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index 6ffb81b..1e862d0 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -1,7 +1,6 @@
 # -*- coding: utf-8 -*-
 from Acquisition import aq_base
 from Acquisition import aq_parent
-from io import StringIO
 from OFS.Image import File
 from OFS.interfaces import IObjectManager
 from plone.resource.events import PloneResourceCreatedEvent
@@ -11,6 +10,7 @@
 from plone.resource.interfaces import IWritableResourceDirectory
 from Products.BTreeFolder2.BTreeFolder2 import BTreeFolder2
 from Products.CMFCore.utils import getToolByName
+from six import StringIO
 from zExceptions import Forbidden
 from zExceptions import NotFound
 from zope.event import notify
@@ -245,6 +245,9 @@ def __getitem__(self, name):
 
     def openFile(self, path):
         filepath = self._resolveSubpath(path)
+        if six.PY2:
+            # XXX: why we need StringIO, can't we just return the file?
+            return StringIO(open(filepath, 'rb').read())
         return StringIO(open(filepath, 'rb').read().decode())
 
     def readFile(self, path):


Repository: plone.resource


Branch: refs/heads/master
Date: 2018-04-29T10:23:58+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.resource/commit/78bf94c2a2406735454a2b486137163fd84a0f75

Just return the fp

Files changed:
M plone/resource/directory.py

diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index 1e862d0..d97b8ec 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -245,10 +245,10 @@ def __getitem__(self, name):
 
     def openFile(self, path):
         filepath = self._resolveSubpath(path)
+        mode = u'r'
         if six.PY2:
-            # XXX: why we need StringIO, can't we just return the file?
-            return StringIO(open(filepath, 'rb').read())
-        return StringIO(open(filepath, 'rb').read().decode())
+            mode += u'b'
+        return open(filepath, mode)
 
     def readFile(self, path):
         return self.openFile(path).read()


Repository: plone.resource


Branch: refs/heads/master
Date: 2018-05-02T13:36:25+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.resource/commit/90d53b875ad1639fb006d54cdcceb2ea2b7faa80

Merge pull request #23 from plone/python3

Python 3

Files changed:
M CHANGES.rst
M plone/resource/directory.py
M plone/resource/zcml.py

diff --git a/CHANGES.rst b/CHANGES.rst
index b29bcc7..d5ea899 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- More Python 3 fixes
+  [ale, pbauer]
 
 
 2.0.1 (2018-02-05)
diff --git a/plone/resource/directory.py b/plone/resource/directory.py
index 6cf660f..d97b8ec 100644
--- a/plone/resource/directory.py
+++ b/plone/resource/directory.py
@@ -1,9 +1,4 @@
 # -*- coding: utf-8 -*-
-import os.path
-import re
-import zipfile
-
-import six
 from Acquisition import aq_base
 from Acquisition import aq_parent
 from OFS.Image import File
@@ -22,6 +17,11 @@
 from zope.interface import implementer
 from zope.site.hooks import getSite
 
+import os.path
+import re
+import six
+import zipfile
+
 
 # filter dot files, Mac resource forks
 FILTERS = (r'\..*', '__MACOSX')
@@ -50,7 +50,7 @@ def __repr__(self):
                                       '/'.join(self.context.getPhysicalPath()))
 
     def publishTraverse(self, request, name):
-        if isinstance(name, six.text_type):
+        if six.PY2 and isinstance(name, six.text_type):
             name = name.encode('utf-8')
 
         context = self.context
@@ -74,7 +74,7 @@ def __getitem__(self, name):
         return self.publishTraverse(None, name)
 
     def __setitem__(self, name, item):
-        if isinstance(name, six.text_type):
+        if six.PY2 and isinstance(name, six.text_type):
             name = name.encode('utf-8')
 
         if IResourceDirectory.providedBy(item):
@@ -146,7 +146,7 @@ def makeDirectory(self, path):
         names = path.strip('/').split('/')
         for name in names:
             if name not in parent:
-                if isinstance(name, six.text_type):
+                if six.PY2 and isinstance(name, six.text_type):
                     name = name.encode('utf-8')
                 f = BTreeFolder2(name)
                 parent._setOb(name, f)
@@ -157,8 +157,6 @@ def writeFile(self, path, data):
         if basepath:
             self.makeDirectory(basepath)
         filename = path.split('/')[-1]
-        if isinstance(filename, six.text_type):
-            filename = filename.encode('utf-8')
         f = File(filename, filename, data)
         ct = f.getContentType()
         if ct.startswith('text/') or ct == 'application/javascript':
@@ -247,7 +245,10 @@ def __getitem__(self, name):
 
     def openFile(self, path):
         filepath = self._resolveSubpath(path)
-        return open(filepath, 'rb')
+        mode = u'r'
+        if six.PY2:
+            mode += u'b'
+        return open(filepath, mode)
 
     def readFile(self, path):
         return self.openFile(path).read()
diff --git a/plone/resource/zcml.py b/plone/resource/zcml.py
index 0fd7f69..7a3cd04 100644
--- a/plone/resource/zcml.py
+++ b/plone/resource/zcml.py
@@ -58,7 +58,7 @@ def registerResourceDirectory(_context, directory, name=None, type=None):
         raise ConfigurationError('Traversing to parent directories '
                                  'via .. is not allowed.')
     if not os.path.exists(directory):
-        raise IOError, 'Directory not found: %s' % directory
+        raise IOError('Directory not found: %s' % directory)
 
     if name is None and _context.package:
         name = _context.package.__name__


