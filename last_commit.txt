Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-01-24T12:22:23-03:00
Author: Franco Pellegrini (frapell) <frapell@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/ae53e94fb6aa05f88c2606512c898b9229b8362c

Do not acquire constrain_types_mode from parent when not defined. fixes gh-284

Files changed:
A news/284.bugfix
M plone/app/dexterity/behaviors/constrains.py
M plone/app/dexterity/tests/test_constrains.py

b'diff --git a/news/284.bugfix b/news/284.bugfix\nnew file mode 100644\nindex 0000000..51fb192\n--- /dev/null\n+++ b/news/284.bugfix\n@@ -0,0 +1,2 @@\n+Do not acquire ``constrain_types_mode`` from parent when not defined\n+[frapell]\ndiff --git a/plone/app/dexterity/behaviors/constrains.py b/plone/app/dexterity/behaviors/constrains.py\nindex 4f1daff..615e8f3 100644\n--- a/plone/app/dexterity/behaviors/constrains.py\n+++ b/plone/app/dexterity/behaviors/constrains.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n+from Products.CMFPlone.utils import base_hasattr\n \n \n # constants for enableConstrain. Copied from AT\n@@ -21,7 +22,7 @@ def getConstrainTypesMode(self):\n         and can be adapted to ISelectableConstrainTypes.\n         Else it is DISABLED\n         """\n-        if hasattr(self.context, \'constrain_types_mode\'):\n+        if base_hasattr(self.context, \'constrain_types_mode\'):\n             return self.context.constrain_types_mode\n         parent = self.context.__parent__\n         if not parent:\ndiff --git a/plone/app/dexterity/tests/test_constrains.py b/plone/app/dexterity/tests/test_constrains.py\nindex 33179b6..424ba69 100644\n--- a/plone/app/dexterity/tests/test_constrains.py\n+++ b/plone/app/dexterity/tests/test_constrains.py\n@@ -81,6 +81,19 @@ def test_constrainTypesModeDefault(self):\n             constrains.DISABLED, behavior1.getConstrainTypesMode())\n         self.assertEqual(constrains.ACQUIRE, behavior2.getConstrainTypesMode())\n \n+    def test_constrainTypesAcquireDoesNotMatchParent(self):\n+        """\n+        The inner folder should return constrains.ACQUIRE and not the actual value of its parent\n+        """\n+        behavior1 = ISelectableConstrainTypes(self.folder)\n+        behavior2 = ISelectableConstrainTypes(self.inner_folder)\n+\n+        behavior1.setConstrainTypesMode(constrains.DISABLED)\n+        self.assertEqual(constrains.ACQUIRE, behavior2.getConstrainTypesMode())\n+\n+        behavior1.setConstrainTypesMode(constrains.ENABLED)\n+        self.assertEqual(constrains.ACQUIRE, behavior2.getConstrainTypesMode())\n+\n     def test_constrainTypesModeValidSet(self):\n         behavior = ISelectableConstrainTypes(self.folder)\n         behavior.setConstrainTypesMode(constrains.ENABLED)\n'

Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2019-01-24T21:17:29+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/0bb0f07e9c725e486386b9c3aa6d9acfc2e742e3

Merge pull request #285 from plone/issue-284

Do not acquire constrain_types_mode from parent when not defined.

Files changed:
A news/284.bugfix
M plone/app/dexterity/behaviors/constrains.py
M plone/app/dexterity/tests/test_constrains.py

b'diff --git a/news/284.bugfix b/news/284.bugfix\nnew file mode 100644\nindex 0000000..51fb192\n--- /dev/null\n+++ b/news/284.bugfix\n@@ -0,0 +1,2 @@\n+Do not acquire ``constrain_types_mode`` from parent when not defined\n+[frapell]\ndiff --git a/plone/app/dexterity/behaviors/constrains.py b/plone/app/dexterity/behaviors/constrains.py\nindex 4f1daff..615e8f3 100644\n--- a/plone/app/dexterity/behaviors/constrains.py\n+++ b/plone/app/dexterity/behaviors/constrains.py\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.interfaces.constrains import ISelectableConstrainTypes\n+from Products.CMFPlone.utils import base_hasattr\n \n \n # constants for enableConstrain. Copied from AT\n@@ -21,7 +22,7 @@ def getConstrainTypesMode(self):\n         and can be adapted to ISelectableConstrainTypes.\n         Else it is DISABLED\n         """\n-        if hasattr(self.context, \'constrain_types_mode\'):\n+        if base_hasattr(self.context, \'constrain_types_mode\'):\n             return self.context.constrain_types_mode\n         parent = self.context.__parent__\n         if not parent:\ndiff --git a/plone/app/dexterity/tests/test_constrains.py b/plone/app/dexterity/tests/test_constrains.py\nindex 33179b6..424ba69 100644\n--- a/plone/app/dexterity/tests/test_constrains.py\n+++ b/plone/app/dexterity/tests/test_constrains.py\n@@ -81,6 +81,19 @@ def test_constrainTypesModeDefault(self):\n             constrains.DISABLED, behavior1.getConstrainTypesMode())\n         self.assertEqual(constrains.ACQUIRE, behavior2.getConstrainTypesMode())\n \n+    def test_constrainTypesAcquireDoesNotMatchParent(self):\n+        """\n+        The inner folder should return constrains.ACQUIRE and not the actual value of its parent\n+        """\n+        behavior1 = ISelectableConstrainTypes(self.folder)\n+        behavior2 = ISelectableConstrainTypes(self.inner_folder)\n+\n+        behavior1.setConstrainTypesMode(constrains.DISABLED)\n+        self.assertEqual(constrains.ACQUIRE, behavior2.getConstrainTypesMode())\n+\n+        behavior1.setConstrainTypesMode(constrains.ENABLED)\n+        self.assertEqual(constrains.ACQUIRE, behavior2.getConstrainTypesMode())\n+\n     def test_constrainTypesModeValidSet(self):\n         behavior = ISelectableConstrainTypes(self.folder)\n         behavior.setConstrainTypesMode(constrains.ENABLED)\n'

