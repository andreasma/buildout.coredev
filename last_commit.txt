Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-03-15T15:44:33+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/e9ecc3606d65f16f65d8d2f335173750d27e7b9f

Rebuild the plone.app.redirector information.

Files changed:
A news/2799.feature
A plone/app/upgrade/v52/final.py
M plone/app/upgrade/v52/configure.zcml
M plone/app/upgrade/v52/tests.py

b'diff --git a/news/2799.feature b/news/2799.feature\nnew file mode 100644\nindex 00000000..0289aec6\n--- /dev/null\n+++ b/news/2799.feature\n@@ -0,0 +1,2 @@\n+Added upgrade step to initialize the date and manual information for redirects.\n+[maurits]\ndiff --git a/plone/app/upgrade/v52/configure.zcml b/plone/app/upgrade/v52/configure.zcml\nindex f6493098..843dace1 100644\n--- a/plone/app/upgrade/v52/configure.zcml\n+++ b/plone/app/upgrade/v52/configure.zcml\n@@ -56,9 +56,9 @@\n         profile="Products.CMFPlone:plone">\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            description=""\n-            handler="..utils.null_upgrade_step"\n+            title="Rebuild the plone.app.redirector information."\n+            description="This initializes the date and manual information."\n+            handler=".final.rebuild_redirections"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v52/final.py b/plone/app/upgrade/v52/final.py\nnew file mode 100644\nindex 00000000..6170cb9b\n--- /dev/null\n+++ b/plone/app/upgrade/v52/final.py\n@@ -0,0 +1,29 @@\n+# -*- coding: utf-8 -*-\n+from zope.component import getUtility\n+\n+import logging\n+\n+\n+logger = logging.getLogger(\'plone.app.upgrade\')\n+\n+\n+def rebuild_redirections(context):\n+    """Rebuild the plone.app.redirector information.\n+\n+    This initializes the date and manual information.\n+    """\n+    from plone.app.redirector.interfaces import IRedirectionStorage\n+\n+    storage = getUtility(IRedirectionStorage)\n+    if not hasattr(storage, \'_rebuild\'):\n+        logger.warning(\n+            \'Not rebuilding redirections: \'\n+            \'IRedirectionStorage misses the _rebuild method. \'\n+        )\n+        return\n+    logger.info(\n+        \'Starting rebuild of redirections to \'\n+        \'add date and manual information.\'\n+    )\n+    storage._rebuild()\n+    logger.info(\'Done rebuilding redirections.\')\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex 91751900..67520c2a 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -1,8 +1,10 @@\n # -*- coding: utf-8 -*-\n+from DateTime import DateTime\n from pkg_resources import get_distribution\n from pkg_resources import parse_version\n from plone.app.testing import PLONE_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n+from zope.component import getUtility\n \n import unittest\n \n@@ -13,10 +15,54 @@ class UpgradeMemberData51to52Test(unittest.TestCase):\n     def test_rebuild_member_data(self):\n         portal = self.layer[\'portal\']\n         from plone.app.upgrade.v52.alphas import rebuild_memberdata\n+\n         rebuild_memberdata(portal)\n         tool = getToolByName(portal, \'portal_memberdata\')\n-        self.assertIn(\n-            \'test_user_1_\', tool._members.keys())\n+        self.assertIn(\'test_user_1_\', tool._members.keys())\n+\n+\n+class Various52Test(unittest.TestCase):\n+    layer = PLONE_INTEGRATION_TESTING\n+\n+    def test_rebuild_redirections(self):\n+        # Until at least 5.2rc1, redirection values were simple paths,\n+        # now they are tuples.  The upgrade step rebuilds the information.\n+        # (The code can at the moment handle old-style and new-style,\n+        # but rebuilding is still good.)\n+        from plone.app.redirector.interfaces import IRedirectionStorage\n+        from plone.app.upgrade.v52.final import rebuild_redirections\n+\n+        storage = getUtility(IRedirectionStorage)\n+        # add old-style redirect directly in internal structure:\n+        old = \'/plone/old\'\n+        new = \'/plone/new\'\n+        storage._paths[old] = new\n+        # get_full mocks a new-style redirect,\n+        # though with None instead of a DateTime, and manual always True.\n+        self.assertTupleEqual(storage.get_full(old), (new, None, True))\n+        portal = self.layer[\'portal\']\n+        # Run the rebuild, and keep track of time before and after.\n+        time1 = DateTime()\n+        rebuild_redirections(portal.portal_setup)\n+        time2 = DateTime()\n+        # The basic information and usage has not changed:\n+        self.assertIn(old, storage)\n+        self.assertListEqual(storage.redirects(new), [old])\n+        self.assertEqual(storage.get(old), new)\n+        self.assertEqual(storage[old], new)\n+        # The internal structure is now a tuple:\n+        redirect = storage._paths[old]\n+        self.assertIsInstance(redirect, tuple)\n+        # The first item in the tuple is the target path.\n+        self.assertEqual(redirect[0], new)\n+        # The current DateTime is set as the creation time of the redirect.\n+        self.assertIsInstance(redirect[1], DateTime)\n+        self.assertTrue(time1 < redirect[1] < time2)\n+        # Existing migrations are marked as manual,\n+        # because we have no way of knowing if it is automatic or nor.\n+        self.assertEqual(redirect[2], True)\n+        # get_full now returns the real information\n+        self.assertTupleEqual(storage.get_full(old), redirect)\n \n \n def test_suite():\n@@ -26,7 +72,6 @@ def test_suite():\n         return unittest.TestSuite()\n \n     suite = unittest.TestSuite()\n-    suite.addTest(\n-        unittest.makeSuite(UpgradeMemberData51to52Test),\n-    )\n+    suite.addTest(unittest.makeSuite(UpgradeMemberData51to52Test))\n+    suite.addTest(unittest.makeSuite(Various52Test))\n     return suite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2019-04-11T11:05:03+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/e7e731e6fc0ae926122fac1b87e211c8745cbdab

Merge pull request #202 from plone/maurits-extend-paths

Rebuild the plone.app.redirector information.

Files changed:
A news/2799.feature
A plone/app/upgrade/v52/final.py
M plone/app/upgrade/v52/configure.zcml
M plone/app/upgrade/v52/tests.py

b'diff --git a/news/2799.feature b/news/2799.feature\nnew file mode 100644\nindex 00000000..0289aec6\n--- /dev/null\n+++ b/news/2799.feature\n@@ -0,0 +1,2 @@\n+Added upgrade step to initialize the date and manual information for redirects.\n+[maurits]\ndiff --git a/plone/app/upgrade/v52/configure.zcml b/plone/app/upgrade/v52/configure.zcml\nindex f6493098..843dace1 100644\n--- a/plone/app/upgrade/v52/configure.zcml\n+++ b/plone/app/upgrade/v52/configure.zcml\n@@ -56,9 +56,9 @@\n         profile="Products.CMFPlone:plone">\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            description=""\n-            handler="..utils.null_upgrade_step"\n+            title="Rebuild the plone.app.redirector information."\n+            description="This initializes the date and manual information."\n+            handler=".final.rebuild_redirections"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v52/final.py b/plone/app/upgrade/v52/final.py\nnew file mode 100644\nindex 00000000..6170cb9b\n--- /dev/null\n+++ b/plone/app/upgrade/v52/final.py\n@@ -0,0 +1,29 @@\n+# -*- coding: utf-8 -*-\n+from zope.component import getUtility\n+\n+import logging\n+\n+\n+logger = logging.getLogger(\'plone.app.upgrade\')\n+\n+\n+def rebuild_redirections(context):\n+    """Rebuild the plone.app.redirector information.\n+\n+    This initializes the date and manual information.\n+    """\n+    from plone.app.redirector.interfaces import IRedirectionStorage\n+\n+    storage = getUtility(IRedirectionStorage)\n+    if not hasattr(storage, \'_rebuild\'):\n+        logger.warning(\n+            \'Not rebuilding redirections: \'\n+            \'IRedirectionStorage misses the _rebuild method. \'\n+        )\n+        return\n+    logger.info(\n+        \'Starting rebuild of redirections to \'\n+        \'add date and manual information.\'\n+    )\n+    storage._rebuild()\n+    logger.info(\'Done rebuilding redirections.\')\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex 91751900..67520c2a 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -1,8 +1,10 @@\n # -*- coding: utf-8 -*-\n+from DateTime import DateTime\n from pkg_resources import get_distribution\n from pkg_resources import parse_version\n from plone.app.testing import PLONE_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n+from zope.component import getUtility\n \n import unittest\n \n@@ -13,10 +15,54 @@ class UpgradeMemberData51to52Test(unittest.TestCase):\n     def test_rebuild_member_data(self):\n         portal = self.layer[\'portal\']\n         from plone.app.upgrade.v52.alphas import rebuild_memberdata\n+\n         rebuild_memberdata(portal)\n         tool = getToolByName(portal, \'portal_memberdata\')\n-        self.assertIn(\n-            \'test_user_1_\', tool._members.keys())\n+        self.assertIn(\'test_user_1_\', tool._members.keys())\n+\n+\n+class Various52Test(unittest.TestCase):\n+    layer = PLONE_INTEGRATION_TESTING\n+\n+    def test_rebuild_redirections(self):\n+        # Until at least 5.2rc1, redirection values were simple paths,\n+        # now they are tuples.  The upgrade step rebuilds the information.\n+        # (The code can at the moment handle old-style and new-style,\n+        # but rebuilding is still good.)\n+        from plone.app.redirector.interfaces import IRedirectionStorage\n+        from plone.app.upgrade.v52.final import rebuild_redirections\n+\n+        storage = getUtility(IRedirectionStorage)\n+        # add old-style redirect directly in internal structure:\n+        old = \'/plone/old\'\n+        new = \'/plone/new\'\n+        storage._paths[old] = new\n+        # get_full mocks a new-style redirect,\n+        # though with None instead of a DateTime, and manual always True.\n+        self.assertTupleEqual(storage.get_full(old), (new, None, True))\n+        portal = self.layer[\'portal\']\n+        # Run the rebuild, and keep track of time before and after.\n+        time1 = DateTime()\n+        rebuild_redirections(portal.portal_setup)\n+        time2 = DateTime()\n+        # The basic information and usage has not changed:\n+        self.assertIn(old, storage)\n+        self.assertListEqual(storage.redirects(new), [old])\n+        self.assertEqual(storage.get(old), new)\n+        self.assertEqual(storage[old], new)\n+        # The internal structure is now a tuple:\n+        redirect = storage._paths[old]\n+        self.assertIsInstance(redirect, tuple)\n+        # The first item in the tuple is the target path.\n+        self.assertEqual(redirect[0], new)\n+        # The current DateTime is set as the creation time of the redirect.\n+        self.assertIsInstance(redirect[1], DateTime)\n+        self.assertTrue(time1 < redirect[1] < time2)\n+        # Existing migrations are marked as manual,\n+        # because we have no way of knowing if it is automatic or nor.\n+        self.assertEqual(redirect[2], True)\n+        # get_full now returns the real information\n+        self.assertTupleEqual(storage.get_full(old), redirect)\n \n \n def test_suite():\n@@ -26,7 +72,6 @@ def test_suite():\n         return unittest.TestSuite()\n \n     suite = unittest.TestSuite()\n-    suite.addTest(\n-        unittest.makeSuite(UpgradeMemberData51to52Test),\n-    )\n+    suite.addTest(unittest.makeSuite(UpgradeMemberData51to52Test))\n+    suite.addTest(unittest.makeSuite(Various52Test))\n     return suite\n'

