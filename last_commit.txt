Repository: plone.versioncheck


Branch: refs/heads/master
Date: 2018-08-14T13:56:55+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.versioncheck/commit/8b186b787707ffe79eb757a73094984ef3caaf3b

Better handling of relative paths as entry

Files changed:
M CHANGES.rst
M src/plone/versioncheck/parser.py
M src/plone/versioncheck/tracking.py
M src/plone/versioncheck/utils.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 3d0f0e6..e82137d 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,6 +14,9 @@ New features:\n \n Bug fixes:\n \n+- Better handling of relative paths as entry, like ``project/foo/dev.cfg``.\n+  [jensens]\n+\n - If a file does not extend any other file, \n   the return statement was returning only one parameter, \n   while callers expected 2.\ndiff --git a/src/plone/versioncheck/parser.py b/src/plone/versioncheck/parser.py\nindex 4ee96ec..7095774 100644\n--- a/src/plone/versioncheck/parser.py\n+++ b/src/plone/versioncheck/parser.py\n@@ -69,7 +69,7 @@ def _extract_versions_section(  # NOQA: C901\n     config = ConfigParser()\n     if os.path.isfile(filename):\n         config.read(filename)\n-    else:\n+    elif \'://\' in filename:\n         resp = session.get(filename)\n         config.readfp(StringIO(resp.text))\n         if resp.from_cache:\n@@ -78,6 +78,8 @@ def _extract_versions_section(  # NOQA: C901\n             sys.stderr.write(\'\\n  ERROR {0:d}\'.format(resp.status_code))\n         else:\n             sys.stderr.write(\'\\n  fresh from server\')\n+    else:\n+        raise ValueError(\'{0} does not exist!\'.format(filename))\n \n     # first read own versions section\n     current_version_section_name = buildout[\'buildout\'].get(\n@@ -132,7 +134,7 @@ def _extract_versions_section(  # NOQA: C901\n         extend = extend.strip()\n         if not extend:\n             continue\n-        sub_relative = find_relative(extend) or relative\n+        sub_relative, extend = find_relative(extend, relative)\n         _extract_versions_section(\n             session,\n             extend,\n@@ -150,7 +152,7 @@ def parse(buildout_filename, nocache=False):\n     sys.stderr.write(\'Parsing buildout files:\')\n     if nocache:\n         sys.stderr.write(\'\\n(not using caches)\')\n-    base_relative = find_relative(buildout_filename)\n+    base_relative, buildout_filename = find_relative(buildout_filename)\n     session = requests_session(nocache=nocache)\n     version_sections, annotations = _extract_versions_section(\n         session,\ndiff --git a/src/plone/versioncheck/tracking.py b/src/plone/versioncheck/tracking.py\nindex 6b20dbf..db1a490 100644\n--- a/src/plone/versioncheck/tracking.py\n+++ b/src/plone/versioncheck/tracking.py\n@@ -78,7 +78,7 @@ def install(buildout):\n \n def get(pkginfo, buildout):\n     filepath = TRACKINGFILENAME\n-    relative = find_relative(buildout)\n+    relative, filename = find_relative(buildout)\n     if relative:\n         filepath = os.path.join(relative, TRACKINGFILENAME)\n     if not os.path.exists(filepath):\ndiff --git a/src/plone/versioncheck/utils.py b/src/plone/versioncheck/utils.py\nindex 81403df..c3492f5 100644\n--- a/src/plone/versioncheck/utils.py\n+++ b/src/plone/versioncheck/utils.py\n@@ -88,13 +88,22 @@ def requests_session(nocache=False):\n     )\n \n \n-def find_relative(extend):\n+def find_relative(extend, relative=\'\'):\n+    """the base dir or url and the actual filename as tuple\n+    """\n     if \'://\' in extend:\n         parts = list(urlparse(extend))\n-        parts[2] = \'/\'.join(parts[2].split(\'/\')[:-1])\n-        return urlunparse(parts)\n-    elif \'/\' in extend:\n-        return os.path.dirname(extend)\n+        path = parts[2].split(\'/\')\n+        parts[2] = \'/\'.join(path[:-1])\n+        return urlunparse(parts), path[-1]\n+    if \'://\' in relative:\n+        return \'/\'.join(relative.strip(\'/\'), extend.strip(\'/\'))\n+    if relative:\n+        extend = os.path.join(relative, extend)\n+    return (\n+        os.path.dirname(os.path.abspath(extend)),\n+        os.path.basename(extend),\n+    )\n \n ###########################################################\n # below copied from https://gist.github.com/jtriley/1108174\n'

