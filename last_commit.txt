Repository: plone.app.event


Branch: refs/heads/master
Date: 2019-05-18T13:49:44+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.event/commit/3d466a90d3f79da1c3d1ec41b0960a9dc9623256

Add regression-test for https://github.com/zopefoundation/Zope/issues/397

Files changed:
A news/306.bugfix
A plone/app/event/tests/test_ical_import.py

b'diff --git a/news/306.bugfix b/news/306.bugfix\nnew file mode 100644\nindex 00000000..d8af36f3\n--- /dev/null\n+++ b/news/306.bugfix\n@@ -0,0 +1,2 @@\n+Add regression-test for allowed_attributes. See https://github.com/zopefoundation/Zope/issues/397\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/event/tests/test_ical_import.py b/plone/app/event/tests/test_ical_import.py\nnew file mode 100644\nindex 00000000..70c9b68c\n--- /dev/null\n+++ b/plone/app/event/tests/test_ical_import.py\n@@ -0,0 +1,69 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.event.interfaces import IICalendarImportEnabled\n+from plone.app.event.ical.importer import IcalendarImportSettingsFormView\n+from plone.app.event.testing import PAEventDX_FUNCTIONAL_TESTING\n+from plone.app.testing import setRoles\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.app.testing import TEST_USER_ID\n+from plone.testing.z2 import Browser\n+\n+import transaction\n+import unittest\n+\n+\n+class TestICALImportSettings(unittest.TestCase):\n+\n+    layer = PAEventDX_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        app = self.layer[\'app\']\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        self.browser = Browser(app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            \'Basic %s:%s\' % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD,)\n+        )\n+\n+    def test_enable_ical_import(self):\n+        """Test that ical import can be enabled/disabled in the browser.\n+        Failed in Zope4: https://github.com/zopefoundation/Zope/issues/397\n+        """\n+        self.portal.invokeFactory(\'Folder\', \'f1\')\n+        f1 = self.portal[\'f1\']\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # enable/disable with the view\n+        view = IcalendarImportSettingsFormView(f1, self.request)\n+        view.enable()\n+        self.assertTrue(IICalendarImportEnabled.providedBy(f1))\n+        view.disable()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # enable/disable with traversal\n+        enable_method = f1.restrictedTraverse(\'ical_import_settings/enable\')\n+        enable_method()\n+        self.assertTrue(IICalendarImportEnabled.providedBy(f1))\n+        disable_method = f1.restrictedTraverse(\'ical_import_settings/disable\')\n+        disable_method()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # enable/disable in the browser\n+        transaction.commit()\n+        f1_url = f1.absolute_url()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+        self.browser.open(f1_url + \'/ical_import_settings/enable\')\n+        self.browser.getControl(\'Confirm action\').click()\n+        self.assertTrue(IICalendarImportEnabled.providedBy(f1))\n+        self.browser.open(f1_url + \'/ical_import_settings/disable\')\n+        self.browser.getControl(\'Confirm action\').click()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # the form can be rendered\n+        self.browser.open(f1_url + \'/ical_import_settings\')\n+        self.assertIn(\n+            \'URL to an external icalendar resource file\',\n+            self.browser.contents)\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2019-06-21T11:37:50+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.event/commit/727fb233136bf8147155236f829abe3b59a4ee05

Merge pull request #306 from plone/add_regression_test_for_allowed_attributes

Add regression-test for allowed_attributes

Files changed:
A news/306.bugfix
A plone/app/event/tests/test_ical_import.py

b'diff --git a/news/306.bugfix b/news/306.bugfix\nnew file mode 100644\nindex 00000000..d8af36f3\n--- /dev/null\n+++ b/news/306.bugfix\n@@ -0,0 +1,2 @@\n+Add regression-test for allowed_attributes. See https://github.com/zopefoundation/Zope/issues/397\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/event/tests/test_ical_import.py b/plone/app/event/tests/test_ical_import.py\nnew file mode 100644\nindex 00000000..70c9b68c\n--- /dev/null\n+++ b/plone/app/event/tests/test_ical_import.py\n@@ -0,0 +1,69 @@\n+# -*- coding: utf-8 -*-\n+from plone.app.event.interfaces import IICalendarImportEnabled\n+from plone.app.event.ical.importer import IcalendarImportSettingsFormView\n+from plone.app.event.testing import PAEventDX_FUNCTIONAL_TESTING\n+from plone.app.testing import setRoles\n+from plone.app.testing import SITE_OWNER_NAME\n+from plone.app.testing import SITE_OWNER_PASSWORD\n+from plone.app.testing import TEST_USER_ID\n+from plone.testing.z2 import Browser\n+\n+import transaction\n+import unittest\n+\n+\n+class TestICALImportSettings(unittest.TestCase):\n+\n+    layer = PAEventDX_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        app = self.layer[\'app\']\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+        self.browser = Browser(app)\n+        self.browser.handleErrors = False\n+        self.browser.addHeader(\n+            \'Authorization\',\n+            \'Basic %s:%s\' % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD,)\n+        )\n+\n+    def test_enable_ical_import(self):\n+        """Test that ical import can be enabled/disabled in the browser.\n+        Failed in Zope4: https://github.com/zopefoundation/Zope/issues/397\n+        """\n+        self.portal.invokeFactory(\'Folder\', \'f1\')\n+        f1 = self.portal[\'f1\']\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # enable/disable with the view\n+        view = IcalendarImportSettingsFormView(f1, self.request)\n+        view.enable()\n+        self.assertTrue(IICalendarImportEnabled.providedBy(f1))\n+        view.disable()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # enable/disable with traversal\n+        enable_method = f1.restrictedTraverse(\'ical_import_settings/enable\')\n+        enable_method()\n+        self.assertTrue(IICalendarImportEnabled.providedBy(f1))\n+        disable_method = f1.restrictedTraverse(\'ical_import_settings/disable\')\n+        disable_method()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # enable/disable in the browser\n+        transaction.commit()\n+        f1_url = f1.absolute_url()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+        self.browser.open(f1_url + \'/ical_import_settings/enable\')\n+        self.browser.getControl(\'Confirm action\').click()\n+        self.assertTrue(IICalendarImportEnabled.providedBy(f1))\n+        self.browser.open(f1_url + \'/ical_import_settings/disable\')\n+        self.browser.getControl(\'Confirm action\').click()\n+        self.assertFalse(IICalendarImportEnabled.providedBy(f1))\n+\n+        # the form can be rendered\n+        self.browser.open(f1_url + \'/ical_import_settings\')\n+        self.assertIn(\n+            \'URL to an external icalendar resource file\',\n+            self.browser.contents)\n'

