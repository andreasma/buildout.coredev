Repository: Products.Archetypes


Branch: refs/heads/master
Date: 2018-10-06T12:25:18+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.Archetypes/commit/6acd9badb9666bbe5c7338282c023bcbd7ee42cc

Use check_id function from CMFPlone.utils.

Files changed:
A news/118.bugfix
M Products/Archetypes/BaseObject.py

b'diff --git a/Products/Archetypes/BaseObject.py b/Products/Archetypes/BaseObject.py\nindex 0359330d..8445f549 100644\n--- a/Products/Archetypes/BaseObject.py\n+++ b/Products/Archetypes/BaseObject.py\n@@ -47,6 +47,7 @@\n \n from Products.CMFCore import permissions\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import check_id\n \n from Referenceable import Referenceable\n \n@@ -768,19 +769,15 @@ def _renameAfterCreation(self, check_auto_id=False):\n         if new_id is None:\n             return False\n \n-        invalid_id = True\n-        check_id = getattr(self, \'check_id\', None)\n-        if check_id is not None:\n-            invalid_id = check_id(new_id, required=1)\n+        invalid_id = check_id(self, new_id, required=1)\n \n         # If check_id told us no, or if it was not found, make sure we have an\n         # id unique in the parent folder.\n         if invalid_id:\n             unique_id = self._findUniqueId(new_id)\n             if unique_id is not None:\n-                if check_id is None or check_id(new_id, required=1):\n-                    new_id = unique_id\n-                    invalid_id = False\n+                new_id = unique_id\n+                invalid_id = False\n \n         if not invalid_id:\n             # Can\'t rename without a subtransaction commit when using\n@@ -798,20 +795,14 @@ def _findUniqueId(self, id):\n         # appending -n, where n is a number between 1 and the constant\n         # RENAME_AFTER_CREATION_ATTEMPTS, set in config.py. If no id can be\n         # found, return None.\n-        check_id = getattr(self, \'check_id\', None)\n-        if check_id is None:\n-            parent = aq_parent(aq_inner(self))\n-            parent_ids = parent.objectIds()\n-            check_id = lambda id, required: id in parent_ids\n-\n-        invalid_id = check_id(id, required=1)\n+        invalid_id = check_id(self, id, required=1)\n         if not invalid_id:\n             return id\n \n         idx = 1\n         while idx <= RENAME_AFTER_CREATION_ATTEMPTS:\n             new_id = "%s-%d" % (id, idx)\n-            if not check_id(new_id, required=1):\n+            if not check_id(self, new_id, required=1):\n                 return new_id\n             idx += 1\n \ndiff --git a/news/118.bugfix b/news/118.bugfix\nnew file mode 100644\nindex 00000000..95463ae6\n--- /dev/null\n+++ b/news/118.bugfix\n@@ -0,0 +1 @@\n+Use new utils.check_id from CMFPlone.  [maurits]\n'

Repository: Products.Archetypes


Branch: refs/heads/master
Date: 2018-10-22T21:22:43+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.Archetypes/commit/1007cc25a0622fd9e450f02d9ee76037b29cc8db

Merge pull request #119 from plone/use-check-id-function

Use check_id function from CMFPlone.utils.

Files changed:
A news/118.bugfix
M Products/Archetypes/BaseObject.py

b'diff --git a/Products/Archetypes/BaseObject.py b/Products/Archetypes/BaseObject.py\nindex 0359330d..8445f549 100644\n--- a/Products/Archetypes/BaseObject.py\n+++ b/Products/Archetypes/BaseObject.py\n@@ -47,6 +47,7 @@\n \n from Products.CMFCore import permissions\n from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone.utils import check_id\n \n from Referenceable import Referenceable\n \n@@ -768,19 +769,15 @@ def _renameAfterCreation(self, check_auto_id=False):\n         if new_id is None:\n             return False\n \n-        invalid_id = True\n-        check_id = getattr(self, \'check_id\', None)\n-        if check_id is not None:\n-            invalid_id = check_id(new_id, required=1)\n+        invalid_id = check_id(self, new_id, required=1)\n \n         # If check_id told us no, or if it was not found, make sure we have an\n         # id unique in the parent folder.\n         if invalid_id:\n             unique_id = self._findUniqueId(new_id)\n             if unique_id is not None:\n-                if check_id is None or check_id(new_id, required=1):\n-                    new_id = unique_id\n-                    invalid_id = False\n+                new_id = unique_id\n+                invalid_id = False\n \n         if not invalid_id:\n             # Can\'t rename without a subtransaction commit when using\n@@ -798,20 +795,14 @@ def _findUniqueId(self, id):\n         # appending -n, where n is a number between 1 and the constant\n         # RENAME_AFTER_CREATION_ATTEMPTS, set in config.py. If no id can be\n         # found, return None.\n-        check_id = getattr(self, \'check_id\', None)\n-        if check_id is None:\n-            parent = aq_parent(aq_inner(self))\n-            parent_ids = parent.objectIds()\n-            check_id = lambda id, required: id in parent_ids\n-\n-        invalid_id = check_id(id, required=1)\n+        invalid_id = check_id(self, id, required=1)\n         if not invalid_id:\n             return id\n \n         idx = 1\n         while idx <= RENAME_AFTER_CREATION_ATTEMPTS:\n             new_id = "%s-%d" % (id, idx)\n-            if not check_id(new_id, required=1):\n+            if not check_id(self, new_id, required=1):\n                 return new_id\n             idx += 1\n \ndiff --git a/news/118.bugfix b/news/118.bugfix\nnew file mode 100644\nindex 00000000..95463ae6\n--- /dev/null\n+++ b/news/118.bugfix\n@@ -0,0 +1 @@\n+Use new utils.check_id from CMFPlone.  [maurits]\n'

