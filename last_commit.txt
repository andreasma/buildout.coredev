Repository: plone.outputfilters


Branch: refs/heads/master
Date: 2020-01-03T16:57:27+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.outputfilters/commit/9b2671e966dc750a010793ae0f153b3927e9e90c

Change the image caption template to use ``&lt;figure&gt;`` and ``&lt;figcaption&gt;``.

Files changed:
M CHANGES.rst
M plone/outputfilters/browser/captioned_image.pt
M plone/outputfilters/tests/test_resolveuid_and_caption.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex b62aeff..811b9f2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,12 +1,13 @@\n Changelog\n =========\n \n-3.1.3 (unreleased)\n-------------------\n+4.0 (unreleased)\n+----------------\n \n Breaking changes:\n \n-- *add item here*\n+- Change the image caption template to use ``<figure>`` and ``<figcaption>``.\n+  [thet]\n \n New features:\n \ndiff --git a/plone/outputfilters/browser/captioned_image.pt b/plone/outputfilters/browser/captioned_image.pt\nindex 3807e38..8f4a9a8 100644\n--- a/plone/outputfilters/browser/captioned_image.pt\n+++ b/plone/outputfilters/browser/captioned_image.pt\n@@ -1,8 +1,6 @@\n-<dl tal:attributes="class options/class;">\n-<dt><a tal:omit-tag="options/isfullsize" rel="lightbox"\n-   tal:attributes="href options/url_path;"\n-   tal:content="structure options/tag">[image goes here]</a></dt>\n- <dd class="image-caption"\n-     tal:content="options/caption|nothing">\n- </dd>\n-</dl>\n+<figure tal:attributes="class options/class;">\n+  <a tal:omit-tag="options/isfullsize" rel="lightbox"\n+      tal:attributes="href options/url_path;"\n+      tal:content="structure options/tag">[image goes here]</a>\n+  <figcaption class="image-caption" tal:content="options/caption|nothing"></figcaption>\n+</figure>\ndiff --git a/plone/outputfilters/tests/test_resolveuid_and_caption.py b/plone/outputfilters/tests/test_resolveuid_and_caption.py\nindex bf55244..0cbab32 100644\n--- a/plone/outputfilters/tests/test_resolveuid_and_caption.py\n+++ b/plone/outputfilters/tests/test_resolveuid_and_caption.py\n@@ -266,10 +266,10 @@ def test_image_captioning_in_news_item(self):\n \n         # Test captioning\n         output = news_item.text.output\n-        text_out = """<span><dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>\n+        text_out = """<span><figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>\n </span>"""\n         self._assertTransformsTo(output, text_out)\n \n@@ -280,18 +280,18 @@ def test_image_captioning_absolutizes_uncaptioned_image(self):\n \n     def test_image_captioning_absolute_path(self):\n         text_in = """<img class="captioned" src="/image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_relative_path(self):\n         text_in = """<img class="captioned" src="image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_relative_path_private_folder(self):\n@@ -309,42 +309,42 @@ def test_image_captioning_relative_path_private_folder(self):\n         self.logout()\n \n         text_in = """<img class="captioned" src="private/image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My private image caption" height="331" src="http://nohost/plone/private/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My private image caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My private image caption" height="331" src="http://nohost/plone/private/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My private image caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_relative_path_scale(self):\n         text_in = """<img class="captioned" src="image.jpg/@@images/image/thumb"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid(self):\n         text_in = """<img class="captioned" src="resolveuid/%s"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_scale(self):\n         text_in = """<img class="captioned" src="resolveuid/%s/@@images/image/thumb"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_new_scale(self):\n         text_in = """<img class="captioned" src="resolveuid/%s/@@images/image/thumb"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_new_scale_plone_namedfile(self):\n@@ -355,10 +355,10 @@ def test_image_captioning_resolveuid_new_scale_plone_namedfile(self):\n \n     def test_image_captioning_resolveuid_no_scale(self):\n         text_in = """<img class="captioned" src="resolveuid/%s/@@images/image"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_no_scale_plone_namedfile(self):\n@@ -385,26 +385,26 @@ def test_image_captioning_external_url(self):\n \n     def test_image_captioning_preserves_custom_attributes(self):\n         text_in = """<img class="captioned" width="42" height="42" foo="bar" src="image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" foo="bar" height="42" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="42"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" foo="bar" height="42" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="42"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_handles_unquoted_attributes(self):\n         text_in = """<img class=captioned height=144 alt="picture alt text" src="resolveuid/%s" width=120 />""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><img alt="picture alt text" height="144" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="120"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="picture alt text" height="144" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="120"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_preserves_existing_links(self):\n         text_in = """<a href="/xyzzy" class="link"><img class="image-left captioned" src="image.jpg/@@images/image/thumb"/></a>"""\n-        text_out = """<a class="link" href="/xyzzy"><dl class="image-left captioned">\n-<dt><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>\n+        text_out = """<a class="link" href="/xyzzy"><figure class="image-left captioned">\n+<img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>\n </a>"""\n         self._assertTransformsTo(text_in, text_out)\n \n@@ -413,10 +413,10 @@ def test_image_captioning_handles_non_ascii(self):\n         self.portal[\'image.jpg\'].setDescription(\n             u\'Kupu Test Image \\xe5\\xe4\\xf6\')\n         text_in = """<img class="captioned" src="image.jpg"/>"""\n-        text_out = u"""<dl class="captioned">\n-<dt><img alt="Kupu Test Image \\xe5\\xe4\\xf6" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Kupu Test Image \\xe5\\xe4\\xf6" width="500"/></dt>\n-<dd class="image-caption">Kupu Test Image \\xe5\\xe4\\xf6</dd>\n-</dl>"""\n+        text_out = u"""<figure class="captioned">\n+<img alt="Kupu Test Image \\xe5\\xe4\\xf6" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Kupu Test Image \\xe5\\xe4\\xf6" width="500"/>\n+<figcaption class="image-caption">Kupu Test Image \\xe5\\xe4\\xf6</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_resolve_uids_with_bigU(self):\ndiff --git a/setup.py b/setup.py\nindex fda6e5a..15c9a13 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'3.1.3.dev0\'\n+version = \'4.0.dev0\'\n \n setup(\n     name=\'plone.outputfilters\',\n'

Repository: plone.outputfilters


Branch: refs/heads/master
Date: 2020-01-03T16:57:27+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.outputfilters/commit/f1c571d1c93b9f3d78decd56e5ae79e15d5ee3a5

Add an ImageCaptioningEnabler utility which can be enabled via the portal registry setting plone.image_captioning.

Files changed:
M CHANGES.rst
M plone/outputfilters/filters/configure.zcml
M plone/outputfilters/filters/resolveuid_and_caption.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 811b9f2..5a5da03 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -11,7 +11,8 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Add an ``ImageCaptioningEnabler`` utility which can be enabled via the portal registry setting ``plone.image_captioning``.\n+  [thet]\n \n Bug fixes:\n \ndiff --git a/plone/outputfilters/filters/configure.zcml b/plone/outputfilters/filters/configure.zcml\nindex 2e1a6c5..19ef066 100644\n--- a/plone/outputfilters/filters/configure.zcml\n+++ b/plone/outputfilters/filters/configure.zcml\n@@ -15,4 +15,7 @@\n            name="plone5-always-enabled"\n            zcml:condition="have plone-5" />\n \n+  <utility factory=".resolveuid_and_caption.ImageCaptioningEnabler"\n+           name="image-captioning-enabler" />\n+\n </configure>\ndiff --git a/plone/outputfilters/filters/resolveuid_and_caption.py b/plone/outputfilters/filters/resolveuid_and_caption.py\nindex 8904a92..957c12f 100644\n--- a/plone/outputfilters/filters/resolveuid_and_caption.py\n+++ b/plone/outputfilters/filters/resolveuid_and_caption.py\n@@ -7,6 +7,7 @@\n from DocumentTemplate.DT_Var import newline_to_br\n from plone.outputfilters.browser.resolveuid import uuidToObject\n from plone.outputfilters.interfaces import IFilter\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFPlone.utils import safe_unicode\n from six.moves.urllib.parse import unquote\n@@ -17,6 +18,7 @@\n from ZODB.POSException import ConflictError\n from zope.cachedescriptors.property import Lazy as lazy_property\n from zope.component import getAllUtilitiesRegisteredFor\n+from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import Attribute\n from zope.interface import implementer\n@@ -48,9 +50,20 @@ class IResolveUidsEnabler(Interface):\n         "Boolean indicating whether UID links should be resolved.")\n \n \n+@implementer(IImageCaptioningEnabler)\n+class ImageCaptioningEnabler(object):\n+\n+    @property\n+    def available(self):\n+        name = \'plone.image_captioning\'\n+        registry = getUtility(IRegistry)\n+        if name in registry:\n+            return registry[name]\n+        return False\n+\n+\n @implementer(IResolveUidsEnabler)\n class ResolveUidsAlwaysEnabled(object):\n-\n     available = True\n \n \n@@ -295,9 +308,9 @@ def handle_captioned_image(self, attributes, image, fullimage,\n         klass = \' \'.join(attributes[\'class\'])\n         del attributes[\'class\']\n         del attributes[\'src\']\n-        if \'width\' in attributes:\n+        if \'width\' in attributes and attributes[\'width\']:\n             attributes[\'width\'] = int(attributes[\'width\'])\n-        if \'height\' in attributes:\n+        if \'height\' in attributes and attributes[\'height\']:\n             attributes[\'height\'] = int(attributes[\'height\'])\n         view = fullimage.unrestrictedTraverse(\'@@images\', None)\n         if view is not None:\n'

Repository: plone.outputfilters


Branch: refs/heads/master
Date: 2020-02-17T15:07:34+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.outputfilters/commit/8d8884439a3c45880816c89fce0acd285139c41f

Merge pull request #36 from plone/thet-figcaption

Image caption support in Plone 5

Files changed:
M CHANGES.rst
M plone/outputfilters/browser/captioned_image.pt
M plone/outputfilters/filters/configure.zcml
M plone/outputfilters/filters/resolveuid_and_caption.py
M plone/outputfilters/tests/test_resolveuid_and_caption.py
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex b62aeff..5a5da03 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,16 +1,18 @@\n Changelog\n =========\n \n-3.1.3 (unreleased)\n-------------------\n+4.0 (unreleased)\n+----------------\n \n Breaking changes:\n \n-- *add item here*\n+- Change the image caption template to use ``<figure>`` and ``<figcaption>``.\n+  [thet]\n \n New features:\n \n-- *add item here*\n+- Add an ``ImageCaptioningEnabler`` utility which can be enabled via the portal registry setting ``plone.image_captioning``.\n+  [thet]\n \n Bug fixes:\n \ndiff --git a/plone/outputfilters/browser/captioned_image.pt b/plone/outputfilters/browser/captioned_image.pt\nindex 3807e38..8f4a9a8 100644\n--- a/plone/outputfilters/browser/captioned_image.pt\n+++ b/plone/outputfilters/browser/captioned_image.pt\n@@ -1,8 +1,6 @@\n-<dl tal:attributes="class options/class;">\n-<dt><a tal:omit-tag="options/isfullsize" rel="lightbox"\n-   tal:attributes="href options/url_path;"\n-   tal:content="structure options/tag">[image goes here]</a></dt>\n- <dd class="image-caption"\n-     tal:content="options/caption|nothing">\n- </dd>\n-</dl>\n+<figure tal:attributes="class options/class;">\n+  <a tal:omit-tag="options/isfullsize" rel="lightbox"\n+      tal:attributes="href options/url_path;"\n+      tal:content="structure options/tag">[image goes here]</a>\n+  <figcaption class="image-caption" tal:content="options/caption|nothing"></figcaption>\n+</figure>\ndiff --git a/plone/outputfilters/filters/configure.zcml b/plone/outputfilters/filters/configure.zcml\nindex 2e1a6c5..19ef066 100644\n--- a/plone/outputfilters/filters/configure.zcml\n+++ b/plone/outputfilters/filters/configure.zcml\n@@ -15,4 +15,7 @@\n            name="plone5-always-enabled"\n            zcml:condition="have plone-5" />\n \n+  <utility factory=".resolveuid_and_caption.ImageCaptioningEnabler"\n+           name="image-captioning-enabler" />\n+\n </configure>\ndiff --git a/plone/outputfilters/filters/resolveuid_and_caption.py b/plone/outputfilters/filters/resolveuid_and_caption.py\nindex 8904a92..957c12f 100644\n--- a/plone/outputfilters/filters/resolveuid_and_caption.py\n+++ b/plone/outputfilters/filters/resolveuid_and_caption.py\n@@ -7,6 +7,7 @@\n from DocumentTemplate.DT_Var import newline_to_br\n from plone.outputfilters.browser.resolveuid import uuidToObject\n from plone.outputfilters.interfaces import IFilter\n+from plone.registry.interfaces import IRegistry\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFPlone.utils import safe_unicode\n from six.moves.urllib.parse import unquote\n@@ -17,6 +18,7 @@\n from ZODB.POSException import ConflictError\n from zope.cachedescriptors.property import Lazy as lazy_property\n from zope.component import getAllUtilitiesRegisteredFor\n+from zope.component import getUtility\n from zope.component.hooks import getSite\n from zope.interface import Attribute\n from zope.interface import implementer\n@@ -48,9 +50,20 @@ class IResolveUidsEnabler(Interface):\n         "Boolean indicating whether UID links should be resolved.")\n \n \n+@implementer(IImageCaptioningEnabler)\n+class ImageCaptioningEnabler(object):\n+\n+    @property\n+    def available(self):\n+        name = \'plone.image_captioning\'\n+        registry = getUtility(IRegistry)\n+        if name in registry:\n+            return registry[name]\n+        return False\n+\n+\n @implementer(IResolveUidsEnabler)\n class ResolveUidsAlwaysEnabled(object):\n-\n     available = True\n \n \n@@ -295,9 +308,9 @@ def handle_captioned_image(self, attributes, image, fullimage,\n         klass = \' \'.join(attributes[\'class\'])\n         del attributes[\'class\']\n         del attributes[\'src\']\n-        if \'width\' in attributes:\n+        if \'width\' in attributes and attributes[\'width\']:\n             attributes[\'width\'] = int(attributes[\'width\'])\n-        if \'height\' in attributes:\n+        if \'height\' in attributes and attributes[\'height\']:\n             attributes[\'height\'] = int(attributes[\'height\'])\n         view = fullimage.unrestrictedTraverse(\'@@images\', None)\n         if view is not None:\ndiff --git a/plone/outputfilters/tests/test_resolveuid_and_caption.py b/plone/outputfilters/tests/test_resolveuid_and_caption.py\nindex bf55244..0cbab32 100644\n--- a/plone/outputfilters/tests/test_resolveuid_and_caption.py\n+++ b/plone/outputfilters/tests/test_resolveuid_and_caption.py\n@@ -266,10 +266,10 @@ def test_image_captioning_in_news_item(self):\n \n         # Test captioning\n         output = news_item.text.output\n-        text_out = """<span><dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>\n+        text_out = """<span><figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>\n </span>"""\n         self._assertTransformsTo(output, text_out)\n \n@@ -280,18 +280,18 @@ def test_image_captioning_absolutizes_uncaptioned_image(self):\n \n     def test_image_captioning_absolute_path(self):\n         text_in = """<img class="captioned" src="/image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_relative_path(self):\n         text_in = """<img class="captioned" src="image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_relative_path_private_folder(self):\n@@ -309,42 +309,42 @@ def test_image_captioning_relative_path_private_folder(self):\n         self.logout()\n \n         text_in = """<img class="captioned" src="private/image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My private image caption" height="331" src="http://nohost/plone/private/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My private image caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My private image caption" height="331" src="http://nohost/plone/private/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My private image caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_relative_path_scale(self):\n         text_in = """<img class="captioned" src="image.jpg/@@images/image/thumb"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid(self):\n         text_in = """<img class="captioned" src="resolveuid/%s"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_scale(self):\n         text_in = """<img class="captioned" src="resolveuid/%s/@@images/image/thumb"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_new_scale(self):\n         text_in = """<img class="captioned" src="resolveuid/%s/@@images/image/thumb"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<a href="/plone/image.jpg" rel="lightbox"><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></a>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_new_scale_plone_namedfile(self):\n@@ -355,10 +355,10 @@ def test_image_captioning_resolveuid_new_scale_plone_namedfile(self):\n \n     def test_image_captioning_resolveuid_no_scale(self):\n         text_in = """<img class="captioned" src="resolveuid/%s/@@images/image"/>""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="500"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_resolveuid_no_scale_plone_namedfile(self):\n@@ -385,26 +385,26 @@ def test_image_captioning_external_url(self):\n \n     def test_image_captioning_preserves_custom_attributes(self):\n         text_in = """<img class="captioned" width="42" height="42" foo="bar" src="image.jpg"/>"""\n-        text_out = """<dl class="captioned">\n-<dt><img alt="My caption" foo="bar" height="42" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="42"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="My caption" foo="bar" height="42" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="42"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_handles_unquoted_attributes(self):\n         text_in = """<img class=captioned height=144 alt="picture alt text" src="resolveuid/%s" width=120 />""" % self.UID\n-        text_out = """<dl class="captioned">\n-<dt><img alt="picture alt text" height="144" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="120"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>"""\n+        text_out = """<figure class="captioned">\n+<img alt="picture alt text" height="144" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="120"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_image_captioning_preserves_existing_links(self):\n         text_in = """<a href="/xyzzy" class="link"><img class="image-left captioned" src="image.jpg/@@images/image/thumb"/></a>"""\n-        text_out = """<a class="link" href="/xyzzy"><dl class="image-left captioned">\n-<dt><img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/></dt>\n-<dd class="image-caption">My caption</dd>\n-</dl>\n+        text_out = """<a class="link" href="/xyzzy"><figure class="image-left captioned">\n+<img alt="My caption" height="84" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Image" width="128"/>\n+<figcaption class="image-caption">My caption</figcaption>\n+</figure>\n </a>"""\n         self._assertTransformsTo(text_in, text_out)\n \n@@ -413,10 +413,10 @@ def test_image_captioning_handles_non_ascii(self):\n         self.portal[\'image.jpg\'].setDescription(\n             u\'Kupu Test Image \\xe5\\xe4\\xf6\')\n         text_in = """<img class="captioned" src="image.jpg"/>"""\n-        text_out = u"""<dl class="captioned">\n-<dt><img alt="Kupu Test Image \\xe5\\xe4\\xf6" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Kupu Test Image \\xe5\\xe4\\xf6" width="500"/></dt>\n-<dd class="image-caption">Kupu Test Image \\xe5\\xe4\\xf6</dd>\n-</dl>"""\n+        text_out = u"""<figure class="captioned">\n+<img alt="Kupu Test Image \\xe5\\xe4\\xf6" height="331" src="http://nohost/plone/image.jpg/@@images/...jpeg" title="Kupu Test Image \\xe5\\xe4\\xf6" width="500"/>\n+<figcaption class="image-caption">Kupu Test Image \\xe5\\xe4\\xf6</figcaption>\n+</figure>"""\n         self._assertTransformsTo(text_in, text_out)\n \n     def test_resolve_uids_with_bigU(self):\ndiff --git a/setup.py b/setup.py\nindex fda6e5a..15c9a13 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'3.1.3.dev0\'\n+version = \'4.0.dev0\'\n \n setup(\n     name=\'plone.outputfilters\',\n'

