Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-04-01T23:24:25+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.content/commit/84379ba1b50e5b35aa8cc154eb0f0ffca6ebe3ad

py3 fixes

Files changed:
M plone/app/content/browser/contents/__init__.py
M plone/app/content/browser/reviewlist.py
M plone/app/content/browser/tableview.py
M plone/app/content/browser/vocabulary.py
M plone/app/content/namechooser.py
M plone/app/content/tests/test_widgets.py

diff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py
index 3e0ba05..b49dad4 100644
--- a/plone/app/content/browser/contents/__init__.py
+++ b/plone/app/content/browser/contents/__init__.py
@@ -312,7 +312,7 @@ def get_options(self):
             'contextInfoUrl': '%s{path}/@@fc-contextInfo' % base_url,
             'setDefaultPageUrl': '%s{path}/@@fc-setDefaultPage' % base_url,
             'availableColumns': columns,
-            'attributes': ['Title', 'path', 'getURL', 'getIcon', 'getMimeIcon', 'portal_type'] + columns.keys(),  # noqa
+            'attributes': ['Title', 'path', 'getURL', 'getIcon', 'getMimeIcon', 'portal_type'] + list(columns.keys()),  # noqa
             'buttons': self.get_actions(),
             'rearrange': {
                 'properties': self.get_indexes(),
diff --git a/plone/app/content/browser/reviewlist.py b/plone/app/content/browser/reviewlist.py
index 7c4082e..9419a52 100644
--- a/plone/app/content/browser/reviewlist.py
+++ b/plone/app/content/browser/reviewlist.py
@@ -5,7 +5,8 @@
 from plone.registry.interfaces import IRegistry
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
-from six.moves import urllib
+from six.moves import map
+from six.moves.urllib.parse import quote_plus
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.i18n import translate
@@ -108,7 +109,7 @@ def items(self):
                 url=url,
                 url_href_title=url_href_title,
                 id=obj.getId(),
-                quoted_id=urllib.parse.quote_plus(obj.getId()),
+                quoted_id=quote_plus(obj.getId()),
                 path=path,
                 title_or_id=obj.pretty_title_or_id(),
                 description=obj.Description(),
diff --git a/plone/app/content/browser/tableview.py b/plone/app/content/browser/tableview.py
index 3918728..9c20cba 100644
--- a/plone/app/content/browser/tableview.py
+++ b/plone/app/content/browser/tableview.py
@@ -4,12 +4,11 @@
 from plone.memoize import instance
 from Products.CMFPlone.utils import safe_unicode
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from six.moves import urllib
+from six.moves.urllib.parse import quote_plus
 from zope.i18nmessageid import MessageFactory
 from zope.publisher.browser import BrowserView
 from ZTUtils import make_query
 
-
 _ = MessageFactory('plone')
 
 
@@ -161,7 +160,7 @@ def viewname(self):
         return self.view_url.split('?')[0].split('/')[-1]
 
     def quote_plus(self, string):
-        return urllib.parse.quote_plus(string)
+        return quote_plus(string)
 
 
 class TableBrowserView(BrowserView):
diff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py
index e9fafc4..27c8da0 100644
--- a/plone/app/content/browser/vocabulary.py
+++ b/plone/app/content/browser/vocabulary.py
@@ -27,7 +27,6 @@
 
 import inspect
 import itertools
-import os
 import six
 
 
diff --git a/plone/app/content/namechooser.py b/plone/app/content/namechooser.py
index 5475a01..11c9a5b 100644
--- a/plone/app/content/namechooser.py
+++ b/plone/app/content/namechooser.py
@@ -12,6 +12,7 @@
 
 import six
 import time
+import six
 
 
 ATTEMPTS = 100
diff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py
index c37c374..f9fc948 100644
--- a/plone/app/content/tests/test_widgets.py
+++ b/plone/app/content/tests/test_widgets.py
@@ -183,7 +183,7 @@ def testVocabularyCatalogUnsafeMetadataAllowed(self):
             ]
         })
         data = json.loads(view())
-        self.assertEquals(len(data['results'][0].keys()), 4)
+        self.assertEquals(len(list(data['results'][0].keys())), 4)
 
     def testVocabularyCatalogUnsafeMetadataDisallowed(self):
         """Users without permission "Modify portal content" are not allowed to
@@ -217,7 +217,7 @@ def testVocabularyCatalogUnsafeMetadataDisallowed(self):
         # Only one result key should be returned, as ``commentors``,
         # ``Creator`` and ``listCreators`` is considered unsafe and thus
         # skipped.
-        self.assertEquals(len(data['results'][0].keys()), 1)
+        self.assertEquals(len(list(data['results'][0].keys())), 1)
 
     def testVocabularyBatching(self):
         amount = 30


Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-04-01T23:26:29+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.content/commit/631273b7d71322aa79135a2ae6058ff9eee04aa1

use encode

Files changed:
M plone/app/content/namechooser.py

diff --git a/plone/app/content/namechooser.py b/plone/app/content/namechooser.py
index 11c9a5b..ac31603 100644
--- a/plone/app/content/namechooser.py
+++ b/plone/app/content/namechooser.py
@@ -12,7 +12,6 @@
 
 import six
 import time
-import six
 
 
 ATTEMPTS = 100
@@ -46,7 +45,7 @@ def chooseName(self, name, obj):
                 name = obj.__class__.__name__
 
         if not isinstance(name, six.text_type):
-            name = six.text_type(name, 'utf-8')
+            name = name.encode('utf-8')
 
         request = getattr(obj.__of__(container), 'REQUEST', None)
         if request is not None:


Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-04-11T12:31:17+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/b7b7a92fe759c8ba23edf67db444dd017e790970

Update CHANGES.rst

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 989fdab..4aeda5b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Python 3 fixes.
+  [pbauer]
+
 - Use _ instead of PC_ in constraintypes.py so the messages are extracted for
   translation.
   [malikrohit16]


Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-04-11T12:32:05+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/01df90888c84b3eb32d48a3a7740473b63aa8b37

Merge branch 'master' into python3

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/rearrange.py
M plone/app/content/tests/test_folder.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 4aeda5b..1a02e9e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-3.5.1 (unreleased)
+3.5.3 (unreleased)
 ------------------
 
 Breaking changes:
@@ -17,8 +17,21 @@ Bug fixes:
 - Python 3 fixes.
   [pbauer]
 
-- Use _ instead of PC_ in constraintypes.py so the messages are extracted for
-  translation.
+3.5.2 (2018-04-08)
+------------------
+
+Bug fixes:
+
+- fix drag & drop in folder listing on plone root
+  [huubbouma]
+
+
+3.5.1 (2018-04-03)
+------------------
+
+Bug fixes:
+
+- Use ``_`` instead of ``PC_`` in ``constraintypes.py`` so the messages are extracted for translation.
   [malikrohit16]
 
 
diff --git a/plone/app/content/browser/contents/rearrange.py b/plone/app/content/browser/contents/rearrange.py
index 9f4043a..4375f80 100644
--- a/plone/app/content/browser/contents/rearrange.py
+++ b/plone/app/content/browser/contents/rearrange.py
@@ -53,7 +53,7 @@ def __call__(self):
             return self.message()
 
         delta = int(delta)
-        subset_ids = json_loads(self.request.form.get('subset_ids', '[]'))
+        subset_ids = json_loads(self.request.form.get('subsetIds', 'null'))
         if subset_ids:
             position_id = [
                 (ordering.getObjectPosition(i), i) for i in subset_ids
@@ -63,7 +63,7 @@ def __call__(self):
                 self.errors.append(_('Client/server ordering mismatch'))
                 return self.message()
 
-        ordering.moveObjectsByDelta([id], delta)
+        ordering.moveObjectsByDelta([id], delta, subset_ids)
         return self.message()
 
 
diff --git a/plone/app/content/tests/test_folder.py b/plone/app/content/tests/test_folder.py
index 868095f..914e071 100644
--- a/plone/app/content/tests/test_folder.py
+++ b/plone/app/content/tests/test_folder.py
@@ -369,6 +369,16 @@ def setUp(self):
             )
             self.bf[newid].reindexObject()
 
+        # create 3 documents in plone root
+        for idx in range(0, 3):
+            _id = "page_{}".format(idx)
+            self.portal.invokeFactory(
+                'Document',
+                id=_id,
+                title="Page {}".format(idx)
+            )
+            self.portal[_id].reindexObject()
+
         self.env = {'HTTP_ACCEPT_LANGUAGE': 'en', 'REQUEST_METHOD': 'POST'}
         self.request = makerequest(self.layer['app']).REQUEST
         self.request.environ.update(self.env)
@@ -470,6 +480,36 @@ def test_item_order_move_by_delta(self):
             ]
         )
 
+    def test_item_order_move_by_delta_in_plone_root(self):
+        from plone.app.content.browser.contents.rearrange import ItemOrderActionView  # noqa
+
+        # first move the 'basefolder' to the top
+        self.request.form.update({
+            'id': 'basefolder',
+            'delta': 'top',
+        })
+        view = ItemOrderActionView(self.portal, self.request)
+        view()
+
+        # move 'basefolder' two positions down
+        self.request.form.update({
+            'id': 'basefolder',
+            'delta': '2',
+            'subsetIds': '["basefolder", "page_0", "page_1", "page_2"]',
+        })
+        view = ItemOrderActionView(self.portal, self.request)
+        view()
+
+        self.assertEqual(
+            [(c[0], c[1].Title()) for c in self.portal.contentItems()],
+            [
+                ('page_0', 'Page 0'),
+                ('page_1', 'Page 1'),
+                ('basefolder', 'Folder Base'),
+                ('page_2', 'Page 2'),
+            ]
+        )
+
 
 class RearrangeATTest(RearrangeDXTest):
 
diff --git a/setup.py b/setup.py
index 697fc49..6434611 100644
--- a/setup.py
+++ b/setup.py
@@ -2,7 +2,7 @@
 from setuptools import find_packages
 from setuptools import setup
 
-version = '3.5.1.dev0'
+version = '3.5.3.dev0'
 
 setup(
     name='plone.app.content',
@@ -14,8 +14,8 @@
     ]),
     classifiers=[
         "Framework :: Plone",
-        "Framework :: Plone :: 5.0",
         "Framework :: Plone :: 5.1",
+        "Framework :: Plone :: 5.2",
         "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
         "Programming Language :: Python",
         "Programming Language :: Python :: 2.7",


Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-04-11T14:19:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/0f3fdb0028b632e5e4c6d577f30a1a1ea4b3fd15

Merge pull request #154 from plone/python3

Python 3

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/__init__.py
M plone/app/content/browser/reviewlist.py
M plone/app/content/browser/tableview.py
M plone/app/content/browser/vocabulary.py
M plone/app/content/namechooser.py
M plone/app/content/tests/test_widgets.py

diff --git a/CHANGES.rst b/CHANGES.rst
index f3e79cd..1a02e9e 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,8 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
-
+- Python 3 fixes.
+  [pbauer]
 
 3.5.2 (2018-04-08)
 ------------------
diff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py
index 3e0ba05..b49dad4 100644
--- a/plone/app/content/browser/contents/__init__.py
+++ b/plone/app/content/browser/contents/__init__.py
@@ -312,7 +312,7 @@ def get_options(self):
             'contextInfoUrl': '%s{path}/@@fc-contextInfo' % base_url,
             'setDefaultPageUrl': '%s{path}/@@fc-setDefaultPage' % base_url,
             'availableColumns': columns,
-            'attributes': ['Title', 'path', 'getURL', 'getIcon', 'getMimeIcon', 'portal_type'] + columns.keys(),  # noqa
+            'attributes': ['Title', 'path', 'getURL', 'getIcon', 'getMimeIcon', 'portal_type'] + list(columns.keys()),  # noqa
             'buttons': self.get_actions(),
             'rearrange': {
                 'properties': self.get_indexes(),
diff --git a/plone/app/content/browser/reviewlist.py b/plone/app/content/browser/reviewlist.py
index 7c4082e..9419a52 100644
--- a/plone/app/content/browser/reviewlist.py
+++ b/plone/app/content/browser/reviewlist.py
@@ -5,7 +5,8 @@
 from plone.registry.interfaces import IRegistry
 from Products.CMFCore.utils import getToolByName
 from Products.CMFPlone.utils import safe_unicode
-from six.moves import urllib
+from six.moves import map
+from six.moves.urllib.parse import quote_plus
 from zope.component import getMultiAdapter
 from zope.component import getUtility
 from zope.i18n import translate
@@ -108,7 +109,7 @@ def items(self):
                 url=url,
                 url_href_title=url_href_title,
                 id=obj.getId(),
-                quoted_id=urllib.parse.quote_plus(obj.getId()),
+                quoted_id=quote_plus(obj.getId()),
                 path=path,
                 title_or_id=obj.pretty_title_or_id(),
                 description=obj.Description(),
diff --git a/plone/app/content/browser/tableview.py b/plone/app/content/browser/tableview.py
index 3918728..9c20cba 100644
--- a/plone/app/content/browser/tableview.py
+++ b/plone/app/content/browser/tableview.py
@@ -4,12 +4,11 @@
 from plone.memoize import instance
 from Products.CMFPlone.utils import safe_unicode
 from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile
-from six.moves import urllib
+from six.moves.urllib.parse import quote_plus
 from zope.i18nmessageid import MessageFactory
 from zope.publisher.browser import BrowserView
 from ZTUtils import make_query
 
-
 _ = MessageFactory('plone')
 
 
@@ -161,7 +160,7 @@ def viewname(self):
         return self.view_url.split('?')[0].split('/')[-1]
 
     def quote_plus(self, string):
-        return urllib.parse.quote_plus(string)
+        return quote_plus(string)
 
 
 class TableBrowserView(BrowserView):
diff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py
index e9fafc4..27c8da0 100644
--- a/plone/app/content/browser/vocabulary.py
+++ b/plone/app/content/browser/vocabulary.py
@@ -27,7 +27,6 @@
 
 import inspect
 import itertools
-import os
 import six
 
 
diff --git a/plone/app/content/namechooser.py b/plone/app/content/namechooser.py
index 5475a01..ac31603 100644
--- a/plone/app/content/namechooser.py
+++ b/plone/app/content/namechooser.py
@@ -45,7 +45,7 @@ def chooseName(self, name, obj):
                 name = obj.__class__.__name__
 
         if not isinstance(name, six.text_type):
-            name = six.text_type(name, 'utf-8')
+            name = name.encode('utf-8')
 
         request = getattr(obj.__of__(container), 'REQUEST', None)
         if request is not None:
diff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py
index c37c374..f9fc948 100644
--- a/plone/app/content/tests/test_widgets.py
+++ b/plone/app/content/tests/test_widgets.py
@@ -183,7 +183,7 @@ def testVocabularyCatalogUnsafeMetadataAllowed(self):
             ]
         })
         data = json.loads(view())
-        self.assertEquals(len(data['results'][0].keys()), 4)
+        self.assertEquals(len(list(data['results'][0].keys())), 4)
 
     def testVocabularyCatalogUnsafeMetadataDisallowed(self):
         """Users without permission "Modify portal content" are not allowed to
@@ -217,7 +217,7 @@ def testVocabularyCatalogUnsafeMetadataDisallowed(self):
         # Only one result key should be returned, as ``commentors``,
         # ``Creator`` and ``listCreators`` is considered unsafe and thus
         # skipped.
-        self.assertEquals(len(data['results'][0].keys()), 1)
+        self.assertEquals(len(list(data['results'][0].keys())), 1)
 
     def testVocabularyBatching(self):
         amount = 30


