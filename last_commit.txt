Repository: plone.tiles


Branch: refs/heads/master
Date: 2018-07-05T11:14:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.tiles/commit/a486681583f1d580958c51a62e0b81e3e46ddab9

get rid of zope.app.publisher dependency

Files changed:
M CHANGES.rst
M plone/tiles/directives.rst
M plone/tiles/esi.rst
M plone/tiles/tiles.rst
M setup.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 4de2361..d1649c9 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,10 +1,13 @@\n Changelog\n =========\n \n-2.0.1 (unreleased)\n-------------------\n+2.1 (unreleased)\n+----------------\n \n-- Nothing changed yet.\n+- Dependency on zope.app.publisher removed,\n+  needed parts were moved to zope.browserpage long time ago.\n+  This probably breaks Plone 4.2 support (removed).\n+  [jensens]\n \n \n 2.0.0 (2018-04-13)\ndiff --git a/plone/tiles/directives.rst b/plone/tiles/directives.rst\nindex 6ef0864..e8f7ed3 100644\n--- a/plone/tiles/directives.rst\n+++ b/plone/tiles/directives.rst\n@@ -31,7 +31,7 @@ Let\'s show how these may be used by registering several tiles:\n     ...\n     ...     <include package="zope.component" file="meta.zcml" />\n     ...     <include package="zope.security" file="meta.zcml" />\n-    ...     <include package="zope.app.publisher" file="meta.zcml" />\n+    ...     <include package="zope.browserpage" file="meta.zcml" />\n     ...\n     ...     <include package="plone.tiles" file="meta.zcml" />\n     ...     <include package="plone.tiles" />\ndiff --git a/plone/tiles/esi.rst b/plone/tiles/esi.rst\nindex 6541d61..f8ff303 100644\n--- a/plone/tiles/esi.rst\n+++ b/plone/tiles/esi.rst\n@@ -18,7 +18,7 @@ To use the package, you should first load its ZCML configuration.\n     ...      i18n_domain="plone.tiles.tests">\n     ...\n     ...     <include package="zope.component" file="meta.zcml" />\n-    ...     <include package="zope.app.publisher" file="meta.zcml" />\n+    ...     <include package="zope.browserpage" file="meta.zcml" />\n     ...\n     ...     <include package="plone.tiles" file="meta.zcml" />\n     ...     <include package="plone.tiles" />\ndiff --git a/plone/tiles/tiles.rst b/plone/tiles/tiles.rst\nindex 16361db..1686e60 100644\n--- a/plone/tiles/tiles.rst\n+++ b/plone/tiles/tiles.rst\n@@ -29,7 +29,7 @@ To use the package, you should first load its ZCML configuration:\n     ...      i18n_domain="plone.tiles.tests">\n     ...\n     ...     <include package="zope.component" file="meta.zcml" />\n-    ...     <include package="zope.app.publisher" file="meta.zcml" />\n+    ...     <include package="zope.browserpage" file="meta.zcml" />\n     ...\n     ...     <include package="plone.tiles" file="meta.zcml" />\n     ...     <include package="plone.tiles" />\ndiff --git a/setup.py b/setup.py\nindex 4040b21..f9e5fd5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.0.1.dev0\'\n+version = \'2.1.dev0\'\n \n setup(\n     name=\'plone.tiles\',\n@@ -20,7 +20,6 @@\n         \'Development Status :: 5 - Production/Stable\',\n         \'Environment :: Web Environment\',\n         \'Framework :: Plone\',\n-        \'Framework :: Plone :: 4.2\',\n         \'Framework :: Plone :: 4.3\',\n         \'Framework :: Plone :: 5.0\',\n         \'Framework :: Plone :: 5.1\',\n@@ -41,9 +40,10 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n+        \'plone.subrequest\',\n         \'setuptools\',\n-        \'zope.app.publisher\',\n         \'zope.annotation\',\n+        \'zope.browserpage\',\n         \'zope.component\',\n         \'zope.configuration\',\n         \'zope.interface\',\n@@ -52,12 +52,11 @@\n         \'zope.security\',\n         \'zope.traversing\',\n         \'Zope2\',\n-        \'plone.subrequest\'\n     ],\n     extras_require={\n         \'test\': [\n             \'plone.testing [zca, z2]\',\n-            \'plone.rfc822\'\n+            \'plone.rfc822\',\n         ],\n     },\n )\n'

Repository: plone.tiles


Branch: refs/heads/master
Date: 2018-07-05T11:14:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.tiles/commit/1415cb3e1551d1b36735f1e728e1f4d06f3da0f0

isort

Files changed:
M plone/tiles/data.py
M plone/tiles/esi.py
M plone/tiles/tile.py

b"diff --git a/plone/tiles/data.py b/plone/tiles/data.py\nindex f87e498..1def88a 100644\n--- a/plone/tiles/data.py\n+++ b/plone/tiles/data.py\n@@ -25,6 +25,7 @@\n import pkg_resources\n import urllib\n \n+\n try:\n     pkg_resources.get_distribution('plone.rfc822')\n except pkg_resources.DistributionNotFound:\ndiff --git a/plone/tiles/esi.py b/plone/tiles/esi.py\nindex 291757d..89885d9 100644\n--- a/plone/tiles/esi.py\n+++ b/plone/tiles/esi.py\n@@ -9,14 +9,17 @@\n from zExceptions import Unauthorized\n from zope.component import queryUtility\n from zope.interface import implementer\n+\n+import os\n+import re\n+import transaction\n+\n+\n try:\n     from AccessControl.security import checkPermission\n except ImportError:\n     from zope.security import checkPermission\n \n-import os\n-import re\n-import transaction\n \n X_FRAME_OPTIONS = os.environ.get('PLONE_X_FRAME_OPTIONS', 'SAMEORIGIN')\n \ndiff --git a/plone/tiles/tile.py b/plone/tiles/tile.py\nindex 292d354..fcbc52d 100644\n--- a/plone/tiles/tile.py\n+++ b/plone/tiles/tile.py\n@@ -3,10 +3,10 @@\n from plone.tiles.interfaces import ITile\n from plone.tiles.interfaces import ITileDataManager\n from Products.Five import BrowserView\n+from zExceptions import Forbidden\n from zope.component import queryMultiAdapter\n from zope.interface import implementer\n from zope.traversing.browser.absoluteurl import absoluteURL\n-from zExceptions import Forbidden\n \n \n @implementer(ITile)\n"

Repository: plone.tiles


Branch: refs/heads/master
Date: 2018-07-05T13:02:02+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.tiles/commit/ed81b4099b8be6460a4a1649c5264dc9e706ce9a

fix travis, remove unsupported Plone 4.2

Files changed:
A test-5.0.x.cfg
A test-5.1.x.cfg
M .travis.yml
M MANIFEST.in
M buildout.cfg
M test-4.3.x.cfg
D bootstrap.py
D test-4.2.x.cfg
D test-5.x.cfg

b'diff --git a/.travis.yml b/.travis.yml\nindex 543d8e9..3276563 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -1,33 +1,26 @@\n language: python\n-python: 2.7\n sudo: false\n env:\n-  - PLONE_VERSION=4.2.x\n   - PLONE_VERSION=4.3.x\n-  - PLONE_VERSION=5.x\n+  - PLONE_VERSION=5.0.x\n+  - PLONE_VERSION=5.1.x\n+python:\n+  - "2.7"\n+matrix:\n+  fast_finish: true\n cache:\n   pip: true\n   directories:\n-    - $HOME/buildout-cache\n-matrix:\n-  fast_finish: true\n-before_install:\n-  - mkdir -p $HOME/buildout-cache/{eggs,downloads}\n-  - mkdir $HOME/.buildout\n-  - echo "[buildout]" > $HOME/.buildout/default.cfg\n-  - echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg\n-  - echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg\n-  - pip install zc.buildout\n-  - cp test-$PLONE_VERSION.cfg buildout.cfg\n+  - eggs\n+  - downloads\n install:\n-  - buildout -N -t 3 annotate\n-  - buildout -N -t 3\n+  - pip install -U pip setuptools zc.buildout\n+  - buildout -N -c test-$PLONE_VERSION.cfg buildout:download-cache=downloads code-analysis:return-status-codes=True annotate\n+  - buildout -N -c test-$PLONE_VERSION.cfg buildout:download-cache=downloads code-analysis:return-status-codes=True\n script:\n   - bin/code-analysis\n   - bin/test\n after_success:\n-  - bin/createcoverage\n-  - pip install -q coveralls\n+  - bin/createcoverage --output-dir=htmlcov\n+  - pip install coveralls\n   - coveralls\n-notifications:\n-  irc: irc.freenode.org#plone-testing\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 199d6fc..9960e9a 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -1,4 +1,4 @@\n recursive-include plone *\n-include setup.py *.rst LICENSE.GPL LICENSE.txt\n-exclude bootstrap.py buildout.cfg\n+include setup.py setup.cfg *.rst LICENSE.GPL LICENSE.txt\n+exclude requirements.txt buildout.cfg test-*.cfg\n global-exclude *.pyc\ndiff --git a/bootstrap.py b/bootstrap.py\ndeleted file mode 100644\nindex ed57894..0000000\n--- a/bootstrap.py\n+++ /dev/null\n@@ -1,178 +0,0 @@\n-##############################################################################\n-#\n-# Copyright (c) 2006 Zope Foundation and Contributors.\n-# All Rights Reserved.\n-#\n-# This software is subject to the provisions of the Zope Public License,\n-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED\n-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n-# FOR A PARTICULAR PURPOSE.\n-#\n-##############################################################################\n-"""Bootstrap a buildout-based project\n-\n-Simply run this script in a directory containing a buildout.cfg.\n-The script accepts buildout command-line options, so you can\n-use the -c option to specify an alternate configuration file.\n-"""\n-\n-import os\n-import shutil\n-import sys\n-import tempfile\n-\n-from optparse import OptionParser\n-\n-tmpeggs = tempfile.mkdtemp()\n-\n-usage = \'\'\'\\\n-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]\n-\n-Bootstraps a buildout-based project.\n-\n-Simply run this script in a directory containing a buildout.cfg, using the\n-Python that you want bin/buildout to use.\n-\n-Note that by using --find-links to point to local resources, you can keep \n-this script from going over the network.\n-\'\'\'\n-\n-parser = OptionParser(usage=usage)\n-parser.add_option("-v", "--version", help="use a specific zc.buildout version")\n-\n-parser.add_option("-t", "--accept-buildout-test-releases",\n-                  dest=\'accept_buildout_test_releases\',\n-                  action="store_true", default=False,\n-                  help=("Normally, if you do not specify a --version, the "\n-                        "bootstrap script and buildout gets the newest "\n-                        "*final* versions of zc.buildout and its recipes and "\n-                        "extensions for you.  If you use this flag, "\n-                        "bootstrap and buildout will get the newest releases "\n-                        "even if they are alphas or betas."))\n-parser.add_option("-c", "--config-file",\n-                  help=("Specify the path to the buildout configuration "\n-                        "file to be used."))\n-parser.add_option("-f", "--find-links",\n-                  help=("Specify a URL to search for buildout releases"))\n-parser.add_option("--allow-site-packages",\n-                  action="store_true", default=False,\n-                  help=("Let bootstrap.py use existing site packages"))\n-\n-\n-options, args = parser.parse_args()\n-\n-######################################################################\n-# load/install setuptools\n-\n-try:\n-    if options.allow_site_packages:\n-        import setuptools\n-        import pkg_resources\n-    from urllib.request import urlopen\n-except ImportError:\n-    from urllib2 import urlopen\n-\n-ez = {}\n-exec(urlopen(\'https://bootstrap.pypa.io/ez_setup.py\').read(), ez)\n-\n-if not options.allow_site_packages:\n-    # ez_setup imports site, which adds site packages\n-    # this will remove them from the path to ensure that incompatible versions \n-    # of setuptools are not in the path\n-    import site\n-    # inside a virtualenv, there is no \'getsitepackages\'. \n-    # We can\'t remove these reliably\n-    if hasattr(site, \'getsitepackages\'):\n-        for sitepackage_path in site.getsitepackages():\n-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]\n-\n-setup_args = dict(to_dir=tmpeggs, download_delay=0)\n-ez[\'use_setuptools\'](**setup_args)\n-import setuptools\n-import pkg_resources\n-\n-# This does not (always?) update the default working set.  We will\n-# do it.\n-for path in sys.path:\n-    if path not in pkg_resources.working_set.entries:\n-        pkg_resources.working_set.add_entry(path)\n-\n-######################################################################\n-# Install buildout\n-\n-ws = pkg_resources.working_set\n-\n-cmd = [sys.executable, \'-c\',\n-       \'from setuptools.command.easy_install import main; main()\',\n-       \'-mZqNxd\', tmpeggs]\n-\n-find_links = os.environ.get(\n-    \'bootstrap-testing-find-links\',\n-    options.find_links or\n-    (\'http://downloads.buildout.org/\'\n-     if options.accept_buildout_test_releases else None)\n-    )\n-if find_links:\n-    cmd.extend([\'-f\', find_links])\n-\n-setuptools_path = ws.find(\n-    pkg_resources.Requirement.parse(\'setuptools\')).location\n-\n-requirement = \'zc.buildout\'\n-version = options.version\n-if version is None and not options.accept_buildout_test_releases:\n-    # Figure out the most recent final version of zc.buildout.\n-    import setuptools.package_index\n-    _final_parts = \'*final-\', \'*final\'\n-\n-    def _final_version(parsed_version):\n-        for part in parsed_version:\n-            if (part[:1] == \'*\') and (part not in _final_parts):\n-                return False\n-        return True\n-    index = setuptools.package_index.PackageIndex(\n-        search_path=[setuptools_path])\n-    if find_links:\n-        index.add_find_links((find_links,))\n-    req = pkg_resources.Requirement.parse(requirement)\n-    if index.obtain(req) is not None:\n-        best = []\n-        bestv = None\n-        for dist in index[req.project_name]:\n-            distv = dist.parsed_version\n-            if _final_version(distv):\n-                if bestv is None or distv > bestv:\n-                    best = [dist]\n-                    bestv = distv\n-                elif distv == bestv:\n-                    best.append(dist)\n-        if best:\n-            best.sort()\n-            version = best[-1].version\n-if version:\n-    requirement = \'==\'.join((requirement, version))\n-cmd.append(requirement)\n-\n-import subprocess\n-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:\n-    raise Exception(\n-        "Failed to execute command:\\n%s" % repr(cmd)[1:-1])\n-\n-######################################################################\n-# Import and run buildout\n-\n-ws.add_entry(tmpeggs)\n-ws.require(requirement)\n-import zc.buildout.buildout\n-\n-if not [a for a in args if \'=\' not in a]:\n-    args.append(\'bootstrap\')\n-\n-# if -c was provided, we push it back into args for buildout\' main function\n-if options.config_file is not None:\n-    args[0:0] = [\'-c\', options.config_file]\n-\n-zc.buildout.buildout.main(args)\n-shutil.rmtree(tmpeggs)\ndiff --git a/buildout.cfg b/buildout.cfg\nindex eecc79b..0e2f0a4 100644\n--- a/buildout.cfg\n+++ b/buildout.cfg\n@@ -1,2 +1,2 @@\n [buildout]\n-extends = test-5.x.cfg\n+extends = test-5.1.x.cfg\ndiff --git a/test-4.3.x.cfg b/test-4.3.x.cfg\nindex b132810..c8aa80b 100644\n--- a/test-4.3.x.cfg\n+++ b/test-4.3.x.cfg\n@@ -14,7 +14,8 @@ directory = plone\n flake8-ignore = E501,C901\n \n [versions]\n-setuptools =\n-zc.buildout =\n coverage = >=3.7\n+plone.recipe.zope2instance = 4.4.0\n plone.tiles =\n+setuptools =\n+zc.buildout =\ndiff --git a/test-4.2.x.cfg b/test-5.0.x.cfg\nsimilarity index 86%\nrename from test-4.2.x.cfg\nrename to test-5.0.x.cfg\nindex 3b27f67..7e83a40 100644\n--- a/test-4.2.x.cfg\n+++ b/test-5.0.x.cfg\n@@ -1,6 +1,6 @@\n [buildout]\n extends =\n-    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-4.2.x.cfg\n+    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.0.x.cfg\n     https://raw.githubusercontent.com/collective/buildout.plonetest/master/qa.cfg\n \n package-name = plone.tiles\n@@ -14,7 +14,8 @@ directory = plone\n flake8-ignore = E501,C901\n \n [versions]\n-setuptools =\n-zc.buildout =\n coverage = >=3.7\n+plone.recipe.zope2instance = 4.4.0\n plone.tiles =\n+setuptools =\n+zc.buildout =\ndiff --git a/test-5.x.cfg b/test-5.1.x.cfg\nsimilarity index 92%\nrename from test-5.x.cfg\nrename to test-5.1.x.cfg\nindex fb61ae4..d514ba0 100644\n--- a/test-5.x.cfg\n+++ b/test-5.1.x.cfg\n@@ -14,7 +14,8 @@ directory = plone\n flake8-ignore = E501,C901\n \n [versions]\n-setuptools =\n-zc.buildout =\n coverage = >=3.7\n+plone.recipe.zope2instance = 4.4.0\n plone.tiles =\n+setuptools =\n+zc.buildout =\n'

Repository: plone.tiles


Branch: refs/heads/master
Date: 2018-07-05T14:00:12+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.tiles/commit/010623c8c75ac35f9b737e527d37900edf8c426e

Merge pull request #27 from plone/jensens/rm-zope.app.publisher-dependency

Get rid of zope.app.publisher dependency

Files changed:
A test-5.0.x.cfg
A test-5.1.x.cfg
M .travis.yml
M CHANGES.rst
M MANIFEST.in
M buildout.cfg
M plone/tiles/data.py
M plone/tiles/directives.rst
M plone/tiles/esi.py
M plone/tiles/esi.rst
M plone/tiles/tile.py
M plone/tiles/tiles.rst
M setup.py
M test-4.3.x.cfg
D bootstrap.py
D test-4.2.x.cfg
D test-5.x.cfg

b'diff --git a/.travis.yml b/.travis.yml\nindex 543d8e9..3276563 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -1,33 +1,26 @@\n language: python\n-python: 2.7\n sudo: false\n env:\n-  - PLONE_VERSION=4.2.x\n   - PLONE_VERSION=4.3.x\n-  - PLONE_VERSION=5.x\n+  - PLONE_VERSION=5.0.x\n+  - PLONE_VERSION=5.1.x\n+python:\n+  - "2.7"\n+matrix:\n+  fast_finish: true\n cache:\n   pip: true\n   directories:\n-    - $HOME/buildout-cache\n-matrix:\n-  fast_finish: true\n-before_install:\n-  - mkdir -p $HOME/buildout-cache/{eggs,downloads}\n-  - mkdir $HOME/.buildout\n-  - echo "[buildout]" > $HOME/.buildout/default.cfg\n-  - echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg\n-  - echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg\n-  - pip install zc.buildout\n-  - cp test-$PLONE_VERSION.cfg buildout.cfg\n+  - eggs\n+  - downloads\n install:\n-  - buildout -N -t 3 annotate\n-  - buildout -N -t 3\n+  - pip install -U pip setuptools zc.buildout\n+  - buildout -N -c test-$PLONE_VERSION.cfg buildout:download-cache=downloads code-analysis:return-status-codes=True annotate\n+  - buildout -N -c test-$PLONE_VERSION.cfg buildout:download-cache=downloads code-analysis:return-status-codes=True\n script:\n   - bin/code-analysis\n   - bin/test\n after_success:\n-  - bin/createcoverage\n-  - pip install -q coveralls\n+  - bin/createcoverage --output-dir=htmlcov\n+  - pip install coveralls\n   - coveralls\n-notifications:\n-  irc: irc.freenode.org#plone-testing\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex 4de2361..d1649c9 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,10 +1,13 @@\n Changelog\n =========\n \n-2.0.1 (unreleased)\n-------------------\n+2.1 (unreleased)\n+----------------\n \n-- Nothing changed yet.\n+- Dependency on zope.app.publisher removed,\n+  needed parts were moved to zope.browserpage long time ago.\n+  This probably breaks Plone 4.2 support (removed).\n+  [jensens]\n \n \n 2.0.0 (2018-04-13)\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 199d6fc..9960e9a 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -1,4 +1,4 @@\n recursive-include plone *\n-include setup.py *.rst LICENSE.GPL LICENSE.txt\n-exclude bootstrap.py buildout.cfg\n+include setup.py setup.cfg *.rst LICENSE.GPL LICENSE.txt\n+exclude requirements.txt buildout.cfg test-*.cfg\n global-exclude *.pyc\ndiff --git a/bootstrap.py b/bootstrap.py\ndeleted file mode 100644\nindex ed57894..0000000\n--- a/bootstrap.py\n+++ /dev/null\n@@ -1,178 +0,0 @@\n-##############################################################################\n-#\n-# Copyright (c) 2006 Zope Foundation and Contributors.\n-# All Rights Reserved.\n-#\n-# This software is subject to the provisions of the Zope Public License,\n-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED\n-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n-# FOR A PARTICULAR PURPOSE.\n-#\n-##############################################################################\n-"""Bootstrap a buildout-based project\n-\n-Simply run this script in a directory containing a buildout.cfg.\n-The script accepts buildout command-line options, so you can\n-use the -c option to specify an alternate configuration file.\n-"""\n-\n-import os\n-import shutil\n-import sys\n-import tempfile\n-\n-from optparse import OptionParser\n-\n-tmpeggs = tempfile.mkdtemp()\n-\n-usage = \'\'\'\\\n-[DESIRED PYTHON FOR BUILDOUT] bootstrap.py [options]\n-\n-Bootstraps a buildout-based project.\n-\n-Simply run this script in a directory containing a buildout.cfg, using the\n-Python that you want bin/buildout to use.\n-\n-Note that by using --find-links to point to local resources, you can keep \n-this script from going over the network.\n-\'\'\'\n-\n-parser = OptionParser(usage=usage)\n-parser.add_option("-v", "--version", help="use a specific zc.buildout version")\n-\n-parser.add_option("-t", "--accept-buildout-test-releases",\n-                  dest=\'accept_buildout_test_releases\',\n-                  action="store_true", default=False,\n-                  help=("Normally, if you do not specify a --version, the "\n-                        "bootstrap script and buildout gets the newest "\n-                        "*final* versions of zc.buildout and its recipes and "\n-                        "extensions for you.  If you use this flag, "\n-                        "bootstrap and buildout will get the newest releases "\n-                        "even if they are alphas or betas."))\n-parser.add_option("-c", "--config-file",\n-                  help=("Specify the path to the buildout configuration "\n-                        "file to be used."))\n-parser.add_option("-f", "--find-links",\n-                  help=("Specify a URL to search for buildout releases"))\n-parser.add_option("--allow-site-packages",\n-                  action="store_true", default=False,\n-                  help=("Let bootstrap.py use existing site packages"))\n-\n-\n-options, args = parser.parse_args()\n-\n-######################################################################\n-# load/install setuptools\n-\n-try:\n-    if options.allow_site_packages:\n-        import setuptools\n-        import pkg_resources\n-    from urllib.request import urlopen\n-except ImportError:\n-    from urllib2 import urlopen\n-\n-ez = {}\n-exec(urlopen(\'https://bootstrap.pypa.io/ez_setup.py\').read(), ez)\n-\n-if not options.allow_site_packages:\n-    # ez_setup imports site, which adds site packages\n-    # this will remove them from the path to ensure that incompatible versions \n-    # of setuptools are not in the path\n-    import site\n-    # inside a virtualenv, there is no \'getsitepackages\'. \n-    # We can\'t remove these reliably\n-    if hasattr(site, \'getsitepackages\'):\n-        for sitepackage_path in site.getsitepackages():\n-            sys.path[:] = [x for x in sys.path if sitepackage_path not in x]\n-\n-setup_args = dict(to_dir=tmpeggs, download_delay=0)\n-ez[\'use_setuptools\'](**setup_args)\n-import setuptools\n-import pkg_resources\n-\n-# This does not (always?) update the default working set.  We will\n-# do it.\n-for path in sys.path:\n-    if path not in pkg_resources.working_set.entries:\n-        pkg_resources.working_set.add_entry(path)\n-\n-######################################################################\n-# Install buildout\n-\n-ws = pkg_resources.working_set\n-\n-cmd = [sys.executable, \'-c\',\n-       \'from setuptools.command.easy_install import main; main()\',\n-       \'-mZqNxd\', tmpeggs]\n-\n-find_links = os.environ.get(\n-    \'bootstrap-testing-find-links\',\n-    options.find_links or\n-    (\'http://downloads.buildout.org/\'\n-     if options.accept_buildout_test_releases else None)\n-    )\n-if find_links:\n-    cmd.extend([\'-f\', find_links])\n-\n-setuptools_path = ws.find(\n-    pkg_resources.Requirement.parse(\'setuptools\')).location\n-\n-requirement = \'zc.buildout\'\n-version = options.version\n-if version is None and not options.accept_buildout_test_releases:\n-    # Figure out the most recent final version of zc.buildout.\n-    import setuptools.package_index\n-    _final_parts = \'*final-\', \'*final\'\n-\n-    def _final_version(parsed_version):\n-        for part in parsed_version:\n-            if (part[:1] == \'*\') and (part not in _final_parts):\n-                return False\n-        return True\n-    index = setuptools.package_index.PackageIndex(\n-        search_path=[setuptools_path])\n-    if find_links:\n-        index.add_find_links((find_links,))\n-    req = pkg_resources.Requirement.parse(requirement)\n-    if index.obtain(req) is not None:\n-        best = []\n-        bestv = None\n-        for dist in index[req.project_name]:\n-            distv = dist.parsed_version\n-            if _final_version(distv):\n-                if bestv is None or distv > bestv:\n-                    best = [dist]\n-                    bestv = distv\n-                elif distv == bestv:\n-                    best.append(dist)\n-        if best:\n-            best.sort()\n-            version = best[-1].version\n-if version:\n-    requirement = \'==\'.join((requirement, version))\n-cmd.append(requirement)\n-\n-import subprocess\n-if subprocess.call(cmd, env=dict(os.environ, PYTHONPATH=setuptools_path)) != 0:\n-    raise Exception(\n-        "Failed to execute command:\\n%s" % repr(cmd)[1:-1])\n-\n-######################################################################\n-# Import and run buildout\n-\n-ws.add_entry(tmpeggs)\n-ws.require(requirement)\n-import zc.buildout.buildout\n-\n-if not [a for a in args if \'=\' not in a]:\n-    args.append(\'bootstrap\')\n-\n-# if -c was provided, we push it back into args for buildout\' main function\n-if options.config_file is not None:\n-    args[0:0] = [\'-c\', options.config_file]\n-\n-zc.buildout.buildout.main(args)\n-shutil.rmtree(tmpeggs)\ndiff --git a/buildout.cfg b/buildout.cfg\nindex eecc79b..0e2f0a4 100644\n--- a/buildout.cfg\n+++ b/buildout.cfg\n@@ -1,2 +1,2 @@\n [buildout]\n-extends = test-5.x.cfg\n+extends = test-5.1.x.cfg\ndiff --git a/plone/tiles/data.py b/plone/tiles/data.py\nindex f87e498..1def88a 100644\n--- a/plone/tiles/data.py\n+++ b/plone/tiles/data.py\n@@ -25,6 +25,7 @@\n import pkg_resources\n import urllib\n \n+\n try:\n     pkg_resources.get_distribution(\'plone.rfc822\')\n except pkg_resources.DistributionNotFound:\ndiff --git a/plone/tiles/directives.rst b/plone/tiles/directives.rst\nindex 6ef0864..e8f7ed3 100644\n--- a/plone/tiles/directives.rst\n+++ b/plone/tiles/directives.rst\n@@ -31,7 +31,7 @@ Let\'s show how these may be used by registering several tiles:\n     ...\n     ...     <include package="zope.component" file="meta.zcml" />\n     ...     <include package="zope.security" file="meta.zcml" />\n-    ...     <include package="zope.app.publisher" file="meta.zcml" />\n+    ...     <include package="zope.browserpage" file="meta.zcml" />\n     ...\n     ...     <include package="plone.tiles" file="meta.zcml" />\n     ...     <include package="plone.tiles" />\ndiff --git a/plone/tiles/esi.py b/plone/tiles/esi.py\nindex 291757d..89885d9 100644\n--- a/plone/tiles/esi.py\n+++ b/plone/tiles/esi.py\n@@ -9,14 +9,17 @@\n from zExceptions import Unauthorized\n from zope.component import queryUtility\n from zope.interface import implementer\n+\n+import os\n+import re\n+import transaction\n+\n+\n try:\n     from AccessControl.security import checkPermission\n except ImportError:\n     from zope.security import checkPermission\n \n-import os\n-import re\n-import transaction\n \n X_FRAME_OPTIONS = os.environ.get(\'PLONE_X_FRAME_OPTIONS\', \'SAMEORIGIN\')\n \ndiff --git a/plone/tiles/esi.rst b/plone/tiles/esi.rst\nindex 6541d61..f8ff303 100644\n--- a/plone/tiles/esi.rst\n+++ b/plone/tiles/esi.rst\n@@ -18,7 +18,7 @@ To use the package, you should first load its ZCML configuration.\n     ...      i18n_domain="plone.tiles.tests">\n     ...\n     ...     <include package="zope.component" file="meta.zcml" />\n-    ...     <include package="zope.app.publisher" file="meta.zcml" />\n+    ...     <include package="zope.browserpage" file="meta.zcml" />\n     ...\n     ...     <include package="plone.tiles" file="meta.zcml" />\n     ...     <include package="plone.tiles" />\ndiff --git a/plone/tiles/tile.py b/plone/tiles/tile.py\nindex 292d354..fcbc52d 100644\n--- a/plone/tiles/tile.py\n+++ b/plone/tiles/tile.py\n@@ -3,10 +3,10 @@\n from plone.tiles.interfaces import ITile\n from plone.tiles.interfaces import ITileDataManager\n from Products.Five import BrowserView\n+from zExceptions import Forbidden\n from zope.component import queryMultiAdapter\n from zope.interface import implementer\n from zope.traversing.browser.absoluteurl import absoluteURL\n-from zExceptions import Forbidden\n \n \n @implementer(ITile)\ndiff --git a/plone/tiles/tiles.rst b/plone/tiles/tiles.rst\nindex 16361db..1686e60 100644\n--- a/plone/tiles/tiles.rst\n+++ b/plone/tiles/tiles.rst\n@@ -29,7 +29,7 @@ To use the package, you should first load its ZCML configuration:\n     ...      i18n_domain="plone.tiles.tests">\n     ...\n     ...     <include package="zope.component" file="meta.zcml" />\n-    ...     <include package="zope.app.publisher" file="meta.zcml" />\n+    ...     <include package="zope.browserpage" file="meta.zcml" />\n     ...\n     ...     <include package="plone.tiles" file="meta.zcml" />\n     ...     <include package="plone.tiles" />\ndiff --git a/setup.py b/setup.py\nindex 4040b21..f9e5fd5 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'2.0.1.dev0\'\n+version = \'2.1.dev0\'\n \n setup(\n     name=\'plone.tiles\',\n@@ -20,7 +20,6 @@\n         \'Development Status :: 5 - Production/Stable\',\n         \'Environment :: Web Environment\',\n         \'Framework :: Plone\',\n-        \'Framework :: Plone :: 4.2\',\n         \'Framework :: Plone :: 4.3\',\n         \'Framework :: Plone :: 5.0\',\n         \'Framework :: Plone :: 5.1\',\n@@ -41,9 +40,10 @@\n     include_package_data=True,\n     zip_safe=False,\n     install_requires=[\n+        \'plone.subrequest\',\n         \'setuptools\',\n-        \'zope.app.publisher\',\n         \'zope.annotation\',\n+        \'zope.browserpage\',\n         \'zope.component\',\n         \'zope.configuration\',\n         \'zope.interface\',\n@@ -52,12 +52,11 @@\n         \'zope.security\',\n         \'zope.traversing\',\n         \'Zope2\',\n-        \'plone.subrequest\'\n     ],\n     extras_require={\n         \'test\': [\n             \'plone.testing [zca, z2]\',\n-            \'plone.rfc822\'\n+            \'plone.rfc822\',\n         ],\n     },\n )\ndiff --git a/test-4.3.x.cfg b/test-4.3.x.cfg\nindex b132810..c8aa80b 100644\n--- a/test-4.3.x.cfg\n+++ b/test-4.3.x.cfg\n@@ -14,7 +14,8 @@ directory = plone\n flake8-ignore = E501,C901\n \n [versions]\n-setuptools =\n-zc.buildout =\n coverage = >=3.7\n+plone.recipe.zope2instance = 4.4.0\n plone.tiles =\n+setuptools =\n+zc.buildout =\ndiff --git a/test-4.2.x.cfg b/test-5.0.x.cfg\nsimilarity index 86%\nrename from test-4.2.x.cfg\nrename to test-5.0.x.cfg\nindex 3b27f67..7e83a40 100644\n--- a/test-4.2.x.cfg\n+++ b/test-5.0.x.cfg\n@@ -1,6 +1,6 @@\n [buildout]\n extends =\n-    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-4.2.x.cfg\n+    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.0.x.cfg\n     https://raw.githubusercontent.com/collective/buildout.plonetest/master/qa.cfg\n \n package-name = plone.tiles\n@@ -14,7 +14,8 @@ directory = plone\n flake8-ignore = E501,C901\n \n [versions]\n-setuptools =\n-zc.buildout =\n coverage = >=3.7\n+plone.recipe.zope2instance = 4.4.0\n plone.tiles =\n+setuptools =\n+zc.buildout =\ndiff --git a/test-5.x.cfg b/test-5.1.x.cfg\nsimilarity index 92%\nrename from test-5.x.cfg\nrename to test-5.1.x.cfg\nindex fb61ae4..d514ba0 100644\n--- a/test-5.x.cfg\n+++ b/test-5.1.x.cfg\n@@ -14,7 +14,8 @@ directory = plone\n flake8-ignore = E501,C901\n \n [versions]\n-setuptools =\n-zc.buildout =\n coverage = >=3.7\n+plone.recipe.zope2instance = 4.4.0\n plone.tiles =\n+setuptools =\n+zc.buildout =\n'

