Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-07-10T13:58:50+02:00
Author: Tom Gross (tomgross) <itconsense@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/2084a72bcdb0013cb301c7b990f6aaea7dc57e00

Fix namechooser encoding issue

Files changed:
M CHANGES.rst
M plone/app/content/namechooser.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex e1c6871..0916d70 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Fix namechooser encoding issue\n+  [tomgross]\n \n \n 3.5.3 (2018-06-18)\ndiff --git a/plone/app/content/namechooser.py b/plone/app/content/namechooser.py\nindex ac31603..659e580 100644\n--- a/plone/app/content/namechooser.py\n+++ b/plone/app/content/namechooser.py\n@@ -45,7 +45,8 @@ def chooseName(self, name, obj):\n                 name = obj.__class__.__name__\n \n         if not isinstance(name, six.text_type):\n-            name = name.encode('utf-8')\n+            name = six.text_type(name, 'utf-8')\n+            #name = name.encode('utf-8')\n \n         request = getattr(obj.__of__(container), 'REQUEST', None)\n         if request is not None:\n"

Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-09-12T10:05:35+02:00
Author: Sune Broendum Woeller (sunew) <sune@woeller.dk>
Commit: https://github.com/plone/plone.app.content/commit/c1f0cc1f6def42c1415fc2dc352080f3c0b1d2c7

Merge branch 'master' into fix_namechooser_encoding_issue

Files changed:
M CHANGES.rst
M plone/app/content/browser/contents/workflow.py
M plone/app/content/tests/test_folder.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0916d70..95c3180 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -17,6 +17,10 @@ Bug fixes:\n - Fix namechooser encoding issue\n   [tomgross]\n \n+- fc_workflow view now reindex the object after state change.\n+  This fix the problem that some index dates (effective and modified for example) was\n+  updated only when the state was changed from the toolbar.\n+  [cekk]\n \n 3.5.3 (2018-06-18)\n ------------------\ndiff --git a/plone/app/content/browser/contents/workflow.py b/plone/app/content/browser/contents/workflow.py\nindex a0b14a2..709c4f0 100644\n--- a/plone/app/content/browser/contents/workflow.py\n+++ b/plone/app/content/browser/contents/workflow.py\n@@ -83,6 +83,7 @@ def action(self, obj, bypass_recurse=False):\n                 if recurse and IFolderish.providedBy(obj):\n                     for sub in obj.values():\n                         self.action(sub)\n+                obj.reindexObject()\n             except ConflictError:\n                 raise\n             except Exception:\ndiff --git a/plone/app/content/tests/test_folder.py b/plone/app/content/tests/test_folder.py\nindex 914e071..9f77b45 100644\n--- a/plone/app/content/tests/test_folder.py\n+++ b/plone/app/content/tests/test_folder.py\n@@ -14,6 +14,7 @@\n from Products.CMFCore.utils import getToolByName\n from six.moves.urllib.parse import urlparse\n from Testing.makerequest import makerequest\n+from transaction import commit\n from zope.annotation.interfaces import IAttributeAnnotatable\n from zope.interface import alsoProvides\n from zope.publisher.browser import TestRequest\n@@ -166,17 +167,47 @@ def testCreators(self):\n \n class WorkflowTest(BaseTest):\n \n-    layer = PLONE_APP_CONTENT_DX_INTEGRATION_TESTING\n+    layer = PLONE_APP_CONTENT_DX_FUNCTIONAL_TESTING\n+\n+    def convertDateTimeToIndexRepr(self, date):\n+        t_tup = date.toZone(\'UTC\').parts()\n+        yr = t_tup[0]\n+        mo = t_tup[1]\n+        dy = t_tup[2]\n+        hr = t_tup[3]\n+        mn = t_tup[4]\n+\n+        return ((((yr * 12 + mo) * 31 + dy) * 24 + hr) * 60 + mn)\n \n     def testStateChange(self):\n         from plone.app.content.browser.contents.workflow import WorkflowActionView  # noqa\n         self.request.form[\'transition\'] = \'publish\'\n+        default_effective = DateTime(\'1969/12/31 00:00:00 {0}\'.format(\n+            DateTime().timezone()\n+        ))\n+        default_effective_index = self.convertDateTimeToIndexRepr(\n+            default_effective\n+        )\n+        pc = getToolByName(self.portal, "portal_catalog")\n+        # i need to call it, to populate catalog indexes\n+        pc()\n+        self.assertEquals(\n+            pc.uniqueValuesFor(\'effective\'),\n+            (default_effective_index,))\n         view = WorkflowActionView(self.portal.page, self.request)\n         view()\n         workflowTool = getToolByName(self.portal, "portal_workflow")\n         self.assertEquals(\n             workflowTool.getInfoFor(self.portal.page, \'review_state\'),\n             \'published\')\n+        # commit to update indexes in catalog\n+        commit()\n+        effective_index = self.convertDateTimeToIndexRepr(\n+            self.portal.page.effective_date\n+        )\n+        self.assertEquals(\n+            pc.uniqueValuesFor(\'effective\'),\n+            (effective_index,))\n \n \n class RenameTest(BaseTest):\n'

Repository: plone.app.content


Branch: refs/heads/master
Date: 2018-09-13T15:53:54+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/f4dd90f32f8dd08ce7768e73eb221222e21372d6

Merge pull request #160 from plone/fix_namechooser_encoding_issue

Fix namechooser encoding issue

Files changed:
M CHANGES.rst
M plone/app/content/namechooser.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 7817548..95c3180 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,6 +14,9 @@ New features:\n \n Bug fixes:\n \n+- Fix namechooser encoding issue\n+  [tomgross]\n+\n - fc_workflow view now reindex the object after state change.\n   This fix the problem that some index dates (effective and modified for example) was\n   updated only when the state was changed from the toolbar.\ndiff --git a/plone/app/content/namechooser.py b/plone/app/content/namechooser.py\nindex ac31603..659e580 100644\n--- a/plone/app/content/namechooser.py\n+++ b/plone/app/content/namechooser.py\n@@ -45,7 +45,8 @@ def chooseName(self, name, obj):\n                 name = obj.__class__.__name__\n \n         if not isinstance(name, six.text_type):\n-            name = name.encode('utf-8')\n+            name = six.text_type(name, 'utf-8')\n+            #name = name.encode('utf-8')\n \n         request = getattr(obj.__of__(container), 'REQUEST', None)\n         if request is not None:\n"

