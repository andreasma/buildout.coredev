Repository: Products.ResourceRegistries


Branch: refs/heads/master
Date: 2018-01-30T00:17:15+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.ResourceRegistries/commit/d083ce38e53f5fc586ccc6d0f7590c01b1640d27

fix relative imports for py3

Files changed:
M Products/ResourceRegistries/tools/CSSRegistry.py
M Products/ResourceRegistries/tools/JSRegistry.py
M Products/ResourceRegistries/tools/KSSRegistry.py
M setup.py

diff --git a/Products/ResourceRegistries/tools/CSSRegistry.py b/Products/ResourceRegistries/tools/CSSRegistry.py
index 9231836..7398b48 100644
--- a/Products/ResourceRegistries/tools/CSSRegistry.py
+++ b/Products/ResourceRegistries/tools/CSSRegistry.py
@@ -1,8 +1,7 @@
+from .packer import CSSPacker
 from AccessControl import ClassSecurityInfo
 from Acquisition import aq_parent
 from App.class_init import InitializeClass
-from packer import CSSPacker
-from Products.CMFCore.utils import getToolByName
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 from Products.ResourceRegistries import config
 from Products.ResourceRegistries import permissions
@@ -194,7 +193,7 @@ def _compressCSS(self, content, level='safe'):
     security.declarePrivate('finalizeContent')
     def finalizeContent(self, resource, content):
         """Finalize the resource content."""
-        
+
         compression = resource.getCompression()
         if compression != 'none' and not self.getDebugMode():
             orig_url = "%s/%s?original=1" % (self.absolute_url(), resource.getId())
@@ -204,19 +203,19 @@ def finalizeContent(self, resource, content):
         m = resource.getMedia()
         if m:
             content = '@media %s {\n%s\n}\n' % (m, content)
-        
+
         if resource.getApplyPrefix() and not self.getDebugMode():
             prefix = aq_parent(self).absolute_url_path()
             if prefix.endswith('/'):
                 prefix = prefix[:-1]
-            
+
             resourceName = resource.getId()
-            
+
             if '/' in resourceName:
                 prefix += '/' + '/'.join(resourceName.split('/')[:-1])
-            
+
             content = applyPrefix(content, prefix)
-        
+
         return content
 
     #
@@ -294,10 +293,10 @@ def registerStylesheet(self, id, expression='', media='screen',
                            authenticated=False, skipCooking=False,
                            applyPrefix=False, bundle='default'):
         """Register a stylesheet."""
-        
+
         if not id:
             raise ValueError("id is required")
-        
+
         stylesheet = self.resource_class(
                                 id,
                                 expression=expression,
@@ -320,7 +319,7 @@ def updateStylesheet(self, id, **data):
         stylesheet = self.getResourcesDict().get(id, None)
         if stylesheet is None:
             raise ValueError('Invalid resource id %s' % (id))
-        
+
         if data.get('expression', None) is not None:
             stylesheet.setExpression(data['expression'])
         if data.get('authenticated', None) is not None:
@@ -357,7 +356,7 @@ def getRenderingOptions(self):
     def getCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.CSS_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.ManagePortal, 'getExternalRenderingOptions')
     def getExternalRenderingOptions(self):
         """Rendering methods for use in ZMI forms."""
diff --git a/Products/ResourceRegistries/tools/JSRegistry.py b/Products/ResourceRegistries/tools/JSRegistry.py
index befe75f..8e06d9c 100644
--- a/Products/ResourceRegistries/tools/JSRegistry.py
+++ b/Products/ResourceRegistries/tools/JSRegistry.py
@@ -1,7 +1,7 @@
+from .packer import JavascriptKeywordMapper
+from .packer import JavascriptPacker
 from AccessControl import ClassSecurityInfo
 from App.class_init import InitializeClass
-from packer import JavascriptKeywordMapper
-from packer import JavascriptPacker
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 from Products.ResourceRegistries import config
 from Products.ResourceRegistries import permissions
@@ -240,7 +240,7 @@ def updateScript(self, id, **data):
     def getCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.JS_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.ManagePortal, 'getExternalCompressionOptions')
     def getExternalCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
diff --git a/Products/ResourceRegistries/tools/KSSRegistry.py b/Products/ResourceRegistries/tools/KSSRegistry.py
index 6d8b63c..90adc12 100644
--- a/Products/ResourceRegistries/tools/KSSRegistry.py
+++ b/Products/ResourceRegistries/tools/KSSRegistry.py
@@ -1,7 +1,6 @@
+from .packer import CSSPacker
 from AccessControl import ClassSecurityInfo
 from App.class_init import InitializeClass
-from packer import CSSPacker
-from Products.CMFCore.utils import getToolByName
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 from Products.ResourceRegistries import config
 from Products.ResourceRegistries import permissions
@@ -190,7 +189,7 @@ def updateKineticStylesheet(self, id, **data):
         kineticstylesheet = self.getResourcesDict().get(id, None)
         if kineticstylesheet is None:
             raise ValueError('Invalid resource id %s' % (id))
-        
+
         if data.get('expression', None) is not None:
             kineticstylesheet.setExpression(data['expression'])
         if data.get('authenticated', None) is not None:
@@ -212,12 +211,12 @@ def updateKineticStylesheet(self, id, **data):
     def getCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.KSS_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.ManagePortal, 'getExternalCompressionOptions')
     def getExternalCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.KSS_EXTERNAL_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.View, 'getContentType')
     def getContentType(self):
         """Return the registry content type."""
diff --git a/setup.py b/setup.py
index 749857c..63e475d 100644
--- a/setup.py
+++ b/setup.py
@@ -38,6 +38,7 @@
     ),
     install_requires=[
         'setuptools',
+        'six',
         'zope.component',
         'zope.interface',
         'zope.viewlet',


Repository: Products.ResourceRegistries


Branch: refs/heads/master
Date: 2018-01-30T00:22:33+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.ResourceRegistries/commit/f3c5b59838a24ed1c1831a379ac7e585120d51da

add changenote

Files changed:
M CHANGES.rst

diff --git a/CHANGES.rst b/CHANGES.rst
index 736b286..03565d0 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,6 +14,9 @@ New features:
 
 Bug fixes:
 
+- Fix relative import for py3
+  [pbauer]
+
 - Add Python 2 / 3 compatibility.  [maurits]
 
 


Repository: Products.ResourceRegistries


Branch: refs/heads/master
Date: 2018-02-21T11:32:36+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.ResourceRegistries/commit/7c767fb662eca4c3825dcf553cf29abdeeebe10d

Merge branch 'master' into python3

Files changed:
A setup.cfg
M CHANGES.rst
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 03565d0..fcaf7d2 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -1,7 +1,7 @@
 Changelog
 =========
 
-3.0.6 (unreleased)
+3.0.7 (unreleased)
 ------------------
 
 Breaking changes:
@@ -17,6 +17,12 @@ Bug fixes:
 - Fix relative import for py3
   [pbauer]
 
+
+3.0.6 (2018-02-05)
+------------------
+
+Bug fixes:
+
 - Add Python 2 / 3 compatibility.  [maurits]
 
 
diff --git a/setup.cfg b/setup.cfg
new file mode 100644
index 0000000..d80c466
--- /dev/null
+++ b/setup.cfg
@@ -0,0 +1,6 @@
+[zest.releaser]
+create-wheel = yes
+
+# When Python 2-3 compatible:
+# [bdist_wheel]
+# universal = 1
diff --git a/setup.py b/setup.py
index 63e475d..b9cba4f 100644
--- a/setup.py
+++ b/setup.py
@@ -1,6 +1,6 @@
 from setuptools import setup, find_packages
 
-version = '3.0.6.dev0'
+version = '3.0.7.dev0'
 
 setup(
     name='Products.ResourceRegistries',
@@ -16,7 +16,7 @@
         "Framework :: Plone :: 5.0",
         "Framework :: Plone :: 5.1",
         "Framework :: Zope2",
-        "License :: OSI Approved :: GNU General Public License (GPL)",
+        "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
         "Operating System :: OS Independent",
         "Programming Language :: Python",
         "Programming Language :: Python :: 2.7",


Repository: Products.ResourceRegistries


Branch: refs/heads/master
Date: 2018-02-21T11:35:15+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.ResourceRegistries/commit/aaeede0ca639c7f2bb3733c04c1c99d3d2e77bf0

absolute import for consistency

Files changed:
M Products/ResourceRegistries/tools/CSSRegistry.py

diff --git a/Products/ResourceRegistries/tools/CSSRegistry.py b/Products/ResourceRegistries/tools/CSSRegistry.py
index 7398b48..694b2a6 100644
--- a/Products/ResourceRegistries/tools/CSSRegistry.py
+++ b/Products/ResourceRegistries/tools/CSSRegistry.py
@@ -1,4 +1,4 @@
-from .packer import CSSPacker
+# -*- coding: utf-8 -*-
 from AccessControl import ClassSecurityInfo
 from Acquisition import aq_parent
 from App.class_init import InitializeClass
@@ -8,6 +8,7 @@
 from Products.ResourceRegistries.interfaces import ICSSRegistry
 from Products.ResourceRegistries.tools.BaseRegistry import BaseRegistryTool
 from Products.ResourceRegistries.tools.BaseRegistry import Resource
+from Products.ResourceRegistries.tools.packer import CSSPacker
 from Products.ResourceRegistries.utils import applyPrefix
 from zope.interface import implementer
 


Repository: Products.ResourceRegistries


Branch: refs/heads/master
Date: 2018-04-03T14:23:13+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.ResourceRegistries/commit/50315b6d6492e6227c6be9af573213a2ab50f168

Merge pull request #26 from plone/python3

fix relative imports for py3

Files changed:
M CHANGES.rst
M Products/ResourceRegistries/tools/CSSRegistry.py
M Products/ResourceRegistries/tools/JSRegistry.py
M Products/ResourceRegistries/tools/KSSRegistry.py
M setup.py

diff --git a/CHANGES.rst b/CHANGES.rst
index a1e3081..fcaf7d2 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,7 +14,8 @@ New features:
 
 Bug fixes:
 
-- *add item here*
+- Fix relative import for py3
+  [pbauer]
 
 
 3.0.6 (2018-02-05)
diff --git a/Products/ResourceRegistries/tools/CSSRegistry.py b/Products/ResourceRegistries/tools/CSSRegistry.py
index 9231836..694b2a6 100644
--- a/Products/ResourceRegistries/tools/CSSRegistry.py
+++ b/Products/ResourceRegistries/tools/CSSRegistry.py
@@ -1,14 +1,14 @@
+# -*- coding: utf-8 -*-
 from AccessControl import ClassSecurityInfo
 from Acquisition import aq_parent
 from App.class_init import InitializeClass
-from packer import CSSPacker
-from Products.CMFCore.utils import getToolByName
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 from Products.ResourceRegistries import config
 from Products.ResourceRegistries import permissions
 from Products.ResourceRegistries.interfaces import ICSSRegistry
 from Products.ResourceRegistries.tools.BaseRegistry import BaseRegistryTool
 from Products.ResourceRegistries.tools.BaseRegistry import Resource
+from Products.ResourceRegistries.tools.packer import CSSPacker
 from Products.ResourceRegistries.utils import applyPrefix
 from zope.interface import implementer
 
@@ -194,7 +194,7 @@ def _compressCSS(self, content, level='safe'):
     security.declarePrivate('finalizeContent')
     def finalizeContent(self, resource, content):
         """Finalize the resource content."""
-        
+
         compression = resource.getCompression()
         if compression != 'none' and not self.getDebugMode():
             orig_url = "%s/%s?original=1" % (self.absolute_url(), resource.getId())
@@ -204,19 +204,19 @@ def finalizeContent(self, resource, content):
         m = resource.getMedia()
         if m:
             content = '@media %s {\n%s\n}\n' % (m, content)
-        
+
         if resource.getApplyPrefix() and not self.getDebugMode():
             prefix = aq_parent(self).absolute_url_path()
             if prefix.endswith('/'):
                 prefix = prefix[:-1]
-            
+
             resourceName = resource.getId()
-            
+
             if '/' in resourceName:
                 prefix += '/' + '/'.join(resourceName.split('/')[:-1])
-            
+
             content = applyPrefix(content, prefix)
-        
+
         return content
 
     #
@@ -294,10 +294,10 @@ def registerStylesheet(self, id, expression='', media='screen',
                            authenticated=False, skipCooking=False,
                            applyPrefix=False, bundle='default'):
         """Register a stylesheet."""
-        
+
         if not id:
             raise ValueError("id is required")
-        
+
         stylesheet = self.resource_class(
                                 id,
                                 expression=expression,
@@ -320,7 +320,7 @@ def updateStylesheet(self, id, **data):
         stylesheet = self.getResourcesDict().get(id, None)
         if stylesheet is None:
             raise ValueError('Invalid resource id %s' % (id))
-        
+
         if data.get('expression', None) is not None:
             stylesheet.setExpression(data['expression'])
         if data.get('authenticated', None) is not None:
@@ -357,7 +357,7 @@ def getRenderingOptions(self):
     def getCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.CSS_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.ManagePortal, 'getExternalRenderingOptions')
     def getExternalRenderingOptions(self):
         """Rendering methods for use in ZMI forms."""
diff --git a/Products/ResourceRegistries/tools/JSRegistry.py b/Products/ResourceRegistries/tools/JSRegistry.py
index befe75f..8e06d9c 100644
--- a/Products/ResourceRegistries/tools/JSRegistry.py
+++ b/Products/ResourceRegistries/tools/JSRegistry.py
@@ -1,7 +1,7 @@
+from .packer import JavascriptKeywordMapper
+from .packer import JavascriptPacker
 from AccessControl import ClassSecurityInfo
 from App.class_init import InitializeClass
-from packer import JavascriptKeywordMapper
-from packer import JavascriptPacker
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 from Products.ResourceRegistries import config
 from Products.ResourceRegistries import permissions
@@ -240,7 +240,7 @@ def updateScript(self, id, **data):
     def getCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.JS_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.ManagePortal, 'getExternalCompressionOptions')
     def getExternalCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
diff --git a/Products/ResourceRegistries/tools/KSSRegistry.py b/Products/ResourceRegistries/tools/KSSRegistry.py
index 6d8b63c..90adc12 100644
--- a/Products/ResourceRegistries/tools/KSSRegistry.py
+++ b/Products/ResourceRegistries/tools/KSSRegistry.py
@@ -1,7 +1,6 @@
+from .packer import CSSPacker
 from AccessControl import ClassSecurityInfo
 from App.class_init import InitializeClass
-from packer import CSSPacker
-from Products.CMFCore.utils import getToolByName
 from Products.PageTemplates.PageTemplateFile import PageTemplateFile
 from Products.ResourceRegistries import config
 from Products.ResourceRegistries import permissions
@@ -190,7 +189,7 @@ def updateKineticStylesheet(self, id, **data):
         kineticstylesheet = self.getResourcesDict().get(id, None)
         if kineticstylesheet is None:
             raise ValueError('Invalid resource id %s' % (id))
-        
+
         if data.get('expression', None) is not None:
             kineticstylesheet.setExpression(data['expression'])
         if data.get('authenticated', None) is not None:
@@ -212,12 +211,12 @@ def updateKineticStylesheet(self, id, **data):
     def getCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.KSS_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.ManagePortal, 'getExternalCompressionOptions')
     def getExternalCompressionOptions(self):
         """Compression methods for use in ZMI forms."""
         return config.KSS_EXTERNAL_COMPRESSION_METHODS
-    
+
     security.declareProtected(permissions.View, 'getContentType')
     def getContentType(self):
         """Return the registry content type."""
diff --git a/setup.py b/setup.py
index f086d79..b9cba4f 100644
--- a/setup.py
+++ b/setup.py
@@ -38,6 +38,7 @@
     ),
     install_requires=[
         'setuptools',
+        'six',
         'zope.component',
         'zope.interface',
         'zope.viewlet',


