Repository: plone.testing


Branch: refs/heads/4.3.x
Date: 2018-10-04T12:31:45+02:00
Author: Joni Orponen (Rotonen) <joni.orponen@gmail.com>
Commit: https://github.com/plone/plone.testing/commit/0c9cee5e102a2363d3574218333e7234ae32aa93

Enable picking a free port for ZServer layers automatically.

Files changed:
M CHANGES.rst
M src/plone/testing/z2.py
M src/plone/testing/z2.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 91f6577..5e6d8b3 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -6,7 +6,9 @@ Changelog\n \n Breaking changes:\n \n-- *add item here*\n+- Default to picking a dynamical port for ZServer layers instead of a static\n+  default port.\n+  [Rotonen]\n \n New features:\n \ndiff --git a/src/plone/testing/z2.py b/src/plone/testing/z2.py\nindex f9b8098..6f7d916 100644\n--- a/src/plone/testing/z2.py\n+++ b/src/plone/testing/z2.py\n@@ -966,8 +966,10 @@ class ZServer(Layer):\n \n     defaultBases = (STARTUP,)\n \n-    host = os.environ.get(\'ZSERVER_HOST\', \'localhost\')\n-    port = int(os.environ.get(\'ZSERVER_PORT\', 55001))\n+    # Default to \'bindall\' (marked by an empty string) from os.socket\n+    host = os.environ.get(\'ZSERVER_HOST\', \'\')\n+    # Default to letting the OS allocate us a free port (marked by 0)\n+    port = int(os.environ.get(\'ZSERVER_PORT\', 0))\n     timeout = 5.0\n     log = None\n \n@@ -1030,6 +1032,17 @@ def setUpServer(self):\n \n         self.zserver = server\n \n+        # If we dynamically set the host/port, we want to reset it to localhost\n+        # Otherwise this will depend on, for example, the local network setup\n+        if self.host in (\'\', \'0.0.0.0\', \'127.0.0.1\', ):\n+            self.zserver.server_name = \'localhost\'\n+\n+        # Refresh the hostname and port in case we dynamically picked them\n+        self.host = self.zserver.server_name\n+        self[\'host\'] = self.host\n+        self.port = self.zserver.server_port\n+        self[\'port\'] = self.port\n+\n     def tearDownServer(self):\n         """Close the ZServer socket\n         """\n@@ -1077,8 +1090,10 @@ class FTPServer(ZServer):\n \n     defaultBases = (STARTUP,)\n \n-    host = os.environ.get(\'FTPSERVER_HOST\', \'localhost\')\n-    port = int(os.environ.get(\'FTPSERVER_PORT\', 55002))\n+    # Default to \'bindall\' (marked by an empty string) from os.socket\n+    host = os.environ.get(\'FTPSERVER_HOST\', \'\')\n+    # Default to letting the OS allocate us a free port (marked by 0)\n+    port = int(os.environ.get(\'FTPSERVER_PORT\', 0))\n     threads = 1\n     timeout = 5.0\n     log = None\n@@ -1103,6 +1118,20 @@ def setUpServer(self):\n             port=self.port,\n             logger_object=zopeLog)\n \n+\n+        # Refresh the hostname and port in case we dynamically picked them\n+        self.host, self.port = self.ftpServer.socket.getsockname()\n+\n+        # If we dynamically set the host/port, we want to reset it to localhost\n+        # Otherwise this will depend on, for example, the local network setup\n+        if self.host in (\'\', \'0.0.0.0\', \'127.0.0.1\', ):\n+            self.host = \'localhost\'\n+            self.ftpServer.hostname = \'localhost\'\n+            self.ftpServer.ip = \'127.0.0.1\'\n+\n+        self[\'host\'] = self.host\n+        self[\'port\'] = self.port\n+\n     def tearDownServer(self):\n         """Close the FTPServer socket\n         """\ndiff --git a/src/plone/testing/z2.rst b/src/plone/testing/z2.rst\nindex 6479e6a..f0fb4ac 100644\n--- a/src/plone/testing/z2.rst\n+++ b/src/plone/testing/z2.rst\n@@ -465,13 +465,7 @@ The ``ZSERVER`` layer provides a ``FunctionalTesting`` layer that has ``ZSERVER_\n After layer setup, the resources ``host`` and ``port`` are available, and indicate where Zope is running.::\n \n     >>> host = z2.ZSERVER[\'host\']\n-    >>> host\n-    \'localhost\'\n-\n     >>> port = z2.ZSERVER[\'port\']\n-    >>> import os\n-    >>> port == int(os.environ.get(\'ZSERVER_PORT\', 55001))\n-    True\n \n Let\'s now simulate a test.\n Test setup does nothing beyond what the base layers do.::\n@@ -569,13 +563,7 @@ The ``FTP_SERVER`` layer is based on ``FTP_SERVER_FIXTURE``, using the ``Functio\n After layer setup, the resources ``host`` and ``port`` are available, and indicate where Zope is running.::\n \n     >>> host = z2.FTP_SERVER[\'host\']\n-    >>> host\n-    \'localhost\'\n-\n     >>> port = z2.FTP_SERVER[\'port\']\n-    >>> import os\n-    >>> port == int(os.environ.get(\'FTPSERVER_PORT\', 55002))\n-    True\n \n Let\'s now simulate a test.\n Test setup does nothing beyond what the base layers do.::\n'

Repository: plone.testing


Branch: refs/heads/4.3.x
Date: 2018-10-04T22:54:02+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.testing/commit/9377471a3745959f6b4aa80076fce713831ab619

Merge pull request #55 from plone/free-ports-4.3

Enable picking a free port for ZServer layers automatically.

Files changed:
M CHANGES.rst
M src/plone/testing/z2.py
M src/plone/testing/z2.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 91f6577..5e6d8b3 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -6,7 +6,9 @@ Changelog\n \n Breaking changes:\n \n-- *add item here*\n+- Default to picking a dynamical port for ZServer layers instead of a static\n+  default port.\n+  [Rotonen]\n \n New features:\n \ndiff --git a/src/plone/testing/z2.py b/src/plone/testing/z2.py\nindex f9b8098..6f7d916 100644\n--- a/src/plone/testing/z2.py\n+++ b/src/plone/testing/z2.py\n@@ -966,8 +966,10 @@ class ZServer(Layer):\n \n     defaultBases = (STARTUP,)\n \n-    host = os.environ.get(\'ZSERVER_HOST\', \'localhost\')\n-    port = int(os.environ.get(\'ZSERVER_PORT\', 55001))\n+    # Default to \'bindall\' (marked by an empty string) from os.socket\n+    host = os.environ.get(\'ZSERVER_HOST\', \'\')\n+    # Default to letting the OS allocate us a free port (marked by 0)\n+    port = int(os.environ.get(\'ZSERVER_PORT\', 0))\n     timeout = 5.0\n     log = None\n \n@@ -1030,6 +1032,17 @@ def setUpServer(self):\n \n         self.zserver = server\n \n+        # If we dynamically set the host/port, we want to reset it to localhost\n+        # Otherwise this will depend on, for example, the local network setup\n+        if self.host in (\'\', \'0.0.0.0\', \'127.0.0.1\', ):\n+            self.zserver.server_name = \'localhost\'\n+\n+        # Refresh the hostname and port in case we dynamically picked them\n+        self.host = self.zserver.server_name\n+        self[\'host\'] = self.host\n+        self.port = self.zserver.server_port\n+        self[\'port\'] = self.port\n+\n     def tearDownServer(self):\n         """Close the ZServer socket\n         """\n@@ -1077,8 +1090,10 @@ class FTPServer(ZServer):\n \n     defaultBases = (STARTUP,)\n \n-    host = os.environ.get(\'FTPSERVER_HOST\', \'localhost\')\n-    port = int(os.environ.get(\'FTPSERVER_PORT\', 55002))\n+    # Default to \'bindall\' (marked by an empty string) from os.socket\n+    host = os.environ.get(\'FTPSERVER_HOST\', \'\')\n+    # Default to letting the OS allocate us a free port (marked by 0)\n+    port = int(os.environ.get(\'FTPSERVER_PORT\', 0))\n     threads = 1\n     timeout = 5.0\n     log = None\n@@ -1103,6 +1118,20 @@ def setUpServer(self):\n             port=self.port,\n             logger_object=zopeLog)\n \n+\n+        # Refresh the hostname and port in case we dynamically picked them\n+        self.host, self.port = self.ftpServer.socket.getsockname()\n+\n+        # If we dynamically set the host/port, we want to reset it to localhost\n+        # Otherwise this will depend on, for example, the local network setup\n+        if self.host in (\'\', \'0.0.0.0\', \'127.0.0.1\', ):\n+            self.host = \'localhost\'\n+            self.ftpServer.hostname = \'localhost\'\n+            self.ftpServer.ip = \'127.0.0.1\'\n+\n+        self[\'host\'] = self.host\n+        self[\'port\'] = self.port\n+\n     def tearDownServer(self):\n         """Close the FTPServer socket\n         """\ndiff --git a/src/plone/testing/z2.rst b/src/plone/testing/z2.rst\nindex 6479e6a..f0fb4ac 100644\n--- a/src/plone/testing/z2.rst\n+++ b/src/plone/testing/z2.rst\n@@ -465,13 +465,7 @@ The ``ZSERVER`` layer provides a ``FunctionalTesting`` layer that has ``ZSERVER_\n After layer setup, the resources ``host`` and ``port`` are available, and indicate where Zope is running.::\n \n     >>> host = z2.ZSERVER[\'host\']\n-    >>> host\n-    \'localhost\'\n-\n     >>> port = z2.ZSERVER[\'port\']\n-    >>> import os\n-    >>> port == int(os.environ.get(\'ZSERVER_PORT\', 55001))\n-    True\n \n Let\'s now simulate a test.\n Test setup does nothing beyond what the base layers do.::\n@@ -569,13 +563,7 @@ The ``FTP_SERVER`` layer is based on ``FTP_SERVER_FIXTURE``, using the ``Functio\n After layer setup, the resources ``host`` and ``port`` are available, and indicate where Zope is running.::\n \n     >>> host = z2.FTP_SERVER[\'host\']\n-    >>> host\n-    \'localhost\'\n-\n     >>> port = z2.FTP_SERVER[\'port\']\n-    >>> import os\n-    >>> port == int(os.environ.get(\'FTPSERVER_PORT\', 55002))\n-    True\n \n Let\'s now simulate a test.\n Test setup does nothing beyond what the base layers do.::\n'

