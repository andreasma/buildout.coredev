Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/aa5c585f59848fb0988f568c38624b548fabc764

add figcaption support

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/tinymce/templates/image.xml

b'diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 3a72dd012..56d676675 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -482,6 +482,7 @@ define([\n         externalImage: this.options.text.externalImage,\n         externalImageText: this.options.text.externalImageText,\n         altText: this.options.text.alt,\n+        captionText: this.options.text.caption,\n         imageAlignText: this.options.text.imageAlign,\n         scaleText: this.options.text.scale,\n         imageScales: this.options.imageScales,\n@@ -502,6 +503,7 @@ define([\n       self.$subject = $(\'input[name="subject"]\', self.modal.$modal);\n \n       self.$alt = $(\'input[name="alt"]\', self.modal.$modal);\n+      self.$caption = $(\'input[name="caption"]\', self.modal.$modal);\n       self.$align = $(\'select[name="align"]\', self.modal.$modal);\n       self.$scale = $(\'select[name="scale"]\', self.modal.$modal);\n \n@@ -608,15 +610,27 @@ define([\n         };\n       }\n \n-      if (!self.imgElm) {\n-        data.id = \'__mcenew\';\n-        self.tiny.insertContent(self.dom.createHTML(\'img\', data));\n-        self.imgElm = self.dom.get(\'__mcenew\');\n-        self.dom.setAttrib(self.imgElm, \'id\', null);\n-      } else {\n-        self.dom.setAttribs(self.imgElm, data);\n+      if (self.figureElm) {\n+        self.dom.remove(self.figureElm);\n+      }\n+      if (self.imgElm) {\n+        self.dom.remove(self.imgElm);\n+      }\n+      if (self.captionElm) {\n+        self.dom.remove(self.captionElm);\n       }\n \n+      data.id = \'__mcenew\';\n+      var html_inner = self.dom.createHTML(\'img\', data);\n+      var caption = self.$caption.val();\n+      if (caption) {\n+        html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', {}, caption);\n+      }\n+      var html_string = self.dom.createHTML(\'figure\', {}, html_inner);\n+      self.tiny.insertContent(html_string);\n+      self.imgElm = self.dom.get(\'__mcenew\');\n+      self.dom.setAttrib(self.imgElm, \'id\', null);\n+\n       waitLoad(self.imgElm);\n       if (self.imgElm.complete) {\n         self.focusElement(self.imgElm);\n@@ -737,25 +751,37 @@ define([\n \n       self.selection = self.tiny.selection;\n       self.tiny.focus();\n-      var selectedElm = self.imgElm = self.selection.getNode();\n+      var selectedElm = self.selection.getNode();\n       self.anchorElm = self.dom.getParent(selectedElm, \'a[href]\');\n \n-      var linkType;\n+      var linkType\n       if (self.isImageMode()) {\n-        if (self.imgElm.nodeName !== \'IMG\') {\n-          // try finding elsewhere\n-          if (self.anchorElm) {\n-            var imgs = self.anchorElm.getElementsByTagName(\'img\');\n-            if (imgs.length > 0) {\n-              self.imgElm = imgs[0];\n-              self.focusElement(self.imgElm);\n-            }\n-          }\n+\n+        var figure;\n+        var img;\n+        var caption;\n+        if (selectedElm.nodeName === \'FIGURE\') {\n+          figure = selectedElm;\n+          img = figure.querySelector(\'img\');\n+          caption = figure.querySelector(\'figcaption\');\n+        } else if (selectedElm.nodeName === \'IMG\') {\n+          figure = selectedElm.closest(\'figure\');\n+          img = selectedElm;\n+          caption = figure.querySelector(\'figcaption\');\n+        } else if (selectedElm.nodeName === \'FIGCAPTION\') {\n+          figure = selectedElm.closest(\'figure\');\n+          img = figure.querySelector(\'img\');\n+          caption = selectedElm;\n         }\n-        if (self.imgElm.nodeName !== \'IMG\') {\n-          // okay, still no image, unset\n-          self.imgElm = null;\n+\n+        self.imgElm = img;\n+        self.figureElm = figure;\n+        self.captionElm = caption;\n+\n+        if (self.captionElm) {\n+          self.$caption.val(self.captionElm.innerText);\n         }\n+\n         if (self.imgElm) {\n           var src = self.dom.getAttrib(self.imgElm, \'src\');\n           self.$title.val(self.dom.getAttrib(self.imgElm, \'title\'));\n@@ -767,7 +793,7 @@ define([\n             var scale = self.dom.getAttrib(self.imgElm, \'data-scale\');\n             self.$scale.val(scale);\n             $(\'#tinylink-\' + self.linkType, self.modal.$modal).trigger(\'click\');\n-          }else if (src) {\n+          } else if (src) {\n             self.guessImageLink(src);\n           }\n           var className = self.dom.getAttrib(self.imgElm, \'class\');\n@@ -781,7 +807,8 @@ define([\n             }\n           }\n         }\n-      }else if (self.anchorElm) {\n+\n+      } else if (self.anchorElm) {\n         self.focusElement(self.anchorElm);\n         var href = \'\';\n         href = self.dom.getAttrib(self.anchorElm, \'href\');\ndiff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js\nindex d8bf58984..846280003 100644\n--- a/mockup/patterns/tinymce/pattern.js\n+++ b/mockup/patterns/tinymce/pattern.js\n@@ -3,7 +3,7 @@\n  * Options:\n  *    relatedItems(object): Related items pattern options. ({ attributes: ["UID", "Title", "Description", "getURL", "portal_type", "path", "ModificationDate"], batchSize: 20, basePath: "/", vocabularyUrl: null, width: 500, maximumSelectionSize: 1, placeholder: "Search for item on site..." })\n  *    upload(object): Upload pattern options. ({ attributes: look at upload pattern for getting the options list })\n- *    text(object): Translation strings ({ insertBtn: "Insert", cancelBtn: "Cancel", insertHeading: "Insert link", title: "Title", internal: "Internal", external: "External", email: "Email", anchor: "Anchor", subject: "Subject" image: "Image", imageAlign: "Align", scale: "Size", alt: "Alternative Text", externalImage: "External Image URI"})\n+ *    text(object): Translation strings ({ insertBtn: "Insert", cancelBtn: "Cancel", insertHeading: "Insert link", title: "Title", internal: "Internal", external: "External", email: "Email", anchor: "Anchor", subject: "Subject" image: "Image", imageAlign: "Align", scale: "Size", alt: "Alternative Text", caption: "Image Caption", externalImage: "External Image URI"})\n  *    imageScales(string): Image scale name/value object-array or JSON string for use in the image dialog.\n  *    targetList(array): TODO ([ {text: "Open in this window / frame", value: ""}, {text: "Open in new window", value: "_blank"}, {text: "Open in parent window / frame", value: "_parent"}, {text: "Open in top frame (replaces all frames)", value: "_top"}])\n  *    imageTypes(string): TODO (\'Image\')\n@@ -151,6 +151,7 @@ define([\n         externalImageText: _t(\'External Image URL (can be relative within this site or absolute if it starts with http:// or https://)\'),\n         upload: _t(\'Upload\'),\n         insertLinkHelp: _t(\'Specify the object to link to. It can be on this site already (Internal), an object you upload (Upload), from an external site (External), an email address (Email), or an anchor on this page (Anchor).\'),\n+        caption: _t(\'Image Caption\'),\n       },\n       // URL generation options\n       loadingBaseUrl: \'../../../node_modules/tinymce-builded/js/tinymce/\',\ndiff --git a/mockup/patterns/tinymce/templates/image.xml b/mockup/patterns/tinymce/templates/image.xml\nindex 2503e9777..383a2fb87 100644\n--- a/mockup/patterns/tinymce/templates/image.xml\n+++ b/mockup/patterns/tinymce/templates/image.xml\n@@ -60,6 +60,10 @@\n         <label><%- altText %></label>\n         <input type="text" name="alt" />\n       </div>\n+      <div class="form-group text">\n+        <label><%- captionText %></label>\n+        <input type="text" name="caption" />\n+      </div>\n       <div class="form-group align">\n         <label><%- imageAlignText %></label>\n         <select name="align">\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/9f256ff368ea7310a770aa2ba333b3cc5f6dcd91

Preserve HTML formating in image captions

Files changed:
M mockup/patterns/tinymce/js/links.js

b"diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 56d676675..754f8079b 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -625,6 +625,7 @@ define([\n       var caption = self.$caption.val();\n       if (caption) {\n         html_inner += '\\n' + self.dom.createHTML('figcaption', {}, caption);\n+        //html_inner += '\\n' + self.dom.createHTML('figcaption', { class: 'mceNonEditable' }, caption);\n       }\n       var html_string = self.dom.createHTML('figure', {}, html_inner);\n       self.tiny.insertContent(html_string);\n@@ -779,7 +780,7 @@ define([\n         self.captionElm = caption;\n \n         if (self.captionElm) {\n-          self.$caption.val(self.captionElm.innerText);\n+          self.$caption.val(self.captionElm.innerHTML);\n         }\n \n         if (self.imgElm) {\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/e72b462fa3bf3f51958a3d0bdc139e95bcd6022a

Use a textarea for the image caption

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/templates/image.xml

b'diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 754f8079b..8b7b06abe 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -503,7 +503,7 @@ define([\n       self.$subject = $(\'input[name="subject"]\', self.modal.$modal);\n \n       self.$alt = $(\'input[name="alt"]\', self.modal.$modal);\n-      self.$caption = $(\'input[name="caption"]\', self.modal.$modal);\n+      self.$caption = $(\'textarea[name="caption"]\', self.modal.$modal);\n       self.$align = $(\'select[name="align"]\', self.modal.$modal);\n       self.$scale = $(\'select[name="scale"]\', self.modal.$modal);\n \ndiff --git a/mockup/patterns/tinymce/templates/image.xml b/mockup/patterns/tinymce/templates/image.xml\nindex 383a2fb87..747e7343a 100644\n--- a/mockup/patterns/tinymce/templates/image.xml\n+++ b/mockup/patterns/tinymce/templates/image.xml\n@@ -62,7 +62,7 @@\n       </div>\n       <div class="form-group text">\n         <label><%- captionText %></label>\n-        <input type="text" name="caption" />\n+        <textarea name="caption" />\n       </div>\n       <div class="form-group align">\n         <label><%- imageAlignText %></label>\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/5b247592348c57edf3dd08e0f72a00313542c523

optional image captions

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/tinymce/templates/image.xml

b'diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 8b7b06abe..e2027cb3a 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -482,8 +482,9 @@ define([\n         externalImage: this.options.text.externalImage,\n         externalImageText: this.options.text.externalImageText,\n         altText: this.options.text.alt,\n-        captionText: this.options.text.caption,\n         imageAlignText: this.options.text.imageAlign,\n+        captionText: this.options.text.caption,\n+        imageCaption: this.options.imageCaption,\n         scaleText: this.options.text.scale,\n         imageScales: this.options.imageScales,\n         cancelBtn: this.options.text.cancelBtn,\n@@ -503,7 +504,9 @@ define([\n       self.$subject = $(\'input[name="subject"]\', self.modal.$modal);\n \n       self.$alt = $(\'input[name="alt"]\', self.modal.$modal);\n-      self.$caption = $(\'textarea[name="caption"]\', self.modal.$modal);\n+      if (this.options.imageCaption) {\n+        self.$caption = $(\'textarea[name="caption"]\', self.modal.$modal);\n+      }\n       self.$align = $(\'select[name="align"]\', self.modal.$modal);\n       self.$scale = $(\'select[name="scale"]\', self.modal.$modal);\n \n@@ -610,24 +613,27 @@ define([\n         };\n       }\n \n-      if (self.figureElm) {\n-        self.dom.remove(self.figureElm);\n-      }\n       if (self.imgElm) {\n         self.dom.remove(self.imgElm);\n       }\n-      if (self.captionElm) {\n+      if (this.options.imageCaption && self.captionElm) {\n         self.dom.remove(self.captionElm);\n       }\n+      if (this.options.imageCaption && self.figureElm) {\n+        self.dom.remove(self.figureElm);\n+      }\n \n       data.id = \'__mcenew\';\n       var html_inner = self.dom.createHTML(\'img\', data);\n-      var caption = self.$caption.val();\n+      var caption = this.options.imageCaption ? self.$caption.val() : false;\n+      var html_string;\n       if (caption) {\n         html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', {}, caption);\n         //html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', { class: \'mceNonEditable\' }, caption);\n+        html_string = self.dom.createHTML(\'figure\', {}, html_inner);\n+      } else {\n+        html_string = html_inner;\n       }\n-      var html_string = self.dom.createHTML(\'figure\', {}, html_inner);\n       self.tiny.insertContent(html_string);\n       self.imgElm = self.dom.get(\'__mcenew\');\n       self.dom.setAttrib(self.imgElm, \'id\', null);\n@@ -775,13 +781,15 @@ define([\n           caption = selectedElm;\n         }\n \n+        if (this.options.imageCaption) {\n+          self.captionElm = caption;\n+          if (self.captionElm) {\n+            self.$caption.val(self.captionElm.innerHTML);\n+          }\n+        }\n+\n         self.imgElm = img;\n         self.figureElm = figure;\n-        self.captionElm = caption;\n-\n-        if (self.captionElm) {\n-          self.$caption.val(self.captionElm.innerHTML);\n-        }\n \n         if (self.imgElm) {\n           var src = self.dom.getAttrib(self.imgElm, \'src\');\ndiff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js\nindex 846280003..b4ce73e68 100644\n--- a/mockup/patterns/tinymce/pattern.js\n+++ b/mockup/patterns/tinymce/pattern.js\n@@ -16,6 +16,7 @@\n  *    appendToScalePart(string): Text to append to generated image scale url part. (\'\')\n  *    linkAttribute(string): Ajax response data attribute to use for url. (\'path\')\n  *    defaultScale(string): Scale name to default to. (\'Original\')\n+ *    imageCaption(boolean): Activate image caption support in image modal overlays\n  *    inline(boolean): Show tinyMCE editor inline instead in an iframe. Use this on textarea inputs. If you want to use this pattern directly on a contenteditable, pass "inline: true" to the "tiny" options object. (false)\n  *\n  * Documentation:\n@@ -199,6 +200,7 @@ define([\n         //\'autoresize_max_height\': 900,\n         \'height\': 400\n       },\n+      imageCaption: true,\n       inline: false\n     },\n     addLinkClicked: function() {\ndiff --git a/mockup/patterns/tinymce/templates/image.xml b/mockup/patterns/tinymce/templates/image.xml\nindex 747e7343a..6f4ef2a83 100644\n--- a/mockup/patterns/tinymce/templates/image.xml\n+++ b/mockup/patterns/tinymce/templates/image.xml\n@@ -60,10 +60,12 @@\n         <label><%- altText %></label>\n         <input type="text" name="alt" />\n       </div>\n+      <% if (imageCaption) { %>\n       <div class="form-group text">\n         <label><%- captionText %></label>\n         <textarea name="caption" />\n       </div>\n+      <% } %>\n       <div class="form-group align">\n         <label><%- imageAlignText %></label>\n         <select name="align">\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/a96698ee0f5fefa7f33c67e995ca256870a75cbc

add generic class image-richtext for accessing richttext-added images.

Files changed:
M mockup/patterns/tinymce/js/links.js

b"diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex e2027cb3a..43e1e0765 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -595,7 +595,7 @@ define([\n         src: src,\n         title: title ? title : null,\n         alt: self.$alt.val(),\n-        'class': self.$align.val(),\n+        'class': self.$align.val() + ' image-richtext',\n         'data-linkType': self.linkType,\n         'data-scale': self.$scale.val()\n       }, self.linkTypes[self.linkType].attributes());\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/8254e106f03b765b7520cc6d96e813e1cef66451

Add original image src for internal images or src for external images. Can be used to open the image in a modal in a different resolution than the one which is linked.

Files changed:
M mockup/patterns/tinymce/js/links.js

b"diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 43e1e0765..8e53976c2 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -173,6 +173,9 @@ define([\n   var ImageLink = InternalLink.extend({\n     name: 'imagelinktype',\n     trigger: '.pat-imagelinktype-dummy',\n+    originalSrc: function() {\n+      return this.tinypattern.generateImageUrl(this.value());\n+    },\n     toUrl: function() {\n       var value = this.value();\n       return this.tinypattern.generateImageUrl(value, this.linkModal.$scale.val());\n@@ -597,7 +600,8 @@ define([\n         alt: self.$alt.val(),\n         'class': self.$align.val() + ' image-richtext',\n         'data-linkType': self.linkType,\n-        'data-scale': self.$scale.val()\n+        'data-scale': self.$scale.val(),\n+        'data-src': this.linkTypes[this.linkType].originalSrc ? this.linkTypes[this.linkType].originalSrc() : src,\n       }, self.linkTypes[self.linkType].attributes());\n       if (self.imgElm && !self.imgElm.getAttribute('data-mce-object')) {\n         data.width = self.dom.getAttrib(self.imgElm, 'width');\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/7d3d57a71092eee9f8907f291306bca8f10f05fe

We most probably do not need the data-src attribute. A pattern can scan for all image-richttext images and split on the @@images view and get the original scale. Done.

Files changed:
A news/911.feature
M mockup/patterns/tinymce/js/links.js

b"diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 8e53976c2..f366f057b 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -173,9 +173,6 @@ define([\n   var ImageLink = InternalLink.extend({\n     name: 'imagelinktype',\n     trigger: '.pat-imagelinktype-dummy',\n-    originalSrc: function() {\n-      return this.tinypattern.generateImageUrl(this.value());\n-    },\n     toUrl: function() {\n       var value = this.value();\n       return this.tinypattern.generateImageUrl(value, this.linkModal.$scale.val());\n@@ -601,7 +598,6 @@ define([\n         'class': self.$align.val() + ' image-richtext',\n         'data-linkType': self.linkType,\n         'data-scale': self.$scale.val(),\n-        'data-src': this.linkTypes[this.linkType].originalSrc ? this.linkTypes[this.linkType].originalSrc() : src,\n       }, self.linkTypes[self.linkType].attributes());\n       if (self.imgElm && !self.imgElm.getAttribute('data-mce-object')) {\n         data.width = self.dom.getAttrib(self.imgElm, 'width');\ndiff --git a/news/911.feature b/news/911.feature\nnew file mode 100644\nindex 000000000..eceec5df9\n--- /dev/null\n+++ b/news/911.feature\n@@ -0,0 +1,3 @@\n+Allow ``figcaption`` in rich text editor as a valid tag.\n+Allows for adding image captions.\n+[thet]\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/ebbf32625f2ff4be01fd3d98dc64aa3e6d9abbbf

Add tests for figcaption support.

Files changed:
M mockup/tests/pattern-tinymce-test.js

b'diff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js\nindex 4eacb73b8..134dcc2e7 100644\n--- a/mockup/tests/pattern-tinymce-test.js\n+++ b/mockup/tests/pattern-tinymce-test.js\n@@ -336,6 +336,47 @@ define([\n       pattern.imageModal.$scale.find(\'[value="customscale"]\')[0].selected = true;\n       expect(pattern.imageModal.getLinkUrl()).to.equal(\'resolveuid/foobar/@@images/image/customscale\');\n     });\n+    it(\'test add image with and without caption\', function() {\n+      var pattern = createTinymce({\n+        prependToUrl: \'resolveuid/\',\n+        linkAttribute: \'UID\',\n+        prependToScalePart: \'/@@images/image/\'\n+      });\n+\n+      // Add an image caption.\n+      pattern.addImageClicked();\n+      pattern.imageModal.linkTypes.image.getEl().select2(\'data\', {\n+        UID: \'foobar\',\n+        portal_type: \'Document\',\n+        Title: \'Foobar\',\n+        path: \'/foobar\'\n+      });\n+      pattern.imageModal.$caption.val(\'hello.\');\n+      pattern.imageModal.$button.click();\n+      var content = pattern.tiny.getContent();\n+\n+      expect(content).to.contain(\'<figure><img\');\n+      expect(content).to.contain(\'<figcaption>hello.</figcaption>\');\n+      expect(content).to.contain(\'image-richtext\');// new image-richtext class.\n+\n+      // Remove the image caption. The <img> isn\'t wrapped then in a <figure> tag.\n+      pattern.addImageClicked();\n+      pattern.imageModal.linkTypes.image.getEl().select2(\'data\', {\n+        UID: \'foobar\',\n+        portal_type: \'Document\',\n+        Title: \'Foobar\',\n+        path: \'/foobar\'\n+      });\n+      pattern.imageModal.$caption.val(\'\');\n+      pattern.imageModal.$button.click();\n+      content = pattern.tiny.getContent();\n+\n+      expect(content).to.not.contain(\'<figure>\');\n+      expect(content).to.not.contain(\'<figcaption>\');\n+      expect(content).to.contain(\'<img\');\n+      expect(content).to.contain(\'image-richtext\'); // new image-richtext class.\n+\n+    });\n \n     it(\'test adds data attributes\', function() {\n       var pattern = createTinymce();\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/c2b10ae15341910dcb677ab33530242bbc632b8b

update news file

Files changed:
M news/911.feature

b'diff --git a/news/911.feature b/news/911.feature\nindex eceec5df9..8f215ef43 100644\n--- a/news/911.feature\n+++ b/news/911.feature\n@@ -1,3 +1,4 @@\n-Allow ``figcaption`` in rich text editor as a valid tag.\n-Allows for adding image captions.\n+TinyMCE: Add support for image captions.\n+If an image caption is given, the ``<img>`` tag is wrapped within a ``<figure>`` tag and a ``<figcaption>`` tag is added.\n+The image has an additional class ``image-richtext`` for further reuse.\n [thet]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/d17b45435aaa2a1cb328eb3dd6b54f65990cd103

Element.closest support is not widely available. Use $(element).closest instead.

Files changed:
M mockup/patterns/tinymce/js/links.js

b"diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex f366f057b..3db756ee2 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -756,10 +756,8 @@ define([\n         self.data.title = value;\n       }\n \n-      self.selection = self.tiny.selection;\n       self.tiny.focus();\n-      var selectedElm = self.selection.getNode();\n-      self.anchorElm = self.dom.getParent(selectedElm, 'a[href]');\n+      self.anchorElm = self.dom.getParent(self.selectedElm, 'a[href]');\n \n       var linkType\n       if (self.isImageMode()) {\n@@ -767,18 +765,20 @@ define([\n         var figure;\n         var img;\n         var caption;\n-        if (selectedElm.nodeName === 'FIGURE') {\n-          figure = selectedElm;\n+        if (self.selectedElm.nodeName === 'FIGURE') {\n+          figure = self.selectedElm;\n           img = figure.querySelector('img');\n           caption = figure.querySelector('figcaption');\n-        } else if (selectedElm.nodeName === 'IMG') {\n-          figure = selectedElm.closest('figure');\n-          img = selectedElm;\n-          caption = figure.querySelector('figcaption');\n-        } else if (selectedElm.nodeName === 'FIGCAPTION') {\n-          figure = selectedElm.closest('figure');\n-          img = figure.querySelector('img');\n-          caption = selectedElm;\n+        } else if (self.selectedElm.nodeName === 'IMG') {\n+          figure = $(self.selectedElm).closest('figure');\n+          figure = figure.length ? figure[0] : undefined;\n+          img = self.selectedElm;\n+          caption = figure ? figure.querySelector('figcaption') : undefined;\n+        } else if (self.selectedElm.nodeName === 'FIGCAPTION') {\n+          figure = $(self.selectedElm).closest('figure');\n+          figure = figure.length ? figure[0] : undefined;\n+          img = figure ? figure.querySelector('img') : undefined;\n+          caption = self.selectedElm;\n         }\n \n         if (this.options.imageCaption) {\n"

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/2e04172f272171e46eaa7bd9f9d89f0450b7055d

remove the imagecaption option. just show image captions

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/tinymce/templates/image.xml

b'diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex 3db756ee2..c3e4a4a23 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -484,7 +484,6 @@ define([\n         altText: this.options.text.alt,\n         imageAlignText: this.options.text.imageAlign,\n         captionText: this.options.text.caption,\n-        imageCaption: this.options.imageCaption,\n         scaleText: this.options.text.scale,\n         imageScales: this.options.imageScales,\n         cancelBtn: this.options.text.cancelBtn,\n@@ -504,9 +503,7 @@ define([\n       self.$subject = $(\'input[name="subject"]\', self.modal.$modal);\n \n       self.$alt = $(\'input[name="alt"]\', self.modal.$modal);\n-      if (this.options.imageCaption) {\n-        self.$caption = $(\'textarea[name="caption"]\', self.modal.$modal);\n-      }\n+      self.$caption = $(\'textarea[name="caption"]\', self.modal.$modal);\n       self.$align = $(\'select[name="align"]\', self.modal.$modal);\n       self.$scale = $(\'select[name="scale"]\', self.modal.$modal);\n \n@@ -616,16 +613,16 @@ define([\n       if (self.imgElm) {\n         self.dom.remove(self.imgElm);\n       }\n-      if (this.options.imageCaption && self.captionElm) {\n+      if (self.captionElm) {\n         self.dom.remove(self.captionElm);\n       }\n-      if (this.options.imageCaption && self.figureElm) {\n+      if (self.figureElm) {\n         self.dom.remove(self.figureElm);\n       }\n \n       data.id = \'__mcenew\';\n       var html_inner = self.dom.createHTML(\'img\', data);\n-      var caption = this.options.imageCaption ? self.$caption.val() : false;\n+      var caption = self.$caption.val();\n       var html_string;\n       if (caption) {\n         html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', {}, caption);\n@@ -781,11 +778,9 @@ define([\n           caption = self.selectedElm;\n         }\n \n-        if (this.options.imageCaption) {\n-          self.captionElm = caption;\n-          if (self.captionElm) {\n-            self.$caption.val(self.captionElm.innerHTML);\n-          }\n+        self.captionElm = caption;\n+        if (self.captionElm) {\n+          self.$caption.val(self.captionElm.innerHTML);\n         }\n \n         self.imgElm = img;\ndiff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js\nindex b4ce73e68..846280003 100644\n--- a/mockup/patterns/tinymce/pattern.js\n+++ b/mockup/patterns/tinymce/pattern.js\n@@ -16,7 +16,6 @@\n  *    appendToScalePart(string): Text to append to generated image scale url part. (\'\')\n  *    linkAttribute(string): Ajax response data attribute to use for url. (\'path\')\n  *    defaultScale(string): Scale name to default to. (\'Original\')\n- *    imageCaption(boolean): Activate image caption support in image modal overlays\n  *    inline(boolean): Show tinyMCE editor inline instead in an iframe. Use this on textarea inputs. If you want to use this pattern directly on a contenteditable, pass "inline: true" to the "tiny" options object. (false)\n  *\n  * Documentation:\n@@ -200,7 +199,6 @@ define([\n         //\'autoresize_max_height\': 900,\n         \'height\': 400\n       },\n-      imageCaption: true,\n       inline: false\n     },\n     addLinkClicked: function() {\ndiff --git a/mockup/patterns/tinymce/templates/image.xml b/mockup/patterns/tinymce/templates/image.xml\nindex 6f4ef2a83..747e7343a 100644\n--- a/mockup/patterns/tinymce/templates/image.xml\n+++ b/mockup/patterns/tinymce/templates/image.xml\n@@ -60,12 +60,10 @@\n         <label><%- altText %></label>\n         <input type="text" name="alt" />\n       </div>\n-      <% if (imageCaption) { %>\n       <div class="form-group text">\n         <label><%- captionText %></label>\n         <textarea name="caption" />\n       </div>\n-      <% } %>\n       <div class="form-group align">\n         <label><%- imageAlignText %></label>\n         <select name="align">\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-02-17T15:03:18+01:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/mockup/commit/3e64876363286d9f1dd8d7a97a18ed013479bbe3

Integrate caption from description support from https://github.com/plone/mockup/commit/d3d11d08010a2ef5460ce63ae5b90ddf199e7f59

Files changed:
M mockup/patterns/tinymce/js/links.js
M mockup/patterns/tinymce/pattern.js
M mockup/patterns/tinymce/templates/image.xml
M mockup/tests/pattern-tinymce-test.js

b'diff --git a/mockup/patterns/tinymce/js/links.js b/mockup/patterns/tinymce/js/links.js\nindex c3e4a4a23..5a4d2ec69 100644\n--- a/mockup/patterns/tinymce/js/links.js\n+++ b/mockup/patterns/tinymce/js/links.js\n@@ -483,6 +483,7 @@ define([\n         externalImageText: this.options.text.externalImageText,\n         altText: this.options.text.alt,\n         imageAlignText: this.options.text.imageAlign,\n+        captionFromDescriptionText: this.options.text.captionFromDescription,\n         captionText: this.options.text.caption,\n         scaleText: this.options.text.scale,\n         imageScales: this.options.imageScales,\n@@ -503,9 +504,10 @@ define([\n       self.$subject = $(\'input[name="subject"]\', self.modal.$modal);\n \n       self.$alt = $(\'input[name="alt"]\', self.modal.$modal);\n-      self.$caption = $(\'textarea[name="caption"]\', self.modal.$modal);\n       self.$align = $(\'select[name="align"]\', self.modal.$modal);\n       self.$scale = $(\'select[name="scale"]\', self.modal.$modal);\n+      self.$captionFromDescription = $(\'input[name="captionFromDescription"]\', self.modal.$modal);\n+      self.$caption = $(\'textarea[name="caption"]\', self.modal.$modal);\n \n       /* load up all the link types */\n       _.each(self.options.linkTypes, function(type) {\n@@ -525,6 +527,15 @@ define([\n           }\n         });\n       });\n+\n+      self.$captionFromDescription.change(function () {\n+        if (this.checked) {\n+          self.$caption.prop(\'disabled\', true);\n+        } else {\n+          self.$caption.prop(\'disabled\', false);\n+        }\n+      });\n+\n     },\n \n     getLinkUrl: function() {\n@@ -584,15 +595,21 @@ define([\n     updateImage: function(src) {\n       var self = this;\n       var title = self.$title.val();\n+      var captionFromDescription = self.$captionFromDescription.prop(\'checked\')\n \n       self.tiny.focus();\n       self.tiny.selection.setRng(self.rng);\n \n+      var cssclasses = [\'image-richtext\', self.$align.val()];\n+      if (captionFromDescription) {\n+        cssclasses.push(\'captioned\');\n+      }\n+\n       var data = $.extend(true, {}, {\n         src: src,\n         title: title ? title : null,\n         alt: self.$alt.val(),\n-        \'class\': self.$align.val() + \' image-richtext\',\n+        \'class\': cssclasses.join(\' \'),\n         \'data-linkType\': self.linkType,\n         \'data-scale\': self.$scale.val(),\n       }, self.linkTypes[self.linkType].attributes());\n@@ -624,7 +641,7 @@ define([\n       var html_inner = self.dom.createHTML(\'img\', data);\n       var caption = self.$caption.val();\n       var html_string;\n-      if (caption) {\n+      if (caption && ! captionFromDescription) {\n         html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', {}, caption);\n         //html_inner += \'\\n\' + self.dom.createHTML(\'figcaption\', { class: \'mceNonEditable\' }, caption);\n         html_string = self.dom.createHTML(\'figure\', {}, html_inner);\n@@ -778,18 +795,23 @@ define([\n           caption = self.selectedElm;\n         }\n \n-        self.captionElm = caption;\n-        if (self.captionElm) {\n-          self.$caption.val(self.captionElm.innerHTML);\n-        }\n-\n         self.imgElm = img;\n         self.figureElm = figure;\n+        self.captionElm = caption;\n \n         if (self.imgElm) {\n           var src = self.dom.getAttrib(self.imgElm, \'src\');\n           self.$title.val(self.dom.getAttrib(self.imgElm, \'title\'));\n           self.$alt.val(self.dom.getAttrib(self.imgElm, \'alt\'));\n+\n+          if ($(self.imgElm).hasClass(\'captioned\')) {\n+            self.$captionFromDescription.prop(\'checked\', true);\n+            self.$caption.prop(\'disabled\', true);\n+          }\n+          if (self.captionElm) {\n+            self.$caption.val(self.captionElm.innerHTML);\n+          }\n+\n           linkType = self.dom.getAttrib(self.imgElm, \'data-linktype\');\n           if (linkType) {\n             self.linkType = linkType;\ndiff --git a/mockup/patterns/tinymce/pattern.js b/mockup/patterns/tinymce/pattern.js\nindex 846280003..b8aa43c77 100644\n--- a/mockup/patterns/tinymce/pattern.js\n+++ b/mockup/patterns/tinymce/pattern.js\n@@ -3,7 +3,7 @@\n  * Options:\n  *    relatedItems(object): Related items pattern options. ({ attributes: ["UID", "Title", "Description", "getURL", "portal_type", "path", "ModificationDate"], batchSize: 20, basePath: "/", vocabularyUrl: null, width: 500, maximumSelectionSize: 1, placeholder: "Search for item on site..." })\n  *    upload(object): Upload pattern options. ({ attributes: look at upload pattern for getting the options list })\n- *    text(object): Translation strings ({ insertBtn: "Insert", cancelBtn: "Cancel", insertHeading: "Insert link", title: "Title", internal: "Internal", external: "External", email: "Email", anchor: "Anchor", subject: "Subject" image: "Image", imageAlign: "Align", scale: "Size", alt: "Alternative Text", caption: "Image Caption", externalImage: "External Image URI"})\n+ *    text(object): Translation strings ({ insertBtn: "Insert", cancelBtn: "Cancel", insertHeading: "Insert link", title: "Title", internal: "Internal", external: "External", email: "Email", anchor: "Anchor", subject: "Subject" image: "Image", imageAlign: "Align", scale: "Size", alt: "Alternative Text", captionFromDescription: "Show Image Caption from Image Description", caption: "Image Caption", externalImage: "External Image URI"})\n  *    imageScales(string): Image scale name/value object-array or JSON string for use in the image dialog.\n  *    targetList(array): TODO ([ {text: "Open in this window / frame", value: ""}, {text: "Open in new window", value: "_blank"}, {text: "Open in parent window / frame", value: "_parent"}, {text: "Open in top frame (replaces all frames)", value: "_top"}])\n  *    imageTypes(string): TODO (\'Image\')\n@@ -151,6 +151,7 @@ define([\n         externalImageText: _t(\'External Image URL (can be relative within this site or absolute if it starts with http:// or https://)\'),\n         upload: _t(\'Upload\'),\n         insertLinkHelp: _t(\'Specify the object to link to. It can be on this site already (Internal), an object you upload (Upload), from an external site (External), an email address (Email), or an anchor on this page (Anchor).\'),\n+        captionFromDescription: _t(\'Show Image Caption from Image Description\'),\n         caption: _t(\'Image Caption\'),\n       },\n       // URL generation options\ndiff --git a/mockup/patterns/tinymce/templates/image.xml b/mockup/patterns/tinymce/templates/image.xml\nindex 747e7343a..882cc147d 100644\n--- a/mockup/patterns/tinymce/templates/image.xml\n+++ b/mockup/patterns/tinymce/templates/image.xml\n@@ -60,7 +60,13 @@\n         <label><%- altText %></label>\n         <input type="text" name="alt" />\n       </div>\n-      <div class="form-group text">\n+      <div class="form-group captionFromDescription">\n+        <label>\n+          <input type="checkbox" name="captionFromDescription" />\n+          <%- captionFromDescriptionText %>\n+        </label>\n+      </div>\n+      <div class="form-group caption">\n         <label><%- captionText %></label>\n         <textarea name="caption" />\n       </div>\ndiff --git a/mockup/tests/pattern-tinymce-test.js b/mockup/tests/pattern-tinymce-test.js\nindex 134dcc2e7..69556783e 100644\n--- a/mockup/tests/pattern-tinymce-test.js\n+++ b/mockup/tests/pattern-tinymce-test.js\n@@ -376,6 +376,23 @@ define([\n       expect(content).to.contain(\'<img\');\n       expect(content).to.contain(\'image-richtext\'); // new image-richtext class.\n \n+      // Use image captions from the image description.\n+      pattern.addImageClicked();\n+      pattern.imageModal.linkTypes.image.getEl().select2(\'data\', {\n+        UID: \'foobar\',\n+        portal_type: \'Document\',\n+        Title: \'Foobar\',\n+        path: \'/foobar\'\n+      });\n+      pattern.imageModal.$captionFromDescription.prop(\'checked\', true);\n+      pattern.imageModal.$button.click();\n+      content = pattern.tiny.getContent();\n+\n+      expect(content).to.not.contain(\'<figure>\');\n+      expect(content).to.not.contain(\'<figcaption>\');\n+      expect(content).to.contain(\'<img\');\n+      expect(content).to.contain(\'image-richtext\'); // new image-richtext class.\n+      expect(content).to.contain(\'captioned\'); // new image-richtext class.\n     });\n \n     it(\'test adds data attributes\', function() {\n'

