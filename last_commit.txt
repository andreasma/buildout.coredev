Repository: plone.app.registry


Branch: refs/heads/master
Date: 2019-03-02T15:09:51+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/94379ab861f3586982808cc772d70660f01d0216

fix registry-export with Generic Setup

Files changed:
M plone/app/registry/exportimport/handler.py

b"diff --git a/plone/app/registry/exportimport/handler.py b/plone/app/registry/exportimport/handler.py\nindex 9c47bdc..f34cf5e 100644\n--- a/plone/app/registry/exportimport/handler.py\n+++ b/plone/app/registry/exportimport/handler.py\n@@ -14,14 +14,14 @@\n from plone.supermodel.utils import ns\n from plone.supermodel.utils import prettyXML\n from plone.supermodel.utils import valueToElement\n+from Products.CMFPlone.utils import safe_encode\n+from Products.CMFPlone.utils import safe_unicode\n from zope.component import queryUtility\n from zope.configuration import config\n from zope.configuration import xmlconfig\n from zope.dottedname.resolve import resolve\n from zope.schema import getFieldNames\n \n-import six\n-\n \n _marker = object()\n \n@@ -91,7 +91,7 @@ def exportRegistry(context):\n     exporter = RegistryExporter(registry, context)\n     body = exporter.exportDocument()\n     if body is not None:\n-        context.writeDataFile('registry.xml', body, 'text/xml')\n+        context.writeDataFile('registry.xml', safe_encode(body), 'text/xml')\n \n \n class RegistryImporter(object):\n@@ -370,7 +370,7 @@ def importRecords(self, node):\n                 continue\n             elif child.tag.lower() == 'omit':\n                 if child.text:\n-                    omit.append(six.text_type(child.text))\n+                    omit.append(safe_unicode(child.text))\n             elif child.tag.lower() == 'value':\n                 values.append(child)\n \n"

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2019-03-02T15:12:23+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/72961aca9beb0b3473700332532e6d1939406137

add changelog

Files changed:
A news/34.bugfix

b'diff --git a/news/34.bugfix b/news/34.bugfix\nnew file mode 100644\nindex 0000000..1d6810e\n--- /dev/null\n+++ b/news/34.bugfix\n@@ -0,0 +1,2 @@\n+Fix export of registry with Generic Setup.\n+[pbauer]\n\\ No newline at end of file\n'

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2019-03-02T15:22:00+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/69f2dbad62ea5245de7a7898686e6778a25f7c8b

fix export by interface or prefix

Files changed:
M plone/app/registry/browser/exportxml.py

b"diff --git a/plone/app/registry/browser/exportxml.py b/plone/app/registry/browser/exportxml.py\nindex 4fccfd4..60e9cdd 100644\n--- a/plone/app/registry/browser/exportxml.py\n+++ b/plone/app/registry/browser/exportxml.py\n@@ -6,6 +6,7 @@\n from zope.component import getUtility\n \n import os\n+import six\n \n _current_dir = os.path.dirname(__file__)\n \n@@ -95,7 +96,7 @@ def export(self, sinterface=None, sname=None):\n                     xmlel.text = element\n             elif isinstance(record.value, bool):\n                 xmlvalue.text = 'True' if record.value else 'False'\n-            elif isinstance(record.value, basestring):\n+            elif isinstance(record.value, six.string_types):\n                 xmlvalue.text = record.value\n             else:\n                 xmlvalue.text = str(record.value)\n"

Repository: plone.app.registry


Branch: refs/heads/master
Date: 2019-03-02T16:50:22+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.registry/commit/7ca417ff63837febed30c259df705baf5edfb334

Merge pull request #35 from plone/gix_gs_export

Fix Generic Setup Export

Files changed:
A news/34.bugfix
M plone/app/registry/browser/exportxml.py
M plone/app/registry/exportimport/handler.py

b"diff --git a/news/34.bugfix b/news/34.bugfix\nnew file mode 100644\nindex 0000000..1d6810e\n--- /dev/null\n+++ b/news/34.bugfix\n@@ -0,0 +1,2 @@\n+Fix export of registry with Generic Setup.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/registry/browser/exportxml.py b/plone/app/registry/browser/exportxml.py\nindex 4fccfd4..60e9cdd 100644\n--- a/plone/app/registry/browser/exportxml.py\n+++ b/plone/app/registry/browser/exportxml.py\n@@ -6,6 +6,7 @@\n from zope.component import getUtility\n \n import os\n+import six\n \n _current_dir = os.path.dirname(__file__)\n \n@@ -95,7 +96,7 @@ def export(self, sinterface=None, sname=None):\n                     xmlel.text = element\n             elif isinstance(record.value, bool):\n                 xmlvalue.text = 'True' if record.value else 'False'\n-            elif isinstance(record.value, basestring):\n+            elif isinstance(record.value, six.string_types):\n                 xmlvalue.text = record.value\n             else:\n                 xmlvalue.text = str(record.value)\ndiff --git a/plone/app/registry/exportimport/handler.py b/plone/app/registry/exportimport/handler.py\nindex 9c47bdc..f34cf5e 100644\n--- a/plone/app/registry/exportimport/handler.py\n+++ b/plone/app/registry/exportimport/handler.py\n@@ -14,14 +14,14 @@\n from plone.supermodel.utils import ns\n from plone.supermodel.utils import prettyXML\n from plone.supermodel.utils import valueToElement\n+from Products.CMFPlone.utils import safe_encode\n+from Products.CMFPlone.utils import safe_unicode\n from zope.component import queryUtility\n from zope.configuration import config\n from zope.configuration import xmlconfig\n from zope.dottedname.resolve import resolve\n from zope.schema import getFieldNames\n \n-import six\n-\n \n _marker = object()\n \n@@ -91,7 +91,7 @@ def exportRegistry(context):\n     exporter = RegistryExporter(registry, context)\n     body = exporter.exportDocument()\n     if body is not None:\n-        context.writeDataFile('registry.xml', body, 'text/xml')\n+        context.writeDataFile('registry.xml', safe_encode(body), 'text/xml')\n \n \n class RegistryImporter(object):\n@@ -370,7 +370,7 @@ def importRecords(self, node):\n                 continue\n             elif child.tag.lower() == 'omit':\n                 if child.text:\n-                    omit.append(six.text_type(child.text))\n+                    omit.append(safe_unicode(child.text))\n             elif child.tag.lower() == 'value':\n                 values.append(child)\n \n"

