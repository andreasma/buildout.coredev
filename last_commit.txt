Repository: plone.schema


Branch: refs/heads/master
Date: 2018-06-24T12:07:26+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.schema/commit/42e307c1a718fd0132a5f9261817c83983e6cee4

Improve and complete Plone integration of the JSONField (z3c.form, plone.supermodel, plone.schemaeditor)

Files changed:
A plone/schema/browser/jsonfield.py
M plone/schema/browser/configure.zcml
M plone/schema/configure.zcml
M plone/schema/editor.py
M plone/schema/handler.py
M plone/schema/jsonfield.py

b'diff --git a/plone/schema/browser/configure.zcml b/plone/schema/browser/configure.zcml\nindex e0eb35e..8f3f15e 100644\n--- a/plone/schema/browser/configure.zcml\n+++ b/plone/schema/browser/configure.zcml\n@@ -9,6 +9,7 @@\n \n     <adapter factory=".uri.URIFieldWidget" />\n     <adapter factory=".email.EmailFieldWidget" />\n+    <adapter factory=".jsonfield.JSONFieldWidget" />\n \n     <z3c:widgetTemplate\n       mode="display"\n@@ -24,4 +25,6 @@\n       template="templates/email_display.pt"\n       />\n \n+    <adapter factory=".jsonfield.JSONDataConverter" />\n+\n </configure>\ndiff --git a/plone/schema/browser/jsonfield.py b/plone/schema/browser/jsonfield.py\nnew file mode 100644\nindex 0000000..8990afc\n--- /dev/null\n+++ b/plone/schema/browser/jsonfield.py\n@@ -0,0 +1,54 @@\n+from zope.component import adapter\n+from zope.interface import implementer\n+from z3c.form.interfaces import ITextAreaWidget\n+from z3c.form.interfaces import IFieldWidget\n+from z3c.form.browser.textarea import TextAreaWidget\n+from z3c.form.widget import FieldWidget\n+from z3c.form.interfaces import IDataConverter\n+from z3c.form.interfaces import IWidget\n+from plone.app.z3cform.interfaces import IPloneFormLayer\n+from zope.component import adapts\n+from plone.schema.jsonfield import IJSONField\n+\n+import json\n+\n+\n+class IJSONFieldWidget(ITextAreaWidget):\n+    """ JSON Widget """\n+\n+\n+@implementer(IJSONFieldWidget)\n+class JSONWidget(TextAreaWidget):\n+    klass = u\'json-widget\'\n+    value = None\n+\n+\n+@adapter(IJSONField, IPloneFormLayer)\n+@implementer(IFieldWidget)\n+def JSONFieldWidget(field, request):\n+    return FieldWidget(field, JSONWidget(request))\n+\n+\n+@implementer(IDataConverter)\n+class JSONDataConverter(object):\n+    """A JSON data converter."""\n+\n+    adapts(IJSONField, IWidget)\n+\n+    def __init__(self, field, widget):\n+        self.field = field\n+        self.widget = widget\n+\n+    def toWidgetValue(self, value):\n+        """See interfaces.IDataConverter"""\n+        if value is self.field.missing_value:\n+            return u\'\'\n+        return json.dumps(value)\n+\n+    def toFieldValue(self, value):\n+        """See interfaces.IDataConverter"""\n+\n+        if value == u\'\':\n+            return self.field.missing_value\n+\n+        return self.field.fromUnicode(value)\ndiff --git a/plone/schema/configure.zcml b/plone/schema/configure.zcml\nindex 38e21d2..3fc87cd 100644\n--- a/plone/schema/configure.zcml\n+++ b/plone/schema/configure.zcml\n@@ -19,6 +19,12 @@\n           component=".handler.EmailHandler"\n           name="plone.schema.email.Email"\n           />\n+\n+      <utility\n+          component=".handler.JSONHandler"\n+          name="plone.schema.jsonfield.JSONField"\n+          />\n+\n     </configure>\n \n     <!-- Configure plone.schemaeditor field factory if installed -->\n@@ -31,6 +37,10 @@\n         <implements interface=".editor.IEmail" />\n       </class>\n \n+      <class class="plone.schema.jsonfield.JSONField">\n+        <implements interface=".editor.IJSON" />\n+      </class>\n+\n       <utility\n           name="zope.schema._field.URI"\n           component=".editor.URIFactory"\n@@ -40,6 +50,12 @@\n           name="plone.schema.email.Email"\n           component=".editor.EmailFactory"\n           />\n+\n+      <utility\n+          name="plone.schema.jsonfield.JSONField"\n+          component=".editor.JSONFactory"\n+          />\n+\n     </configure>\n \n </configure>\ndiff --git a/plone/schema/editor.py b/plone/schema/editor.py\nindex f0a5be5..1df264f 100644\n--- a/plone/schema/editor.py\n+++ b/plone/schema/editor.py\n@@ -4,6 +4,8 @@\n from zope.interface import Attribute\n from zope.schema import URI\n from zope.schema.interfaces import IURI\n+from plone.schema.jsonfield import IJSONField\n+from plone.schema.jsonfield import JSONField\n \n \n class IURI(IURI):\n@@ -18,5 +20,11 @@ class IEmail(IEmail):\n     default = Attribute(\'\')\n \n \n+class IJSON(IJSONField):\n+    # prevent some settings from being included in the field edit form\n+    default = Attribute(\'\')\n+\n+\n URIFactory = FieldFactory(URI, _(u\'URL\'))\n EmailFactory = FieldFactory(Email, _(u\'Email\'))\n+JSONFactory = FieldFactory(JSONField, _(u\'JSONField\'))\ndiff --git a/plone/schema/handler.py b/plone/schema/handler.py\nindex 21bc85a..e743191 100644\n--- a/plone/schema/handler.py\n+++ b/plone/schema/handler.py\n@@ -1,6 +1,8 @@\n from plone.supermodel.exportimport import BaseHandler\n from zope.schema import URI\n from plone.schema.email import Email\n+from plone.schema.jsonfield import JSONField\n \n URIHandler = BaseHandler(URI)\n EmailHandler = BaseHandler(Email)\n+JSONHandler = BaseHandler(JSONField)\ndiff --git a/plone/schema/jsonfield.py b/plone/schema/jsonfield.py\nindex 008ab66..bd960c7 100644\n--- a/plone/schema/jsonfield.py\n+++ b/plone/schema/jsonfield.py\n@@ -5,6 +5,7 @@\n from zope.schema._bootstrapinterfaces import WrongType\n from zope.schema.interfaces import IField\n from zope.schema.interfaces import WrongContainedType\n+from zope.schema.interfaces import IFromUnicode\n \n import json\n import jsonschema\n@@ -25,7 +26,7 @@ class IJSONField(IField):\n     )\n \n \n-@implementer(IJSONField)\n+@implementer(IJSONField, IFromUnicode)\n class JSONField(Field):\n \n     def __init__(self, schema=DEFAULT_JSON_SCHEMA, **kw):\n@@ -45,3 +46,8 @@ def _validate(self, value):\n             jsonschema.validate(value, self.json_schema)\n         except jsonschema.ValidationError as e:\n             raise WrongContainedType(e.message, self.__name__)\n+\n+    def fromUnicode(self, value):\n+        v = json.loads(value)\n+        self.validate(v)\n+        return v\n'

Repository: plone.schema


Branch: refs/heads/master
Date: 2018-06-24T12:08:12+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.schema/commit/52cff480b1f84addc2fc21813a87ba3faab39cd9

Add Changelog

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0401794..5b4c93f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -7,7 +7,8 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Improve and complete Plone integration of the JSONField (z3c.form, plone.supermodel, plone.schemaeditor)\n+  [sneridagh]\n \n Bug fixes:\n \n'

Repository: plone.schema


Branch: refs/heads/master
Date: 2018-06-24T16:26:24+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.schema/commit/983b15c6a8714d50b8d0402629d775e180c5c30c

Merge pull request #4 from plone/newjsonschemafield

Improve and complete Plone integration of the JSONField (z3c.form, plone.supermodel, plone.schemaeditor)

Files changed:
A plone/schema/browser/jsonfield.py
M CHANGES.rst
M plone/schema/browser/configure.zcml
M plone/schema/configure.zcml
M plone/schema/editor.py
M plone/schema/handler.py
M plone/schema/jsonfield.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0401794..5b4c93f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -7,7 +7,8 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Improve and complete Plone integration of the JSONField (z3c.form, plone.supermodel, plone.schemaeditor)\n+  [sneridagh]\n \n Bug fixes:\n \ndiff --git a/plone/schema/browser/configure.zcml b/plone/schema/browser/configure.zcml\nindex e0eb35e..8f3f15e 100644\n--- a/plone/schema/browser/configure.zcml\n+++ b/plone/schema/browser/configure.zcml\n@@ -9,6 +9,7 @@\n \n     <adapter factory=".uri.URIFieldWidget" />\n     <adapter factory=".email.EmailFieldWidget" />\n+    <adapter factory=".jsonfield.JSONFieldWidget" />\n \n     <z3c:widgetTemplate\n       mode="display"\n@@ -24,4 +25,6 @@\n       template="templates/email_display.pt"\n       />\n \n+    <adapter factory=".jsonfield.JSONDataConverter" />\n+\n </configure>\ndiff --git a/plone/schema/browser/jsonfield.py b/plone/schema/browser/jsonfield.py\nnew file mode 100644\nindex 0000000..8990afc\n--- /dev/null\n+++ b/plone/schema/browser/jsonfield.py\n@@ -0,0 +1,54 @@\n+from zope.component import adapter\n+from zope.interface import implementer\n+from z3c.form.interfaces import ITextAreaWidget\n+from z3c.form.interfaces import IFieldWidget\n+from z3c.form.browser.textarea import TextAreaWidget\n+from z3c.form.widget import FieldWidget\n+from z3c.form.interfaces import IDataConverter\n+from z3c.form.interfaces import IWidget\n+from plone.app.z3cform.interfaces import IPloneFormLayer\n+from zope.component import adapts\n+from plone.schema.jsonfield import IJSONField\n+\n+import json\n+\n+\n+class IJSONFieldWidget(ITextAreaWidget):\n+    """ JSON Widget """\n+\n+\n+@implementer(IJSONFieldWidget)\n+class JSONWidget(TextAreaWidget):\n+    klass = u\'json-widget\'\n+    value = None\n+\n+\n+@adapter(IJSONField, IPloneFormLayer)\n+@implementer(IFieldWidget)\n+def JSONFieldWidget(field, request):\n+    return FieldWidget(field, JSONWidget(request))\n+\n+\n+@implementer(IDataConverter)\n+class JSONDataConverter(object):\n+    """A JSON data converter."""\n+\n+    adapts(IJSONField, IWidget)\n+\n+    def __init__(self, field, widget):\n+        self.field = field\n+        self.widget = widget\n+\n+    def toWidgetValue(self, value):\n+        """See interfaces.IDataConverter"""\n+        if value is self.field.missing_value:\n+            return u\'\'\n+        return json.dumps(value)\n+\n+    def toFieldValue(self, value):\n+        """See interfaces.IDataConverter"""\n+\n+        if value == u\'\':\n+            return self.field.missing_value\n+\n+        return self.field.fromUnicode(value)\ndiff --git a/plone/schema/configure.zcml b/plone/schema/configure.zcml\nindex 38e21d2..3fc87cd 100644\n--- a/plone/schema/configure.zcml\n+++ b/plone/schema/configure.zcml\n@@ -19,6 +19,12 @@\n           component=".handler.EmailHandler"\n           name="plone.schema.email.Email"\n           />\n+\n+      <utility\n+          component=".handler.JSONHandler"\n+          name="plone.schema.jsonfield.JSONField"\n+          />\n+\n     </configure>\n \n     <!-- Configure plone.schemaeditor field factory if installed -->\n@@ -31,6 +37,10 @@\n         <implements interface=".editor.IEmail" />\n       </class>\n \n+      <class class="plone.schema.jsonfield.JSONField">\n+        <implements interface=".editor.IJSON" />\n+      </class>\n+\n       <utility\n           name="zope.schema._field.URI"\n           component=".editor.URIFactory"\n@@ -40,6 +50,12 @@\n           name="plone.schema.email.Email"\n           component=".editor.EmailFactory"\n           />\n+\n+      <utility\n+          name="plone.schema.jsonfield.JSONField"\n+          component=".editor.JSONFactory"\n+          />\n+\n     </configure>\n \n </configure>\ndiff --git a/plone/schema/editor.py b/plone/schema/editor.py\nindex f0a5be5..1df264f 100644\n--- a/plone/schema/editor.py\n+++ b/plone/schema/editor.py\n@@ -4,6 +4,8 @@\n from zope.interface import Attribute\n from zope.schema import URI\n from zope.schema.interfaces import IURI\n+from plone.schema.jsonfield import IJSONField\n+from plone.schema.jsonfield import JSONField\n \n \n class IURI(IURI):\n@@ -18,5 +20,11 @@ class IEmail(IEmail):\n     default = Attribute(\'\')\n \n \n+class IJSON(IJSONField):\n+    # prevent some settings from being included in the field edit form\n+    default = Attribute(\'\')\n+\n+\n URIFactory = FieldFactory(URI, _(u\'URL\'))\n EmailFactory = FieldFactory(Email, _(u\'Email\'))\n+JSONFactory = FieldFactory(JSONField, _(u\'JSONField\'))\ndiff --git a/plone/schema/handler.py b/plone/schema/handler.py\nindex 21bc85a..e743191 100644\n--- a/plone/schema/handler.py\n+++ b/plone/schema/handler.py\n@@ -1,6 +1,8 @@\n from plone.supermodel.exportimport import BaseHandler\n from zope.schema import URI\n from plone.schema.email import Email\n+from plone.schema.jsonfield import JSONField\n \n URIHandler = BaseHandler(URI)\n EmailHandler = BaseHandler(Email)\n+JSONHandler = BaseHandler(JSONField)\ndiff --git a/plone/schema/jsonfield.py b/plone/schema/jsonfield.py\nindex 008ab66..bd960c7 100644\n--- a/plone/schema/jsonfield.py\n+++ b/plone/schema/jsonfield.py\n@@ -5,6 +5,7 @@\n from zope.schema._bootstrapinterfaces import WrongType\n from zope.schema.interfaces import IField\n from zope.schema.interfaces import WrongContainedType\n+from zope.schema.interfaces import IFromUnicode\n \n import json\n import jsonschema\n@@ -25,7 +26,7 @@ class IJSONField(IField):\n     )\n \n \n-@implementer(IJSONField)\n+@implementer(IJSONField, IFromUnicode)\n class JSONField(Field):\n \n     def __init__(self, schema=DEFAULT_JSON_SCHEMA, **kw):\n@@ -45,3 +46,8 @@ def _validate(self, value):\n             jsonschema.validate(value, self.json_schema)\n         except jsonschema.ValidationError as e:\n             raise WrongContainedType(e.message, self.__name__)\n+\n+    def fromUnicode(self, value):\n+        v = json.loads(value)\n+        self.validate(v)\n+        return v\n'

