Repository: plone.tiles


Branch: refs/heads/master
Date: 2019-04-16T11:37:35+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.tiles/commit/5277113f6b80f66b9e35dac738ec9f1a48e688d3

Fix issue where it was not possibly to POST a query string value for primary field

Files changed:
M plone/tiles/data.py

b'diff --git a/plone/tiles/data.py b/plone/tiles/data.py\nindex 8494f6a..63b773e 100644\n--- a/plone/tiles/data.py\n+++ b/plone/tiles/data.py\n@@ -64,7 +64,8 @@ def get_default_request_data(self):\n             # Try to decode the form data properly if we can\n             try:\n                 data = decode(self.tile.request.form,\n-                              self.tileType.schema, missing=True)\n+                              self.tileType.schema,\n+                              missing=True, primary=True)\n             except (ValueError, UnicodeDecodeError,):\n                 LOGGER.exception(u\'Could not convert form data to schema\')\n                 return self.data.copy()\n@@ -342,7 +343,7 @@ def encode(data, schema, ignore=()):\n \n # Decoding\n \n-def decode(data, schema, missing=True):\n+def decode(data, schema, missing=True, primary=False):\n     """Decode a data dict according to a schema. The returned dictionary will\n     contain only keys matching schema names, and will force type values\n     appropriately.\n@@ -353,12 +354,17 @@ def decode(data, schema, missing=True):\n \n     If missing is True, fields that are in the schema but not in the data will\n     be set to field.missing_value. Otherwise, they are ignored.\n+\n+    If primary is True, also fields that are marged as primary fields are\n+    decoded from the data. (Primary fields are not decoded by default,\n+    because primary field are mainly used for rich text or binary fields \n+    and data is usually parsed from query string with length limitations.)\n     """\n \n     decoded = {}\n \n     for name, field in getFields(schema).items():\n-        if HAS_RFC822 and IPrimaryField.providedBy(field):\n+        if not primary and HAS_RFC822 and IPrimaryField.providedBy(field):\n             continue\n \n         if name not in data:\n'

Repository: plone.tiles


Branch: refs/heads/master
Date: 2019-04-16T11:41:55+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.tiles/commit/0df50c89a868aead8d62865a85ad9344515467c5

Add changelog entry news item

Files changed:
A news/30.bugfix

b'diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..c404066\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+Fixed issue where creating a Mosaic page with shared content layout with filled rich text fields ended up having empty rich text fields, because the rich text field is marked primary (as it should be), and primary fields were never parsed from query string by default.\n'

Repository: plone.tiles


Branch: refs/heads/master
Date: 2019-04-16T11:43:09+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.tiles/commit/f5a1a91f07b31473f7b699c471d6fab682c1fdf9

Remove trailing whitespace

Files changed:
M plone/tiles/data.py

b'diff --git a/plone/tiles/data.py b/plone/tiles/data.py\nindex 63b773e..addc89b 100644\n--- a/plone/tiles/data.py\n+++ b/plone/tiles/data.py\n@@ -357,7 +357,7 @@ def decode(data, schema, missing=True, primary=False):\n \n     If primary is True, also fields that are marged as primary fields are\n     decoded from the data. (Primary fields are not decoded by default,\n-    because primary field are mainly used for rich text or binary fields \n+    because primary field are mainly used for rich text or binary fields\n     and data is usually parsed from query string with length limitations.)\n     """\n \n'

Repository: plone.tiles


Branch: refs/heads/master
Date: 2019-04-18T11:08:46+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.tiles/commit/a82d390f061811ca0245c07bd00eb44b3f14319b

Merge pull request #30 from plone/datakurre/fix-primary-field-from-query

Fix issue where it was not possibly to POST a query string value for a primary field

Files changed:
A news/30.bugfix
M plone/tiles/data.py

b'diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..c404066\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+Fixed issue where creating a Mosaic page with shared content layout with filled rich text fields ended up having empty rich text fields, because the rich text field is marked primary (as it should be), and primary fields were never parsed from query string by default.\ndiff --git a/plone/tiles/data.py b/plone/tiles/data.py\nindex 8494f6a..addc89b 100644\n--- a/plone/tiles/data.py\n+++ b/plone/tiles/data.py\n@@ -64,7 +64,8 @@ def get_default_request_data(self):\n             # Try to decode the form data properly if we can\n             try:\n                 data = decode(self.tile.request.form,\n-                              self.tileType.schema, missing=True)\n+                              self.tileType.schema,\n+                              missing=True, primary=True)\n             except (ValueError, UnicodeDecodeError,):\n                 LOGGER.exception(u\'Could not convert form data to schema\')\n                 return self.data.copy()\n@@ -342,7 +343,7 @@ def encode(data, schema, ignore=()):\n \n # Decoding\n \n-def decode(data, schema, missing=True):\n+def decode(data, schema, missing=True, primary=False):\n     """Decode a data dict according to a schema. The returned dictionary will\n     contain only keys matching schema names, and will force type values\n     appropriately.\n@@ -353,12 +354,17 @@ def decode(data, schema, missing=True):\n \n     If missing is True, fields that are in the schema but not in the data will\n     be set to field.missing_value. Otherwise, they are ignored.\n+\n+    If primary is True, also fields that are marged as primary fields are\n+    decoded from the data. (Primary fields are not decoded by default,\n+    because primary field are mainly used for rich text or binary fields\n+    and data is usually parsed from query string with length limitations.)\n     """\n \n     decoded = {}\n \n     for name, field in getFields(schema).items():\n-        if HAS_RFC822 and IPrimaryField.providedBy(field):\n+        if not primary and HAS_RFC822 and IPrimaryField.providedBy(field):\n             continue\n \n         if name not in data:\n'

