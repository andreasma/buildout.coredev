Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-28T06:19:15+01:00
Author: Robert Kuzma (balavec) <robert@balavec.com>
Commit: https://github.com/plone/plone.namedfile/commit/69ec30a401590cd2f5c0dc79a41c61040d312284

Load SVG files.

Files changed:
A plone/namedfile/utils/svg_utils.py
M .gitignore
M plone/namedfile/scaling.py
M plone/namedfile/utils/__init__.py

b'diff --git a/.gitignore b/.gitignore\nindex 0af21e7..cde2daa 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,6 +1,7 @@\n *.egg-info\n *.pyc\n .project\n+.idea\n .pydevproject\n .installed.cfg\n bin\ndiff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py\nindex 8a41233..d8dd59d 100644\n--- a/plone/namedfile/scaling.py\n+++ b/plone/namedfile/scaling.py\n@@ -56,6 +56,9 @@ def __init__(self, context, request, **info):\n \n         url = self.context.absolute_url()\n         extension = self.data.contentType.split(\'/\')[-1].lower()\n+        if self.data.contentType in ["image/svg", "image/svg+xml"]:\n+            extension = "svg"\n+            self.data.contentType = "image/svg+xml"\n         if \'uid\' in info:\n             name = info[\'uid\']\n         else:\n@@ -246,6 +249,7 @@ def __call__(\n             raise\n         except IOError:\n             if getattr(orig_value, \'contentType\', \'\') == \'image/svg+xml\':\n+                orig_data.seek(0)\n                 result = orig_data.read(), \'SVG\', (width, height)\n             else:\n                 logger.exception(\ndiff --git a/plone/namedfile/utils/__init__.py b/plone/namedfile/utils/__init__.py\nindex 45fcb3f..cf2d48f 100644\n--- a/plone/namedfile/utils/__init__.py\n+++ b/plone/namedfile/utils/__init__.py\n@@ -3,6 +3,7 @@\n from plone.namedfile.interfaces import IBlobby\n from plone.namedfile.utils.jpeg_utils import process_jpeg\n from plone.namedfile.utils.png_utils import process_png\n+from plone.namedfile.utils.svg_utils import process_svg\n from plone.namedfile.utils.tiff_utils import process_tiff\n from plone.registry.interfaces import IRegistry\n from six import BytesIO\n@@ -141,6 +142,10 @@ def getImageInfo(data):\n         # handle TIFFs\n         content_type, width, height = process_tiff(data)\n \n+    elif size and b\'http://www.w3.org/2000/svg\' in data:\n+        # handle SVGs\n+        content_type, width, height = process_svg(data)\n+\n     else:\n         # Use PIL / Pillow to determ Image Information\n         try:\ndiff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nnew file mode 100644\nindex 0000000..7e8bb4e\n--- /dev/null\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -0,0 +1,38 @@\n+# -*- coding: utf-8 -*-\n+\n+from io import BytesIO\n+from logging import getLogger\n+\n+import xml.etree.cElementTree as et\n+\n+\n+log = getLogger(__name__)\n+\n+\n+def process_svg(data):\n+    content_type = None\n+    w = -1\n+    h = -1\n+    size = len(data)\n+\n+    tag = None\n+    try:\n+        for event, el in et.iterparse(BytesIO(data), ("start",)):\n+            tag = el.tag\n+            _w = el.attrib.get("width")\n+            _h = el.attrib.get("height")\n+            if len(_w) and len(_h):\n+                w = int(float(_w.replace("px", "")))\n+                h = int(float(_h.replace("px", "")))\n+            break\n+    except et.ParseError:\n+        pass\n+\n+    if tag == "{http://www.w3.org/2000/svg}svg" or (\n+        size == 1024 and b"http://www.w3.org/2000/svg" in data\n+    ):\n+        content_type = "image/svg+xml"\n+        w = w if isinstance(w, int) and w > 1 else 1\n+        h = h if isinstance(h, int) and h > 1 else 1\n+\n+    return content_type, w, h\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-28T06:50:03+01:00
Author: Robert Kuzma (balavec) <robert@balavec.com>
Commit: https://github.com/plone/plone.namedfile/commit/bc9a2dc076544fc86bd015d02e5781a07893272b

Create 63.feature

Files changed:
A news/63.feature

b'diff --git a/news/63.feature b/news/63.feature\nnew file mode 100644\nindex 0000000..3f2d614\n--- /dev/null\n+++ b/news/63.feature\n@@ -0,0 +1,2 @@\n+- Load SVG files.\n+  [balavec]\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-28T13:51:37+01:00
Author: Robert Kuzma (balavec) <robert@balavec.com>
Commit: https://github.com/plone/plone.namedfile/commit/01ab18b6ed8aae791c2de05f4fe82cdadb20c4dc

Remove all strings from width and height

Files changed:
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 7e8bb4e..7881529 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -3,6 +3,7 @@\n from io import BytesIO\n from logging import getLogger\n \n+import re\n import xml.etree.cElementTree as et\n \n \n@@ -22,8 +23,8 @@ def process_svg(data):\n             _w = el.attrib.get("width")\n             _h = el.attrib.get("height")\n             if len(_w) and len(_h):\n-                w = int(float(_w.replace("px", "")))\n-                h = int(float(_h.replace("px", "")))\n+                w = int(float(re.sub(r"[^\\d\\.]", "", _w)))\n+                h = int(float(re.sub(r"[^\\d\\.]", "", _h)))\n             break\n     except et.ParseError:\n         pass\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-29T09:33:20+01:00
Author: Robert Kuzma (balavec) <robert@balavec.com>
Commit: https://github.com/plone/plone.namedfile/commit/77d745b4f09fb30981c8ec3b5740f4c6a9457987

Add svg tests

Files changed:
A plone/namedfile/tests/image.svg
A plone/namedfile/tests/test_svg.py
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/tests/image.svg b/plone/namedfile/tests/image.svg\nnew file mode 100644\nindex 0000000..4405bad\n--- /dev/null\n+++ b/plone/namedfile/tests/image.svg\n@@ -0,0 +1,48 @@\n+<?xml version="1.0" encoding="utf-8"?>\r\n+<!-- Generator: Adobe Illustrator 13.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->\r\n+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n+<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\r\n+\t width="158.253px" height="40.686px" viewBox="0 0 158.253 40.686" enable-background="new 0 0 158.253 40.686"\r\n+\t xml:space="preserve">\r\n+<g>\r\n+\t<path fill="#0095D3" d="M65.327,23.208h-6.589v11.388h-4.393V5.638h10.981c5.653,0,9.271,3.742,9.271,8.785\r\n+\t\tS70.979,23.208,65.327,23.208z M65.082,9.583h-6.345v9.639h6.345c3.05,0,5.124-1.749,5.124-4.799\r\n+\t\tC70.206,11.372,68.132,9.583,65.082,9.583z"/>\r\n+\t<path fill="#0095D3" d="M83.969,34.596c-3.904,0-5.652-2.644-5.652-5.693V5.638h4.148v23.021c0,1.587,0.567,2.399,2.235,2.399h1.83\r\n+\t\tv3.538H83.969z"/>\r\n+\t<path fill="#0095D3" d="M104.762,32.399c-1.344,1.384-3.377,2.44-6.184,2.44c-2.805,0-4.799-1.058-6.141-2.44\r\n+\t\tc-1.951-2.032-2.439-4.637-2.439-8.134c0-3.457,0.488-6.061,2.439-8.094c1.342-1.383,3.336-2.44,6.141-2.44\r\n+\t\tc2.807,0,4.84,1.059,6.184,2.44c1.951,2.033,2.439,4.637,2.439,8.094C107.203,27.763,106.713,30.366,104.762,32.399z\r\n+\t\t M101.629,18.613c-0.773-0.773-1.83-1.181-3.051-1.181c-1.219,0-2.236,0.406-3.01,1.181c-1.26,1.261-1.422,3.416-1.422,5.652\r\n+\t\ts0.162,4.393,1.422,5.653c0.773,0.771,1.791,1.22,3.01,1.22c1.221,0,2.277-0.447,3.051-1.22c1.262-1.262,1.424-3.417,1.424-5.653\r\n+\t\tS102.891,19.873,101.629,18.613z"/>\r\n+\t<path fill="#0095D3" d="M123.643,34.596V22.029c0-3.214-1.83-4.597-4.147-4.597s-4.271,1.423-4.271,4.597v12.566h-4.147v-20.62\r\n+\t\th4.065v2.074c1.425-1.546,3.416-2.318,5.49-2.318c2.115,0,3.865,0.691,5.084,1.871c1.586,1.545,2.074,3.497,2.074,5.815v13.178\r\n+\t\tL123.643,34.596L123.643,34.596z"/>\r\n+\t<path fill="#0095D3" d="M135.772,25.486c0,3.537,1.871,5.774,5.246,5.774c2.317,0,3.539-0.649,5.004-2.115l2.643,2.481\r\n+\t\tc-2.115,2.114-4.107,3.213-7.727,3.213c-5.166,0-9.273-2.725-9.273-10.574c0-6.671,3.457-10.534,8.744-10.534\r\n+\t\tc5.531,0,8.744,4.067,8.744,9.925v1.83H135.772z M144.475,19.791c-0.65-1.545-2.113-2.604-4.066-2.604\r\n+\t\tc-1.951,0-3.457,1.059-4.107,2.604c-0.406,0.936-0.488,1.546-0.529,2.807h9.273C145.003,21.337,144.883,20.726,144.475,19.791z"/>\r\n+\t<circle fill="#0095D3" cx="17.815" cy="11.516" r="4.402"/>\r\n+\t<path fill="#0095D3" d="M31.167,20.311c0,2.433-1.969,4.401-4.403,4.401c-2.427,0-4.401-1.97-4.401-4.401\r\n+\t\tc0-2.433,1.975-4.401,4.401-4.401C29.2,15.909,31.167,17.879,31.167,20.311z"/>\r\n+\t<circle fill="#0095D3" cx="17.801" cy="29.131" r="4.402"/>\r\n+\t<g>\r\n+\t\t<path fill="#0095D3" d="M20.441-0.045C9.207-0.044,0.1,9.063,0.099,20.298C0.1,31.532,9.207,40.639,20.441,40.641\r\n+\t\t\tc11.235-0.002,20.341-9.107,20.343-20.343C40.783,9.063,31.677-0.044,20.441-0.045z M31.891,31.747\r\n+\t\t\tc-2.937,2.934-6.972,4.742-11.45,4.743c-4.478-0.001-8.513-1.811-11.45-4.743C6.058,28.81,4.25,24.775,4.249,20.298\r\n+\t\t\tc0.001-4.478,1.809-8.513,4.743-11.45c2.937-2.934,6.972-4.742,11.45-4.743c4.478,0.001,8.513,1.81,11.45,4.743\r\n+\t\t\tc2.934,2.938,4.742,6.973,4.743,11.45C36.633,24.775,34.825,28.81,31.891,31.747z"/>\r\n+\t</g>\r\n+\t<g>\r\n+\t\t<path fill="#0095D3" d="M153.985,9.95c-1.195,0-2.164,0.971-2.164,2.168c0.002,1.197,0.969,2.168,2.164,2.168\r\n+\t\t\tc1.199,0,2.172-0.971,2.172-2.168S155.184,9.95,153.985,9.95z M153.985,13.968c-1.021-0.002-1.846-0.827-1.846-1.85\r\n+\t\t\tc0.002-1.021,0.825-1.849,1.846-1.851c1.023,0.002,1.852,0.828,1.854,1.851C155.836,13.141,155.008,13.966,153.985,13.968z"/>\r\n+\t</g>\r\n+\t<g>\r\n+\t\t<path fill="#0095D3" d="M154.507,13.409l-0.54-1.08h-0.486v1.08h-0.389v-2.564h0.994c0.484,0,0.796,0.313,0.796,0.75\r\n+\t\t\tc0,0.367-0.224,0.602-0.513,0.68l0.592,1.136L154.507,13.409L154.507,13.409z M154.056,11.195h-0.575v0.803h0.575\r\n+\t\t\tc0.261,0,0.437-0.147,0.437-0.399S154.317,11.195,154.056,11.195z"/>\r\n+\t</g>\r\n+</g>\r\n+</svg>\r\ndiff --git a/plone/namedfile/tests/test_svg.py b/plone/namedfile/tests/test_svg.py\nnew file mode 100644\nindex 0000000..7d3f430\n--- /dev/null\n+++ b/plone/namedfile/tests/test_svg.py\n@@ -0,0 +1,42 @@\n+# -*- coding: utf-8 -*-\n+\n+import unittest\n+\n+from plone.namedfile.file import NamedImage\n+from plone.namedfile.tests import getFile\n+from plone.namedfile.utils import get_contenttype\n+from plone.namedfile.utils.svg_utils import dimension_int\n+from plone.namedfile.utils.svg_utils import process_svg\n+\n+\n+class TestSvg(unittest.TestCase):\n+\n+    def test_get_contenttype(self):\n+        self.assertEqual(\n+            get_contenttype(\n+                NamedImage(\n+                    getFile(\'image.svg\'),\n+                    contentType=\'image/svg+xml\')),\n+            \'image/svg+xml\')\n+\n+    def test_process_svg(self):\n+\n+        content_type, width, height = process_svg(getFile(\'image.svg\'))\n+        self.assertEqual(content_type, "image/svg+xml")\n+        self.assertEqual(width, 158)\n+        self.assertEqual(height, 40)\n+\n+    def test_dimension_int(self):\n+\n+        self.assertEqual(dimension_int("auto"), 0)\n+        self.assertEqual(dimension_int("0"), 0)\n+        self.assertEqual(dimension_int("25"), 25)\n+        self.assertEqual(dimension_int("1024px"), 1024)\n+        self.assertEqual(dimension_int("123.0025px"), 123)\n+        self.assertEqual(dimension_int("123.625pt"), 123)\n+        self.assertEqual(dimension_int("50%"), 50)\n+        self.assertEqual(dimension_int(42), 42)\n+        self.assertEqual(dimension_int(6.25), 6)\n+        self.assertEqual(dimension_int({}), 0)\n+        self.assertEqual(dimension_int([]), 0)\n+        self.assertEqual(dimension_int(getFile(\'image.svg\')), 0)\ndiff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 7881529..adca99b 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -1,11 +1,9 @@\n # -*- coding: utf-8 -*-\n \n-from io import BytesIO\n-from logging import getLogger\n-\n import re\n import xml.etree.cElementTree as et\n-\n+from io import BytesIO\n+from logging import getLogger\n \n log = getLogger(__name__)\n \n@@ -20,11 +18,8 @@ def process_svg(data):\n     try:\n         for event, el in et.iterparse(BytesIO(data), ("start",)):\n             tag = el.tag\n-            _w = el.attrib.get("width")\n-            _h = el.attrib.get("height")\n-            if len(_w) and len(_h):\n-                w = int(float(re.sub(r"[^\\d\\.]", "", _w)))\n-                h = int(float(re.sub(r"[^\\d\\.]", "", _h)))\n+            w = dimension_int(el.attrib.get("width"))\n+            h = dimension_int(el.attrib.get("height"))\n             break\n     except et.ParseError:\n         pass\n@@ -33,7 +28,23 @@ def process_svg(data):\n         size == 1024 and b"http://www.w3.org/2000/svg" in data\n     ):\n         content_type = "image/svg+xml"\n-        w = w if isinstance(w, int) and w > 1 else 1\n-        h = h if isinstance(h, int) and h > 1 else 1\n+        w = w if w > 1 else 1\n+        h = h if h > 1 else 1\n \n     return content_type, w, h\n+\n+\n+def dimension_int(dimension) -> int:\n+    if isinstance(dimension, str):\n+        try:\n+            _dimension = int(float(re.sub(r"[^\\d\\.]", "", dimension)))\n+        except ValueError:\n+            _dimension = 0\n+    elif isinstance(dimension, int):\n+        _dimension = dimension\n+    elif isinstance(dimension, float):\n+        _dimension = int(dimension)\n+    else:\n+        _dimension = 0\n+\n+    return _dimension\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-29T09:59:09+01:00
Author: Robert Kuzma (balavec) <robert@balavec.com>
Commit: https://github.com/plone/plone.namedfile/commit/e0924a2950d89a17d4816954177e1f645f31f94b

Update svg_utils.py

Files changed:
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex adca99b..0177bfc 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -34,7 +34,7 @@ def process_svg(data):\n     return content_type, w, h\n \n \n-def dimension_int(dimension) -> int:\n+def dimension_int(dimension):\n     if isinstance(dimension, str):\n         try:\n             _dimension = int(float(re.sub(r"[^\\d\\.]", "", dimension)))\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-29T11:51:42+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.namedfile/commit/c18fb40cfeb25565094b54406537b99b3770860e

bump minor version for new load svg feature.

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex 30e4bda..b1be205 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = '5.1.1.dev0'\n+version = '5.2.0.dev0'\n \n description = 'File types and fields for images, files and blob files with ' \\\n               'filenames'\n"

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-29T13:22:22+01:00
Author: Robert Kuzma (balavec) <robert@balavec.com>
Commit: https://github.com/plone/plone.namedfile/commit/d401ee94eb80dbe588a37b282c24dae342949cb8

Update scaling.py

Files changed:
M plone/namedfile/scaling.py

b'diff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py\nindex d8dd59d..fce3da3 100644\n--- a/plone/namedfile/scaling.py\n+++ b/plone/namedfile/scaling.py\n@@ -56,9 +56,8 @@ def __init__(self, context, request, **info):\n \n         url = self.context.absolute_url()\n         extension = self.data.contentType.split(\'/\')[-1].lower()\n-        if self.data.contentType in ["image/svg", "image/svg+xml"]:\n+        if self.data.contentType == "image/svg+xml":\n             extension = "svg"\n-            self.data.contentType = "image/svg+xml"\n         if \'uid\' in info:\n             name = info[\'uid\']\n         else:\n@@ -250,7 +249,7 @@ def __call__(\n         except IOError:\n             if getattr(orig_value, \'contentType\', \'\') == \'image/svg+xml\':\n                 orig_data.seek(0)\n-                result = orig_data.read(), \'SVG\', (width, height)\n+                result = orig_data.read(), \'svg+xml\', (width, height)\n             else:\n                 logger.exception(\n                     \'Could not scale "{0!r}" of {1!r}\'.format(\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2019-10-29T14:54:31+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.namedfile/commit/a0a8aea69f954be56b39686229b339cd46810962

Merge pull request #83 from plone/load-svg

Load SVG files #63

Files changed:
A news/63.feature
A plone/namedfile/tests/image.svg
A plone/namedfile/tests/test_svg.py
A plone/namedfile/utils/svg_utils.py
M .gitignore
M plone/namedfile/scaling.py
M plone/namedfile/utils/__init__.py
M setup.py

b'diff --git a/.gitignore b/.gitignore\nindex 0af21e7..cde2daa 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,6 +1,7 @@\n *.egg-info\n *.pyc\n .project\n+.idea\n .pydevproject\n .installed.cfg\n bin\ndiff --git a/news/63.feature b/news/63.feature\nnew file mode 100644\nindex 0000000..3f2d614\n--- /dev/null\n+++ b/news/63.feature\n@@ -0,0 +1,2 @@\n+- Load SVG files.\n+  [balavec]\ndiff --git a/plone/namedfile/scaling.py b/plone/namedfile/scaling.py\nindex 8a41233..fce3da3 100644\n--- a/plone/namedfile/scaling.py\n+++ b/plone/namedfile/scaling.py\n@@ -56,6 +56,8 @@ def __init__(self, context, request, **info):\n \n         url = self.context.absolute_url()\n         extension = self.data.contentType.split(\'/\')[-1].lower()\n+        if self.data.contentType == "image/svg+xml":\n+            extension = "svg"\n         if \'uid\' in info:\n             name = info[\'uid\']\n         else:\n@@ -246,7 +248,8 @@ def __call__(\n             raise\n         except IOError:\n             if getattr(orig_value, \'contentType\', \'\') == \'image/svg+xml\':\n-                result = orig_data.read(), \'SVG\', (width, height)\n+                orig_data.seek(0)\n+                result = orig_data.read(), \'svg+xml\', (width, height)\n             else:\n                 logger.exception(\n                     \'Could not scale "{0!r}" of {1!r}\'.format(\ndiff --git a/plone/namedfile/tests/image.svg b/plone/namedfile/tests/image.svg\nnew file mode 100644\nindex 0000000..4405bad\n--- /dev/null\n+++ b/plone/namedfile/tests/image.svg\n@@ -0,0 +1,48 @@\n+<?xml version="1.0" encoding="utf-8"?>\r\n+<!-- Generator: Adobe Illustrator 13.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 14948)  -->\r\n+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\r\n+<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\r\n+\t width="158.253px" height="40.686px" viewBox="0 0 158.253 40.686" enable-background="new 0 0 158.253 40.686"\r\n+\t xml:space="preserve">\r\n+<g>\r\n+\t<path fill="#0095D3" d="M65.327,23.208h-6.589v11.388h-4.393V5.638h10.981c5.653,0,9.271,3.742,9.271,8.785\r\n+\t\tS70.979,23.208,65.327,23.208z M65.082,9.583h-6.345v9.639h6.345c3.05,0,5.124-1.749,5.124-4.799\r\n+\t\tC70.206,11.372,68.132,9.583,65.082,9.583z"/>\r\n+\t<path fill="#0095D3" d="M83.969,34.596c-3.904,0-5.652-2.644-5.652-5.693V5.638h4.148v23.021c0,1.587,0.567,2.399,2.235,2.399h1.83\r\n+\t\tv3.538H83.969z"/>\r\n+\t<path fill="#0095D3" d="M104.762,32.399c-1.344,1.384-3.377,2.44-6.184,2.44c-2.805,0-4.799-1.058-6.141-2.44\r\n+\t\tc-1.951-2.032-2.439-4.637-2.439-8.134c0-3.457,0.488-6.061,2.439-8.094c1.342-1.383,3.336-2.44,6.141-2.44\r\n+\t\tc2.807,0,4.84,1.059,6.184,2.44c1.951,2.033,2.439,4.637,2.439,8.094C107.203,27.763,106.713,30.366,104.762,32.399z\r\n+\t\t M101.629,18.613c-0.773-0.773-1.83-1.181-3.051-1.181c-1.219,0-2.236,0.406-3.01,1.181c-1.26,1.261-1.422,3.416-1.422,5.652\r\n+\t\ts0.162,4.393,1.422,5.653c0.773,0.771,1.791,1.22,3.01,1.22c1.221,0,2.277-0.447,3.051-1.22c1.262-1.262,1.424-3.417,1.424-5.653\r\n+\t\tS102.891,19.873,101.629,18.613z"/>\r\n+\t<path fill="#0095D3" d="M123.643,34.596V22.029c0-3.214-1.83-4.597-4.147-4.597s-4.271,1.423-4.271,4.597v12.566h-4.147v-20.62\r\n+\t\th4.065v2.074c1.425-1.546,3.416-2.318,5.49-2.318c2.115,0,3.865,0.691,5.084,1.871c1.586,1.545,2.074,3.497,2.074,5.815v13.178\r\n+\t\tL123.643,34.596L123.643,34.596z"/>\r\n+\t<path fill="#0095D3" d="M135.772,25.486c0,3.537,1.871,5.774,5.246,5.774c2.317,0,3.539-0.649,5.004-2.115l2.643,2.481\r\n+\t\tc-2.115,2.114-4.107,3.213-7.727,3.213c-5.166,0-9.273-2.725-9.273-10.574c0-6.671,3.457-10.534,8.744-10.534\r\n+\t\tc5.531,0,8.744,4.067,8.744,9.925v1.83H135.772z M144.475,19.791c-0.65-1.545-2.113-2.604-4.066-2.604\r\n+\t\tc-1.951,0-3.457,1.059-4.107,2.604c-0.406,0.936-0.488,1.546-0.529,2.807h9.273C145.003,21.337,144.883,20.726,144.475,19.791z"/>\r\n+\t<circle fill="#0095D3" cx="17.815" cy="11.516" r="4.402"/>\r\n+\t<path fill="#0095D3" d="M31.167,20.311c0,2.433-1.969,4.401-4.403,4.401c-2.427,0-4.401-1.97-4.401-4.401\r\n+\t\tc0-2.433,1.975-4.401,4.401-4.401C29.2,15.909,31.167,17.879,31.167,20.311z"/>\r\n+\t<circle fill="#0095D3" cx="17.801" cy="29.131" r="4.402"/>\r\n+\t<g>\r\n+\t\t<path fill="#0095D3" d="M20.441-0.045C9.207-0.044,0.1,9.063,0.099,20.298C0.1,31.532,9.207,40.639,20.441,40.641\r\n+\t\t\tc11.235-0.002,20.341-9.107,20.343-20.343C40.783,9.063,31.677-0.044,20.441-0.045z M31.891,31.747\r\n+\t\t\tc-2.937,2.934-6.972,4.742-11.45,4.743c-4.478-0.001-8.513-1.811-11.45-4.743C6.058,28.81,4.25,24.775,4.249,20.298\r\n+\t\t\tc0.001-4.478,1.809-8.513,4.743-11.45c2.937-2.934,6.972-4.742,11.45-4.743c4.478,0.001,8.513,1.81,11.45,4.743\r\n+\t\t\tc2.934,2.938,4.742,6.973,4.743,11.45C36.633,24.775,34.825,28.81,31.891,31.747z"/>\r\n+\t</g>\r\n+\t<g>\r\n+\t\t<path fill="#0095D3" d="M153.985,9.95c-1.195,0-2.164,0.971-2.164,2.168c0.002,1.197,0.969,2.168,2.164,2.168\r\n+\t\t\tc1.199,0,2.172-0.971,2.172-2.168S155.184,9.95,153.985,9.95z M153.985,13.968c-1.021-0.002-1.846-0.827-1.846-1.85\r\n+\t\t\tc0.002-1.021,0.825-1.849,1.846-1.851c1.023,0.002,1.852,0.828,1.854,1.851C155.836,13.141,155.008,13.966,153.985,13.968z"/>\r\n+\t</g>\r\n+\t<g>\r\n+\t\t<path fill="#0095D3" d="M154.507,13.409l-0.54-1.08h-0.486v1.08h-0.389v-2.564h0.994c0.484,0,0.796,0.313,0.796,0.75\r\n+\t\t\tc0,0.367-0.224,0.602-0.513,0.68l0.592,1.136L154.507,13.409L154.507,13.409z M154.056,11.195h-0.575v0.803h0.575\r\n+\t\t\tc0.261,0,0.437-0.147,0.437-0.399S154.317,11.195,154.056,11.195z"/>\r\n+\t</g>\r\n+</g>\r\n+</svg>\r\ndiff --git a/plone/namedfile/tests/test_svg.py b/plone/namedfile/tests/test_svg.py\nnew file mode 100644\nindex 0000000..7d3f430\n--- /dev/null\n+++ b/plone/namedfile/tests/test_svg.py\n@@ -0,0 +1,42 @@\n+# -*- coding: utf-8 -*-\n+\n+import unittest\n+\n+from plone.namedfile.file import NamedImage\n+from plone.namedfile.tests import getFile\n+from plone.namedfile.utils import get_contenttype\n+from plone.namedfile.utils.svg_utils import dimension_int\n+from plone.namedfile.utils.svg_utils import process_svg\n+\n+\n+class TestSvg(unittest.TestCase):\n+\n+    def test_get_contenttype(self):\n+        self.assertEqual(\n+            get_contenttype(\n+                NamedImage(\n+                    getFile(\'image.svg\'),\n+                    contentType=\'image/svg+xml\')),\n+            \'image/svg+xml\')\n+\n+    def test_process_svg(self):\n+\n+        content_type, width, height = process_svg(getFile(\'image.svg\'))\n+        self.assertEqual(content_type, "image/svg+xml")\n+        self.assertEqual(width, 158)\n+        self.assertEqual(height, 40)\n+\n+    def test_dimension_int(self):\n+\n+        self.assertEqual(dimension_int("auto"), 0)\n+        self.assertEqual(dimension_int("0"), 0)\n+        self.assertEqual(dimension_int("25"), 25)\n+        self.assertEqual(dimension_int("1024px"), 1024)\n+        self.assertEqual(dimension_int("123.0025px"), 123)\n+        self.assertEqual(dimension_int("123.625pt"), 123)\n+        self.assertEqual(dimension_int("50%"), 50)\n+        self.assertEqual(dimension_int(42), 42)\n+        self.assertEqual(dimension_int(6.25), 6)\n+        self.assertEqual(dimension_int({}), 0)\n+        self.assertEqual(dimension_int([]), 0)\n+        self.assertEqual(dimension_int(getFile(\'image.svg\')), 0)\ndiff --git a/plone/namedfile/utils/__init__.py b/plone/namedfile/utils/__init__.py\nindex 45fcb3f..cf2d48f 100644\n--- a/plone/namedfile/utils/__init__.py\n+++ b/plone/namedfile/utils/__init__.py\n@@ -3,6 +3,7 @@\n from plone.namedfile.interfaces import IBlobby\n from plone.namedfile.utils.jpeg_utils import process_jpeg\n from plone.namedfile.utils.png_utils import process_png\n+from plone.namedfile.utils.svg_utils import process_svg\n from plone.namedfile.utils.tiff_utils import process_tiff\n from plone.registry.interfaces import IRegistry\n from six import BytesIO\n@@ -141,6 +142,10 @@ def getImageInfo(data):\n         # handle TIFFs\n         content_type, width, height = process_tiff(data)\n \n+    elif size and b\'http://www.w3.org/2000/svg\' in data:\n+        # handle SVGs\n+        content_type, width, height = process_svg(data)\n+\n     else:\n         # Use PIL / Pillow to determ Image Information\n         try:\ndiff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nnew file mode 100644\nindex 0000000..0177bfc\n--- /dev/null\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -0,0 +1,50 @@\n+# -*- coding: utf-8 -*-\n+\n+import re\n+import xml.etree.cElementTree as et\n+from io import BytesIO\n+from logging import getLogger\n+\n+log = getLogger(__name__)\n+\n+\n+def process_svg(data):\n+    content_type = None\n+    w = -1\n+    h = -1\n+    size = len(data)\n+\n+    tag = None\n+    try:\n+        for event, el in et.iterparse(BytesIO(data), ("start",)):\n+            tag = el.tag\n+            w = dimension_int(el.attrib.get("width"))\n+            h = dimension_int(el.attrib.get("height"))\n+            break\n+    except et.ParseError:\n+        pass\n+\n+    if tag == "{http://www.w3.org/2000/svg}svg" or (\n+        size == 1024 and b"http://www.w3.org/2000/svg" in data\n+    ):\n+        content_type = "image/svg+xml"\n+        w = w if w > 1 else 1\n+        h = h if h > 1 else 1\n+\n+    return content_type, w, h\n+\n+\n+def dimension_int(dimension):\n+    if isinstance(dimension, str):\n+        try:\n+            _dimension = int(float(re.sub(r"[^\\d\\.]", "", dimension)))\n+        except ValueError:\n+            _dimension = 0\n+    elif isinstance(dimension, int):\n+        _dimension = dimension\n+    elif isinstance(dimension, float):\n+        _dimension = int(dimension)\n+    else:\n+        _dimension = 0\n+\n+    return _dimension\ndiff --git a/setup.py b/setup.py\nindex 30e4bda..b1be205 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import os\n \n \n-version = \'5.1.1.dev0\'\n+version = \'5.2.0.dev0\'\n \n description = \'File types and fields for images, files and blob files with \' \\\n               \'filenames\'\n'

