Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T13:59:43+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/b02af7dffd4cb34f69e96ff8834c430f569e239c

Fix tests for Python 2.7.

Files changed:
M src/plone/recipe/zeoserver/tests/test_docs.py

b"diff --git a/src/plone/recipe/zeoserver/tests/test_docs.py b/src/plone/recipe/zeoserver/tests/test_docs.py\nindex 998c622..c21f0ce 100644\n--- a/src/plone/recipe/zeoserver/tests/test_docs.py\n+++ b/src/plone/recipe/zeoserver/tests/test_docs.py\n@@ -28,6 +28,7 @@ def setUp(test):\n     install('Twisted', test)\n     install('hyperlink', test)\n     install('idna', test)\n+    install('PyHamcrest', test)\n     dependencies = pkg_resources.working_set.require('ZODB3')\n     for dep in dependencies:\n         try:\n"

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T14:02:29+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/e577cb27229531abb5eb0aa5ef5c297225941acb

Test on Python 3+.

When using buildout for the tests they break because zc.buildout does not seem to be installed.

Files changed:
M .travis.yml
M CHANGES.rst
M tox.ini

b'diff --git a/.travis.yml b/.travis.yml\nindex 33c1e93..ca52d14 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -1,17 +1,20 @@\n language: python\n-sudo: false\n+dist: xenial\n python:\n     - 2.7\n-    - 3.5\n     - 3.6\n+    - 3.7\n+before_install:\n+    - pip install -U setuptools pip\n+    - pip install -U coverage coveralls zope.testrunner\n install:\n-    - python bootstrap.py\n-    - bin/buildout\n+    - pip install -U -e .[zrs]\n script:\n-    - bin/test -v1\n+    - COVERAGE_PROCESS_START=.coveragerc coverage run -m zope.testrunner --test-path=src --all -v1\n notifications:\n     email: false\n+after_success:\n+    - coverage combine\n+    - coveralls\n cache:\n   pip: true\n-  directories:\n-    - eggs/\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex e732116..f368d46 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -10,7 +10,7 @@ Breaking changes:\n \n New features:\n \n-- *add item here*\n+- Add support for Python 3.6 and 3.7.\n \n Bug fixes:\n \ndiff --git a/tox.ini b/tox.ini\nindex 74aa833..a59e5f5 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -2,24 +2,19 @@\n envlist =\n     flake8,\n     py27,\n-    py35,\n     py36,\n+    py37,\n     coverage,\n \n skip_missing_interpreters = False\n \n [testenv]\n+usedevelop = true\n commands =\n-    {envbindir}/buildout -c {toxinidir}/buildout.cfg buildout:directory={envdir} buildout:develop={toxinidir} bootstrap\n-    {envbindir}/buildout -c {toxinidir}/buildout.cfg buildout:directory={envdir} buildout:develop={toxinidir} -n install test\n-    coverage run {envbindir}/test --all {posargs:-vc}\n-skip_install = true\n+    zope-testrunner --test-path=src --all {posargs:-vc}\n+extras = zrs\n deps =\n-    setuptools==33.1.1\n-    zc.buildout\n-    coverage\n-setenv =\n-    COVERAGE_FILE=.coverage.{envname}\n+    zope.testrunner\n \n [testenv:coverage]\n basepython = python2.7\n@@ -35,5 +30,6 @@ commands =\n \n [testenv:flake8]\n basepython = python2.7\n+skip_install = true\n deps = flake8\n commands = flake8 --doctests src setup.py\n'

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T14:03:05+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/20e38b0941ac53c8db68409ec5b38e8610f363d8

Fix coverage testing + test coverage in subprocesses.

Files changed:
A .coveragerc
M .gitignore
M tox.ini

b'diff --git a/.coveragerc b/.coveragerc\nnew file mode 100644\nindex 0000000..417be10\n--- /dev/null\n+++ b/.coveragerc\n@@ -0,0 +1,8 @@\n+[run]\n+branch = True\n+source = $COVERAGE_HOME/src/plone/recipe/zeoserver\n+parallel = true\n+data_file = $COVERAGE_HOME/.coverage\n+\n+[report]\n+precision = 2\ndiff --git a/.gitignore b/.gitignore\nindex de13ba3..66ec592 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,7 +1,11 @@\n-.installed.cfg\n *.pyc\n+.coverage\n+.coverage.*\n+.installed.cfg\n+.tox/\n bin/\n develop-eggs/\n+htmlcov/\n include/\n lib/\n parts/\ndiff --git a/tox.ini b/tox.ini\nindex a59e5f5..e5adbdb 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -17,16 +17,18 @@ deps =\n     zope.testrunner\n \n [testenv:coverage]\n-basepython = python2.7\n-deps = coverage\n+basepython = python3.6\n+deps =\n+    zope.testrunner\n+    coverage\n setenv =\n-    COVERAGE_FILE=.coverage\n+    COVERAGE_HOME={toxinidir}\n+    COVERAGE_PROCESS_START={toxinidir}/.coveragerc\n commands =\n-    coverage erase\n+    coverage run -m zope.testrunner --test-path=src {posargs:-vc}\n     coverage combine\n     coverage html\n-    coverage xml\n-    coverage report\n+    coverage report --fail-under=63\n \n [testenv:flake8]\n basepython = python2.7\n'

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T14:04:37+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/8f133d80b6a6836ac29cd4e0be2ec98215fbe26c

Fix Manifest.

Files changed:
M MANIFEST.in

b'diff --git a/MANIFEST.in b/MANIFEST.in\nindex fc44ccb..869f7ea 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -1,5 +1,8 @@\n-include *\n+  include *.rst\n \n-recursive-include src *\n+  include tox.ini\n+  exclude tox.ini\n \n-global-exclude *pyc\n+  recursive-include src *.bat\n+  recursive-include src *.in\n+  recursive-include src *.txt\n'

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T14:04:48+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/67d466333e1cfa927b1dd03a16c35649380602b4

Fix classifiers.

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex fa7d427..6acf264 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -34,9 +34,16 @@\n         'Framework :: Plone',\n         'Framework :: Plone :: 5.1',\n         'Framework :: Plone :: 5.2',\n-        'Framework :: Zope2',\n+        'Framework :: Zope',\n+        'Framework :: Zope :: 4',\n         'Programming Language :: Python',\n+        'Programming Language :: Python :: 2',\n         'Programming Language :: Python :: 2.7',\n+        'Programming Language :: Python :: 3',\n+        'Programming Language :: Python :: 3.6',\n+        'Programming Language :: Python :: 3.7',\n+        'Programming Language :: Python :: Implementation',\n+        'Programming Language :: Python :: Implementation :: CPython',\n     ],\n     packages=find_packages('src'),\n     include_package_data=True,\n"

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T15:08:00+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/f181664a9c68b4f8d119fc025042e2d6fa5af7fc

Fix coverage path.

Files changed:
M .travis.yml

b'diff --git a/.travis.yml b/.travis.yml\nindex ca52d14..8f3e11a 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -10,7 +10,9 @@ before_install:\n install:\n     - pip install -U -e .[zrs]\n script:\n-    - COVERAGE_PROCESS_START=.coveragerc coverage run -m zope.testrunner --test-path=src --all -v1\n+    - export COVERAGE_HOME=$(pwd)\n+    - export COVERAGE_PROCESS_START=$COVERAGE_HOME/.coveragerc\n+    - coverage run -m zope.testrunner --test-path=src --all -v1\n notifications:\n     email: false\n after_success:\n'

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T15:33:23+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/6e0124b0616d8b4294482019bc2ae37d61e3e7e0

Drop support for ``ZODB3`` but require ``ZODB &gt;= 5``.

Files changed:
M CHANGES.rst
M README.rst
M setup.py
M src/plone/recipe/zeoserver/recipe.py
M src/plone/recipe/zeoserver/tests/test_docs.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex f368d46..b6091e8 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,12 +1,12 @@\n Changelog\n =========\n \n-1.4.3 (unreleased)\n-------------------\n+2.0 (unreleased)\n+----------------\n \n Breaking changes:\n \n-- *add item here*\n+- Drop support for ``ZODB3`` but require ``ZODB >= 5``.\n \n New features:\n \ndiff --git a/README.rst b/README.rst\nindex 9b57c57..32847ec 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -196,7 +196,7 @@ zeo-conf\n repozo\n   The path to the repozo.py backup script. A wrapper for this will be\n   generated in bin/repozo, which sets up the appropriate environment for\n-  running this. Defaults to using the repozo script from the ZODB3 egg.\n+  running this. Defaults to using the repozo script from the ZODB egg.\n   Set this to an empty value if you do not want this script to be generated.\n \n repozo-script-name\n@@ -209,7 +209,7 @@ zeopack\n   The path to the zeopack.py backup script. A wrapper for this will be\n   generated in bin/zeopack (unless you change `zeopack-script-name`), which\n   sets up the appropriate environment to run this. Defaults to using the zeopack\n-  script from the ZODB3 egg.  Set this option to an empty value if you do not\n+  script from the ZODB egg.  Set this option to an empty value if you do not\n   want this script to be generated.\n \n zeopack-script-name\ndiff --git a/setup.py b/setup.py\nindex 6acf264..6c9ff1b 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import sys\n \n \n-version = \'1.4.3.dev0\'\n+version = \'2.0.dev0\'\n \n additional_install_requires = []\n \n@@ -32,7 +32,6 @@\n         \'License :: OSI Approved :: Zope Public License\',\n         \'Framework :: Buildout\',\n         \'Framework :: Plone\',\n-        \'Framework :: Plone :: 5.1\',\n         \'Framework :: Plone :: 5.2\',\n         \'Framework :: Zope\',\n         \'Framework :: Zope :: 4\',\n@@ -53,8 +52,8 @@\n         \'setuptools\',\n         \'zc.buildout\',\n         \'zc.recipe.egg\',\n-        \'ZODB3 >= 3.8\',\n-        \'zope.mkzeoinstance >=4\',\n+        \'ZODB >= 5\',\n+        \'zope.mkzeoinstance >=4.1\',\n         \'ZopeUndo\',\n     ] + additional_install_requires,\n     extras_require={\ndiff --git a/src/plone/recipe/zeoserver/recipe.py b/src/plone/recipe/zeoserver/recipe.py\nindex f8e4481..0a24b2e 100644\n--- a/src/plone/recipe/zeoserver/recipe.py\n+++ b/src/plone/recipe/zeoserver/recipe.py\n@@ -1,7 +1,4 @@\n # -*- coding: utf-8 -*-\n-from pkg_resources import get_distribution\n-from pkg_resources import parse_version\n-\n import logging\n import os\n import shutil\n@@ -506,11 +503,8 @@ def _write_file(self, path, content):\n \n \n # the template used to build a blob storage\n-zodb_version = get_distribution(\'ZODB3\').version\n \n-if parse_version(zodb_version) >= parse_version(\'3.9\'):\n-    # ZODB 3.9+ supports blobs natively\n-    blob_storage_template = """\n+blob_storage_template = """\n <filestorage %(storage_number)s>\n   path %(file_storage)s\n   blob-dir %(blob_storage)s\n@@ -519,20 +513,6 @@ def _write_file(self, path, content):\n </filestorage>\n """.strip()\n \n-else:\n-    # ZODB 3.8 needs a blob storage wrapper\n-    blob_storage_template = """\n-<blobstorage %(storage_number)s>\n-  blob-dir %(blob_storage)s\n-  <filestorage %(storage_number)s>\n-    path %(file_storage)s\n-    %(pack_gc)s\n-    %(pack_keep_old)s\n-  </filestorage>\n-</blobstorage>\n-""".strip()\n-\n-\n zrs_template = """\n %%import zc.zrs\n \ndiff --git a/src/plone/recipe/zeoserver/tests/test_docs.py b/src/plone/recipe/zeoserver/tests/test_docs.py\nindex c21f0ce..84dba40 100644\n--- a/src/plone/recipe/zeoserver/tests/test_docs.py\n+++ b/src/plone/recipe/zeoserver/tests/test_docs.py\n@@ -29,7 +29,7 @@ def setUp(test):\n     install(\'hyperlink\', test)\n     install(\'idna\', test)\n     install(\'PyHamcrest\', test)\n-    dependencies = pkg_resources.working_set.require(\'ZODB3\')\n+    dependencies = pkg_resources.working_set.require(\'ZODB\')\n     for dep in dependencies:\n         try:\n             install(dep.project_name, test)\n'

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T15:34:51+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/191e0c4842aef61fc1491a35f9caca9f980cd5ac

Fix min coverage.

Files changed:
M tox.ini

b'diff --git a/tox.ini b/tox.ini\nindex e5adbdb..e316814 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ commands =\n     coverage run -m zope.testrunner --test-path=src {posargs:-vc}\n     coverage combine\n     coverage html\n-    coverage report --fail-under=63\n+    coverage report --fail-under=62\n \n [testenv:flake8]\n basepython = python2.7\n'

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-29T15:47:13+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/7760e2f95d169cd715cdf52894740190af75360d

Fix Python 3 resource warnings.

Files changed:
M src/plone/recipe/zeoserver/tests/zeoserver.txt

b'diff --git a/src/plone/recipe/zeoserver/tests/zeoserver.txt b/src/plone/recipe/zeoserver/tests/zeoserver.txt\nindex d53dc00..080a4a8 100644\n--- a/src/plone/recipe/zeoserver/tests/zeoserver.txt\n+++ b/src/plone/recipe/zeoserver/tests/zeoserver.txt\n@@ -37,7 +37,8 @@ Let\'s run it::\n We should have a basic zeo.conf::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> conf = open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read()\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     conf = f.read()\n     >>> print(conf.replace(\'\\\\\', \'/\'))\n     %define INSTANCE .../sample-buildout/parts/zeo\n     <BLANKLINE>\n@@ -105,7 +106,8 @@ Now, let\'s create a simple buildout to create a primary replication::\n We should have primary zrs config in zeo.conf::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n     %define INSTANCE ...\n     ...\n     %import zc.zrs\n@@ -138,7 +140,8 @@ And for a secondary::\n We should have primary zrs config in zeo.conf::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n     %define INSTANCE ...\n     ...\n     %import zc.zrs\n@@ -186,7 +189,8 @@ Let\'s run it::\n We should have a zeo.conf with a rotatezlog::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n      %define INSTANCE ...\n     ...\n     <eventlog>\n@@ -230,7 +234,8 @@ Let\'s run it::\n We should have a zeo.conf with a log level set to `error`::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n      %define INSTANCE ...\n     ...\n     <eventlog>\n@@ -266,7 +271,8 @@ Let\'s run it::\n We should have a zeo.conf with log file rotation enabled::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n     %define INSTANCE ...\n     ...\n     <eventlog>\n@@ -313,7 +319,8 @@ Now check the values for `host`, `port` and `unix`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'host = "127.0.0.1"\' in zeopack\n     True\n     >>> \'port = "8001"\' in zeopack\n@@ -344,7 +351,8 @@ Now check the values for `host`, `port` and `unix`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'host = "192.168.0.11"\' in zeopack\n     True\n     >>> \'port = "8001"\' in zeopack\n@@ -375,7 +383,8 @@ Now check the values for `storage`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'storage = "9"\' in zeopack\n     True\n \n@@ -403,7 +412,8 @@ Now check the values for `host`, `port` and `unix`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'host = None\' in zeopack\n     True\n     >>> \'port = None\' in zeopack\n@@ -465,15 +475,17 @@ be different and correspond as the buildout specified::\n     >>> zeopack_paths = [os.path.join(sample_buildout, \'bin\', script) for script in zeopack_scripts]\n     >>> if WINDOWS:\n     ...     zeopack_paths =  [zeopack + \'-script.py\' for zeopack in zeopacks]\n-    >>> zeopacks = [open(zeopack_path, \'r\').read() for zeopack_path in zeopack_paths]\n-\n-    >>> \'username = "firstuser"\' in zeopacks[0]\n+    >>> with open(zeopack_paths[0], \'r\') as f:\n+    ...     first_zeopack = f.read()\n+    >>> with open(zeopack_paths[1], \'r\') as f:\n+    ...     second_zeopack = f.read()\n+    >>> \'username = "firstuser"\' in first_zeopack\n     True\n-    >>> \'username = "seconduser"\' in zeopacks[0]\n+    >>> \'username = "seconduser"\' in first_zeopack\n     False\n-    >>> \'username = "firstuser"\' in zeopacks[1]\n+    >>> \'username = "firstuser"\' in second_zeopack\n     False\n-    >>> \'username = "seconduser"\' in zeopacks[1]\n+    >>> \'username = "seconduser"\' in second_zeopack\n     True\n \n Restore the original simple configuration::\n@@ -532,7 +544,8 @@ Our generated script now has a reference to the relative path.\n     >>> zeo_path = join(\'bin\', \'zeo\')\n     >>> if WINDOWS:\n     ...     zeo_path += \'-script.py\'\n-    >>> open(zeo_path).read()\n+    >>> with open(zeo_path) as f:\n+    ...     f.read()\n     \'...base = os.path.dirname(os.path.abspath(os.path.realpath(__file__)))...\'\n \n Extra paths in scripts\n@@ -569,17 +582,20 @@ The generated scripts should have the extra path.\n \n     >>> parts_bin = join(\'parts\', \'zeo\', \'bin\')\n \n-    >>> extra in open(join(\'bin\', \'zeo\' + suffix)).read()\n+    >>> with open(join(\'bin\', \'zeo\' + suffix)) as f:\n+    ...     extra in f.read()\n     True\n \n     >>> if not WINDOWS:\n-    ...     extra in open(join(parts_bin, \'runzeo\' + suffix)).read()\n+    ...     with open(join(parts_bin, \'runzeo\' + suffix)) as f:\n+    ...         extra in f.read()\n     ... else:\n     ...     print(True)\n     True\n \n     >>> if not WINDOWS:\n-    ...     extra in open(join(parts_bin, \'zeoctl\' + suffix)).read()\n+    ...     with open(join(parts_bin, \'zeoctl\' + suffix)) as f:\n+    ...         extra in f.read()\n     ... else:\n     ...     print(True)\n     True\n@@ -613,5 +629,6 @@ The main script should have the initialization.\n     ... else:\n     ...     suffix = \'\'\n \n-    >>> \'foo = 1\' in open(join(\'bin\', \'zeo\' + suffix)).read()\n+    >>> with open(join(\'bin\', \'zeo\' + suffix)) as f:\n+    ...     \'foo = 1\' in f.read()\n     True\n'

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-11-30T10:48:39+01:00
Author: Michael Howitz (icemac) <mh@gocept.com>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/7de5449fa70bbfccf51dae380f90cbe60f197138

Implement suggestions of @sallner.

Files changed:
M setup.py
M tox.ini

b"diff --git a/setup.py b/setup.py\nindex 6c9ff1b..aa662c9 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -32,6 +32,7 @@\n         'License :: OSI Approved :: Zope Public License',\n         'Framework :: Buildout',\n         'Framework :: Plone',\n+        'Framework :: Plone :: 5.1',\n         'Framework :: Plone :: 5.2',\n         'Framework :: Zope',\n         'Framework :: Zope :: 4',\ndiff --git a/tox.ini b/tox.ini\nindex e316814..ecdf9bd 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -31,7 +31,7 @@ commands =\n     coverage report --fail-under=62\n \n [testenv:flake8]\n-basepython = python2.7\n+basepython = python3.6\n skip_install = true\n deps = flake8\n commands = flake8 --doctests src setup.py\n"

Repository: plone.recipe.zeoserver


Branch: refs/heads/master
Date: 2018-12-03T12:07:05+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.recipe.zeoserver/commit/f888758bc4ee868b2c853aa60638bd5a6682025f

Merge pull request #34 from plone/py37

Add support for Python 3.6 and 3.7.

Files changed:
A .coveragerc
M .gitignore
M .travis.yml
M CHANGES.rst
M MANIFEST.in
M README.rst
M setup.py
M src/plone/recipe/zeoserver/recipe.py
M src/plone/recipe/zeoserver/tests/test_docs.py
M src/plone/recipe/zeoserver/tests/zeoserver.txt
M tox.ini

b'diff --git a/.coveragerc b/.coveragerc\nnew file mode 100644\nindex 0000000..417be10\n--- /dev/null\n+++ b/.coveragerc\n@@ -0,0 +1,8 @@\n+[run]\n+branch = True\n+source = $COVERAGE_HOME/src/plone/recipe/zeoserver\n+parallel = true\n+data_file = $COVERAGE_HOME/.coverage\n+\n+[report]\n+precision = 2\ndiff --git a/.gitignore b/.gitignore\nindex de13ba3..66ec592 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,7 +1,11 @@\n-.installed.cfg\n *.pyc\n+.coverage\n+.coverage.*\n+.installed.cfg\n+.tox/\n bin/\n develop-eggs/\n+htmlcov/\n include/\n lib/\n parts/\ndiff --git a/.travis.yml b/.travis.yml\nindex 33c1e93..8f3e11a 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -1,17 +1,22 @@\n language: python\n-sudo: false\n+dist: xenial\n python:\n     - 2.7\n-    - 3.5\n     - 3.6\n+    - 3.7\n+before_install:\n+    - pip install -U setuptools pip\n+    - pip install -U coverage coveralls zope.testrunner\n install:\n-    - python bootstrap.py\n-    - bin/buildout\n+    - pip install -U -e .[zrs]\n script:\n-    - bin/test -v1\n+    - export COVERAGE_HOME=$(pwd)\n+    - export COVERAGE_PROCESS_START=$COVERAGE_HOME/.coveragerc\n+    - coverage run -m zope.testrunner --test-path=src --all -v1\n notifications:\n     email: false\n+after_success:\n+    - coverage combine\n+    - coveralls\n cache:\n   pip: true\n-  directories:\n-    - eggs/\ndiff --git a/CHANGES.rst b/CHANGES.rst\nindex e732116..b6091e8 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -1,16 +1,16 @@\n Changelog\n =========\n \n-1.4.3 (unreleased)\n-------------------\n+2.0 (unreleased)\n+----------------\n \n Breaking changes:\n \n-- *add item here*\n+- Drop support for ``ZODB3`` but require ``ZODB >= 5``.\n \n New features:\n \n-- *add item here*\n+- Add support for Python 3.6 and 3.7.\n \n Bug fixes:\n \ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex fc44ccb..869f7ea 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -1,5 +1,8 @@\n-include *\n+  include *.rst\n \n-recursive-include src *\n+  include tox.ini\n+  exclude tox.ini\n \n-global-exclude *pyc\n+  recursive-include src *.bat\n+  recursive-include src *.in\n+  recursive-include src *.txt\ndiff --git a/README.rst b/README.rst\nindex 9b57c57..32847ec 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -196,7 +196,7 @@ zeo-conf\n repozo\n   The path to the repozo.py backup script. A wrapper for this will be\n   generated in bin/repozo, which sets up the appropriate environment for\n-  running this. Defaults to using the repozo script from the ZODB3 egg.\n+  running this. Defaults to using the repozo script from the ZODB egg.\n   Set this to an empty value if you do not want this script to be generated.\n \n repozo-script-name\n@@ -209,7 +209,7 @@ zeopack\n   The path to the zeopack.py backup script. A wrapper for this will be\n   generated in bin/zeopack (unless you change `zeopack-script-name`), which\n   sets up the appropriate environment to run this. Defaults to using the zeopack\n-  script from the ZODB3 egg.  Set this option to an empty value if you do not\n+  script from the ZODB egg.  Set this option to an empty value if you do not\n   want this script to be generated.\n \n zeopack-script-name\ndiff --git a/setup.py b/setup.py\nindex fa7d427..aa662c9 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -5,7 +5,7 @@\n import sys\n \n \n-version = \'1.4.3.dev0\'\n+version = \'2.0.dev0\'\n \n additional_install_requires = []\n \n@@ -34,9 +34,16 @@\n         \'Framework :: Plone\',\n         \'Framework :: Plone :: 5.1\',\n         \'Framework :: Plone :: 5.2\',\n-        \'Framework :: Zope2\',\n+        \'Framework :: Zope\',\n+        \'Framework :: Zope :: 4\',\n         \'Programming Language :: Python\',\n+        \'Programming Language :: Python :: 2\',\n         \'Programming Language :: Python :: 2.7\',\n+        \'Programming Language :: Python :: 3\',\n+        \'Programming Language :: Python :: 3.6\',\n+        \'Programming Language :: Python :: 3.7\',\n+        \'Programming Language :: Python :: Implementation\',\n+        \'Programming Language :: Python :: Implementation :: CPython\',\n     ],\n     packages=find_packages(\'src\'),\n     include_package_data=True,\n@@ -46,8 +53,8 @@\n         \'setuptools\',\n         \'zc.buildout\',\n         \'zc.recipe.egg\',\n-        \'ZODB3 >= 3.8\',\n-        \'zope.mkzeoinstance >=4\',\n+        \'ZODB >= 5\',\n+        \'zope.mkzeoinstance >=4.1\',\n         \'ZopeUndo\',\n     ] + additional_install_requires,\n     extras_require={\ndiff --git a/src/plone/recipe/zeoserver/recipe.py b/src/plone/recipe/zeoserver/recipe.py\nindex f8e4481..0a24b2e 100644\n--- a/src/plone/recipe/zeoserver/recipe.py\n+++ b/src/plone/recipe/zeoserver/recipe.py\n@@ -1,7 +1,4 @@\n # -*- coding: utf-8 -*-\n-from pkg_resources import get_distribution\n-from pkg_resources import parse_version\n-\n import logging\n import os\n import shutil\n@@ -506,11 +503,8 @@ def _write_file(self, path, content):\n \n \n # the template used to build a blob storage\n-zodb_version = get_distribution(\'ZODB3\').version\n \n-if parse_version(zodb_version) >= parse_version(\'3.9\'):\n-    # ZODB 3.9+ supports blobs natively\n-    blob_storage_template = """\n+blob_storage_template = """\n <filestorage %(storage_number)s>\n   path %(file_storage)s\n   blob-dir %(blob_storage)s\n@@ -519,20 +513,6 @@ def _write_file(self, path, content):\n </filestorage>\n """.strip()\n \n-else:\n-    # ZODB 3.8 needs a blob storage wrapper\n-    blob_storage_template = """\n-<blobstorage %(storage_number)s>\n-  blob-dir %(blob_storage)s\n-  <filestorage %(storage_number)s>\n-    path %(file_storage)s\n-    %(pack_gc)s\n-    %(pack_keep_old)s\n-  </filestorage>\n-</blobstorage>\n-""".strip()\n-\n-\n zrs_template = """\n %%import zc.zrs\n \ndiff --git a/src/plone/recipe/zeoserver/tests/test_docs.py b/src/plone/recipe/zeoserver/tests/test_docs.py\nindex 998c622..84dba40 100644\n--- a/src/plone/recipe/zeoserver/tests/test_docs.py\n+++ b/src/plone/recipe/zeoserver/tests/test_docs.py\n@@ -28,7 +28,8 @@ def setUp(test):\n     install(\'Twisted\', test)\n     install(\'hyperlink\', test)\n     install(\'idna\', test)\n-    dependencies = pkg_resources.working_set.require(\'ZODB3\')\n+    install(\'PyHamcrest\', test)\n+    dependencies = pkg_resources.working_set.require(\'ZODB\')\n     for dep in dependencies:\n         try:\n             install(dep.project_name, test)\ndiff --git a/src/plone/recipe/zeoserver/tests/zeoserver.txt b/src/plone/recipe/zeoserver/tests/zeoserver.txt\nindex d53dc00..080a4a8 100644\n--- a/src/plone/recipe/zeoserver/tests/zeoserver.txt\n+++ b/src/plone/recipe/zeoserver/tests/zeoserver.txt\n@@ -37,7 +37,8 @@ Let\'s run it::\n We should have a basic zeo.conf::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> conf = open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read()\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     conf = f.read()\n     >>> print(conf.replace(\'\\\\\', \'/\'))\n     %define INSTANCE .../sample-buildout/parts/zeo\n     <BLANKLINE>\n@@ -105,7 +106,8 @@ Now, let\'s create a simple buildout to create a primary replication::\n We should have primary zrs config in zeo.conf::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n     %define INSTANCE ...\n     ...\n     %import zc.zrs\n@@ -138,7 +140,8 @@ And for a secondary::\n We should have primary zrs config in zeo.conf::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n     %define INSTANCE ...\n     ...\n     %import zc.zrs\n@@ -186,7 +189,8 @@ Let\'s run it::\n We should have a zeo.conf with a rotatezlog::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n      %define INSTANCE ...\n     ...\n     <eventlog>\n@@ -230,7 +234,8 @@ Let\'s run it::\n We should have a zeo.conf with a log level set to `error`::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n      %define INSTANCE ...\n     ...\n     <eventlog>\n@@ -266,7 +271,8 @@ Let\'s run it::\n We should have a zeo.conf with log file rotation enabled::\n \n     >>> zeo = os.path.join(sample_buildout, \'parts\', \'zeo\')\n-    >>> print(open(os.path.join(zeo, \'etc\', \'zeo.conf\')).read())\n+    >>> with open(os.path.join(zeo, \'etc\', \'zeo.conf\')) as f:\n+    ...     print(f.read())\n     %define INSTANCE ...\n     ...\n     <eventlog>\n@@ -313,7 +319,8 @@ Now check the values for `host`, `port` and `unix`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'host = "127.0.0.1"\' in zeopack\n     True\n     >>> \'port = "8001"\' in zeopack\n@@ -344,7 +351,8 @@ Now check the values for `host`, `port` and `unix`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'host = "192.168.0.11"\' in zeopack\n     True\n     >>> \'port = "8001"\' in zeopack\n@@ -375,7 +383,8 @@ Now check the values for `storage`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'storage = "9"\' in zeopack\n     True\n \n@@ -403,7 +412,8 @@ Now check the values for `host`, `port` and `unix`::\n     >>> zeopack_path = os.path.join(sample_buildout, \'bin\', \'zeopack\')\n     >>> if WINDOWS:\n     ...     zeopack_path += \'-script.py\'\n-    >>> zeopack = open(zeopack_path, \'r\').read()\n+    >>> with open(zeopack_path, \'r\') as f:\n+    ...     zeopack = f.read()\n     >>> \'host = None\' in zeopack\n     True\n     >>> \'port = None\' in zeopack\n@@ -465,15 +475,17 @@ be different and correspond as the buildout specified::\n     >>> zeopack_paths = [os.path.join(sample_buildout, \'bin\', script) for script in zeopack_scripts]\n     >>> if WINDOWS:\n     ...     zeopack_paths =  [zeopack + \'-script.py\' for zeopack in zeopacks]\n-    >>> zeopacks = [open(zeopack_path, \'r\').read() for zeopack_path in zeopack_paths]\n-\n-    >>> \'username = "firstuser"\' in zeopacks[0]\n+    >>> with open(zeopack_paths[0], \'r\') as f:\n+    ...     first_zeopack = f.read()\n+    >>> with open(zeopack_paths[1], \'r\') as f:\n+    ...     second_zeopack = f.read()\n+    >>> \'username = "firstuser"\' in first_zeopack\n     True\n-    >>> \'username = "seconduser"\' in zeopacks[0]\n+    >>> \'username = "seconduser"\' in first_zeopack\n     False\n-    >>> \'username = "firstuser"\' in zeopacks[1]\n+    >>> \'username = "firstuser"\' in second_zeopack\n     False\n-    >>> \'username = "seconduser"\' in zeopacks[1]\n+    >>> \'username = "seconduser"\' in second_zeopack\n     True\n \n Restore the original simple configuration::\n@@ -532,7 +544,8 @@ Our generated script now has a reference to the relative path.\n     >>> zeo_path = join(\'bin\', \'zeo\')\n     >>> if WINDOWS:\n     ...     zeo_path += \'-script.py\'\n-    >>> open(zeo_path).read()\n+    >>> with open(zeo_path) as f:\n+    ...     f.read()\n     \'...base = os.path.dirname(os.path.abspath(os.path.realpath(__file__)))...\'\n \n Extra paths in scripts\n@@ -569,17 +582,20 @@ The generated scripts should have the extra path.\n \n     >>> parts_bin = join(\'parts\', \'zeo\', \'bin\')\n \n-    >>> extra in open(join(\'bin\', \'zeo\' + suffix)).read()\n+    >>> with open(join(\'bin\', \'zeo\' + suffix)) as f:\n+    ...     extra in f.read()\n     True\n \n     >>> if not WINDOWS:\n-    ...     extra in open(join(parts_bin, \'runzeo\' + suffix)).read()\n+    ...     with open(join(parts_bin, \'runzeo\' + suffix)) as f:\n+    ...         extra in f.read()\n     ... else:\n     ...     print(True)\n     True\n \n     >>> if not WINDOWS:\n-    ...     extra in open(join(parts_bin, \'zeoctl\' + suffix)).read()\n+    ...     with open(join(parts_bin, \'zeoctl\' + suffix)) as f:\n+    ...         extra in f.read()\n     ... else:\n     ...     print(True)\n     True\n@@ -613,5 +629,6 @@ The main script should have the initialization.\n     ... else:\n     ...     suffix = \'\'\n \n-    >>> \'foo = 1\' in open(join(\'bin\', \'zeo\' + suffix)).read()\n+    >>> with open(join(\'bin\', \'zeo\' + suffix)) as f:\n+    ...     \'foo = 1\' in f.read()\n     True\ndiff --git a/tox.ini b/tox.ini\nindex 74aa833..ecdf9bd 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -2,38 +2,36 @@\n envlist =\n     flake8,\n     py27,\n-    py35,\n     py36,\n+    py37,\n     coverage,\n \n skip_missing_interpreters = False\n \n [testenv]\n+usedevelop = true\n commands =\n-    {envbindir}/buildout -c {toxinidir}/buildout.cfg buildout:directory={envdir} buildout:develop={toxinidir} bootstrap\n-    {envbindir}/buildout -c {toxinidir}/buildout.cfg buildout:directory={envdir} buildout:develop={toxinidir} -n install test\n-    coverage run {envbindir}/test --all {posargs:-vc}\n-skip_install = true\n+    zope-testrunner --test-path=src --all {posargs:-vc}\n+extras = zrs\n deps =\n-    setuptools==33.1.1\n-    zc.buildout\n-    coverage\n-setenv =\n-    COVERAGE_FILE=.coverage.{envname}\n+    zope.testrunner\n \n [testenv:coverage]\n-basepython = python2.7\n-deps = coverage\n+basepython = python3.6\n+deps =\n+    zope.testrunner\n+    coverage\n setenv =\n-    COVERAGE_FILE=.coverage\n+    COVERAGE_HOME={toxinidir}\n+    COVERAGE_PROCESS_START={toxinidir}/.coveragerc\n commands =\n-    coverage erase\n+    coverage run -m zope.testrunner --test-path=src {posargs:-vc}\n     coverage combine\n     coverage html\n-    coverage xml\n-    coverage report\n+    coverage report --fail-under=62\n \n [testenv:flake8]\n-basepython = python2.7\n+basepython = python3.6\n+skip_install = true\n deps = flake8\n commands = flake8 --doctests src setup.py\n'

