Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-05-17T13:15:19+03:00
Author: MrTango (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/be66cb96ac74375df007bfc4f5b886e2e01f4fbe

check if a rule exists before assignment

Files changed:
M CHANGES.rst
M plone/app/contenttypes/migration/utils.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 7eab5a15..fd580a91 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -20,6 +20,9 @@ Bug fixes:\n - Skip migration tests if ATContentTypes is not installed.\n   [davisagli]\n \n+- check if a contentrule exists before assignment on migration\n+  [MrTango]\n+\n \n 1.4.10 (2018-04-03)\n -------------------\n@@ -105,7 +108,6 @@ Bug fixes:\n - Don't overwrite existing settings for Plone Site.\n   [roel]\n \n-\n 1.4.5 (2017-10-06)\n ------------------\n \ndiff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py\nindex af6ce598..1ba948a8 100644\n--- a/plone/app/contenttypes/migration/utils.py\n+++ b/plone/app/contenttypes/migration/utils.py\n@@ -17,6 +17,7 @@\n from plone.app.linkintegrity.handlers import referencedRelationship\n from plone.app.uuid.utils import uuidToObject\n from plone.contentrules.engine.interfaces import IRuleAssignmentManager\n+from plone.contentrules.engine.interfaces import IRuleStorage\n from plone.dexterity.interfaces import IDexterityContent\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.portlets.constants import CONTEXT_BLACKLIST_STATUS_KEY\n@@ -181,7 +182,16 @@ def copy_contentrules(source_object, target_object):\n                 )\n             )\n             return\n+        rules_storage = getUtility(IRuleStorage)\n+        available_rules = [r for r in rules_storage]\n         for rule_id in source_assignable:\n+            if rule_id not in available_rules:\n+                logger.info(\n+                    'Contentrule {0} does not exist, skip assignment!'.format(\n+                        rule_id\n+                    )\n+                )\n+                continue\n             assign_rule(target_object, rule_id)\n \n \n"

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2018-07-02T02:05:23+02:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e36df791f305c07b80ac18b7284b0142ba865e8d

Merge pull request #440 from plone/MrTango-improve-contentrules-migration

check if a contentrule exists before assignment on migration

Files changed:
M CHANGES.rst
M plone/app/contenttypes/migration/utils.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 8b57644d..c72c9219 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -28,6 +28,9 @@ Bug fixes:\n - Skip migration tests if ATContentTypes is not installed.\n   [davisagli]\n \n+- check if a contentrule exists before assignment on migration\n+  [MrTango]\n+\n \n 1.4.10 (2018-04-03)\n -------------------\n@@ -113,7 +116,6 @@ Bug fixes:\n - Don't overwrite existing settings for Plone Site.\n   [roel]\n \n-\n 1.4.5 (2017-10-06)\n ------------------\n \ndiff --git a/plone/app/contenttypes/migration/utils.py b/plone/app/contenttypes/migration/utils.py\nindex af6ce598..1ba948a8 100644\n--- a/plone/app/contenttypes/migration/utils.py\n+++ b/plone/app/contenttypes/migration/utils.py\n@@ -17,6 +17,7 @@\n from plone.app.linkintegrity.handlers import referencedRelationship\n from plone.app.uuid.utils import uuidToObject\n from plone.contentrules.engine.interfaces import IRuleAssignmentManager\n+from plone.contentrules.engine.interfaces import IRuleStorage\n from plone.dexterity.interfaces import IDexterityContent\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.portlets.constants import CONTEXT_BLACKLIST_STATUS_KEY\n@@ -181,7 +182,16 @@ def copy_contentrules(source_object, target_object):\n                 )\n             )\n             return\n+        rules_storage = getUtility(IRuleStorage)\n+        available_rules = [r for r in rules_storage]\n         for rule_id in source_assignable:\n+            if rule_id not in available_rules:\n+                logger.info(\n+                    'Contentrule {0} does not exist, skip assignment!'.format(\n+                        rule_id\n+                    )\n+                )\n+                continue\n             assign_rule(target_object, rule_id)\n \n \n"

