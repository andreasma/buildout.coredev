Repository: plone.supermodel


Branch: refs/heads/master
Date: 2019-10-30T10:14:01+07:00
Author: Dylan Jay (djay) <software@pretaweb.com>
Commit: https://github.com/plone/plone.supermodel/commit/ba8b82d8da65c9f47f0590dc7f4b64bd1531a00b

initial test to ensure sets are serialized consistently

Files changed:
M plone/supermodel/tests.py

b"diff --git a/plone/supermodel/tests.py b/plone/supermodel/tests.py\nindex 75f3c4b..d3d843b 100644\n--- a/plone/supermodel/tests.py\n+++ b/plone/supermodel/tests.py\n@@ -369,6 +369,34 @@ def test_lists(self):\n             b'</value>'\n         )\n \n+    def test_sets(self):\n+        field = schema.Set(value_type=schema.Int(),\n+        )\n+        value = set([])\n+        self._assertSerialized(field, value, b'<value/>')\n+        value = set([3, 4, 2, 1])\n+        # Sets should be sorted to ensure nice diffs\n+        self._assertSerialized(\n+            field, value,\n+            b'<value>'\n+            b'<element>1</element>'\n+            b'<element>2</element>'\n+            b'<element>3</element>'\n+            b'<element>4</element>'\n+            b'</value>'\n+        )\n+\n+        field = schema.Set(value_type=schema.Text(),)\n+        value = set(['b', 'a'])\n+        # Sets should be sorted to ensure nice diffs\n+        self._assertSerialized(\n+            field, value,\n+            b'<value>'\n+            b'<element>a</element>'\n+            b'<element>b</element>'\n+            b'</value>'\n+        )\n+\n     def test_nested_lists(self):\n         field = schema.List(value_type=schema.List(value_type=schema.Int()))\n         value = []\n@@ -413,6 +441,9 @@ def test_nested_dicts(self):\n         )\n \n \n+\n+\n+\n class TestChoiceHandling(unittest.TestCase):\n \n     def setUp(self):\n"

Repository: plone.supermodel


Branch: refs/heads/master
Date: 2019-10-30T10:26:47+07:00
Author: Dylan Jay (djay) <software@pretaweb.com>
Commit: https://github.com/plone/plone.supermodel/commit/f42a47a758116ebe716f5f3d4bb0248cafe73d59

add to changelog

Files changed:
A news/30.bugfix

b'diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..fd0ad9e\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+tests to ensure schema.Set is serialized consistently\n\\ No newline at end of file\n'

Repository: plone.supermodel


Branch: refs/heads/master
Date: 2019-11-01T11:55:03+07:00
Author: Dylan Jay (djay) <software@pretaweb.com>
Commit: https://github.com/plone/plone.supermodel/commit/860460c1a336baecd55df736ca1562ff06050d94

Fix sets so they are sorted on serialization

Files changed:
M plone/supermodel/tests.py
M plone/supermodel/utils.py

b"diff --git a/plone/supermodel/tests.py b/plone/supermodel/tests.py\nindex d3d843b..be630e2 100644\n--- a/plone/supermodel/tests.py\n+++ b/plone/supermodel/tests.py\n@@ -386,7 +386,7 @@ def test_sets(self):\n             b'</value>'\n         )\n \n-        field = schema.Set(value_type=schema.Text(),)\n+        field = schema.Set(value_type=schema.Choice(['a','b','c']),)\n         value = set(['b', 'a'])\n         # Sets should be sorted to ensure nice diffs\n         self._assertSerialized(\ndiff --git a/plone/supermodel/utils.py b/plone/supermodel/utils.py\nindex bbca1d0..78f4119 100644\n--- a/plone/supermodel/utils.py\n+++ b/plone/supermodel/utils.py\n@@ -13,6 +13,7 @@\n from zope.schema.interfaces import IDict\n from zope.schema.interfaces import IField\n from zope.schema.interfaces import IFromUnicode\n+from zope.schema.interfaces import ISet\n \n import os.path\n import re\n@@ -203,6 +204,9 @@ def valueToElement(field, value, name=None, force=False):\n                 child.append(list_element)\n \n         elif ICollection.providedBy(field):\n+            if ISet.providedBy(field):\n+                # Serliazation should be consistent even if value was not really a set\n+                value = sorted(value)\n             for v in value:\n                 list_element = valueToElement(\n                     field.value_type, v, 'element', force)\n"

Repository: plone.supermodel


Branch: refs/heads/master
Date: 2019-11-01T13:12:16+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.supermodel/commit/3e5f26ae7c95fb17c0f334fcb2efccfe44f7896a

Merge pull request #30 from plone/test_set_serialisation

ensure sets are serialized consistently

Files changed:
A news/30.bugfix
M plone/supermodel/tests.py
M plone/supermodel/utils.py

b"diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..fd0ad9e\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+tests to ensure schema.Set is serialized consistently\n\\ No newline at end of file\ndiff --git a/plone/supermodel/tests.py b/plone/supermodel/tests.py\nindex 75f3c4b..be630e2 100644\n--- a/plone/supermodel/tests.py\n+++ b/plone/supermodel/tests.py\n@@ -369,6 +369,34 @@ def test_lists(self):\n             b'</value>'\n         )\n \n+    def test_sets(self):\n+        field = schema.Set(value_type=schema.Int(),\n+        )\n+        value = set([])\n+        self._assertSerialized(field, value, b'<value/>')\n+        value = set([3, 4, 2, 1])\n+        # Sets should be sorted to ensure nice diffs\n+        self._assertSerialized(\n+            field, value,\n+            b'<value>'\n+            b'<element>1</element>'\n+            b'<element>2</element>'\n+            b'<element>3</element>'\n+            b'<element>4</element>'\n+            b'</value>'\n+        )\n+\n+        field = schema.Set(value_type=schema.Choice(['a','b','c']),)\n+        value = set(['b', 'a'])\n+        # Sets should be sorted to ensure nice diffs\n+        self._assertSerialized(\n+            field, value,\n+            b'<value>'\n+            b'<element>a</element>'\n+            b'<element>b</element>'\n+            b'</value>'\n+        )\n+\n     def test_nested_lists(self):\n         field = schema.List(value_type=schema.List(value_type=schema.Int()))\n         value = []\n@@ -413,6 +441,9 @@ def test_nested_dicts(self):\n         )\n \n \n+\n+\n+\n class TestChoiceHandling(unittest.TestCase):\n \n     def setUp(self):\ndiff --git a/plone/supermodel/utils.py b/plone/supermodel/utils.py\nindex bbca1d0..78f4119 100644\n--- a/plone/supermodel/utils.py\n+++ b/plone/supermodel/utils.py\n@@ -13,6 +13,7 @@\n from zope.schema.interfaces import IDict\n from zope.schema.interfaces import IField\n from zope.schema.interfaces import IFromUnicode\n+from zope.schema.interfaces import ISet\n \n import os.path\n import re\n@@ -203,6 +204,9 @@ def valueToElement(field, value, name=None, force=False):\n                 child.append(list_element)\n \n         elif ICollection.providedBy(field):\n+            if ISet.providedBy(field):\n+                # Serliazation should be consistent even if value was not really a set\n+                value = sorted(value)\n             for v in value:\n                 list_element = valueToElement(\n                     field.value_type, v, 'element', force)\n"

