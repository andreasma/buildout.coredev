Repository: Products.CMFPlone


Branch: refs/heads/5.0.x
Date: 2018-04-12T01:18:50+02:00
Author: Joni Orponen (Rotonen) <joni.orponen@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/3bf545be8187bccbf4575751e58951cde5360b8a

Move the gtbn_funcglobals patch security test to functional tests.

Files changed:
M CHANGES.rst
M Products/CMFPlone/tests/testSecurity.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 29189d48b..2e12ac3b1 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -26,6 +26,9 @@ New features:
 
 Bug fixes:
 
+- Unflakied a unit test.
+  [Rotonen]
+
 - Add required ``plone.app.imaging`` as direct dependency.
   Note, in Plone 5.1 plone.app.imaging is no dependency anymore.
   [thet]
diff --git a/Products/CMFPlone/tests/testSecurity.py b/Products/CMFPlone/tests/testSecurity.py
index ac7f7dc74..cd0567c96 100644
--- a/Products/CMFPlone/tests/testSecurity.py
+++ b/Products/CMFPlone/tests/testSecurity.py
@@ -10,15 +10,6 @@
 
 class TestAttackVectorsUnit(unittest.TestCase):
 
-    def test_gtbn_funcglobals(self):
-        from Products.CMFPlone.utils import getToolByName
-        try:
-            getToolByName(self.assertTrue, 'func_globals')['__builtins__']
-        except TypeError:
-            pass
-        else:
-            self.fail('getToolByName should block access to non CMF tools')
-
     def test_setHeader_drops_LF(self):
         from ZPublisher.HTTPResponse import HTTPResponse
         response = HTTPResponse()
@@ -61,6 +52,15 @@ def test_get_request_var_or_attr_disallowed(self):
 
 class TestAttackVectorsFunctional(PloneTestCase):
 
+    def test_gtbn_funcglobals(self):
+        from Products.CMFPlone.utils import getToolByName
+        try:
+            getToolByName(self.assertTrue, 'func_globals')['__builtins__']
+        except TypeError:
+            pass
+        else:
+            self.fail('getToolByName should block access to non CMF tools')
+
     def test_widget_traversal_1(self):
         res = self.publish(
             '/plone/@@discussion-settings/++widget++moderator_email')


Repository: Products.CMFPlone


Branch: refs/heads/5.0.x
Date: 2018-04-12T08:25:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/0e6bade9c61517d7cbd2eb52a5c0eb90589db843

Merge pull request #2383 from plone/roto-move-test-5.0.x

Move the gtbn_funcglobals patch security test to functional tests

Files changed:
M CHANGES.rst
M Products/CMFPlone/tests/testSecurity.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 29189d48b..2e12ac3b1 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -26,6 +26,9 @@ New features:
 
 Bug fixes:
 
+- Unflakied a unit test.
+  [Rotonen]
+
 - Add required ``plone.app.imaging`` as direct dependency.
   Note, in Plone 5.1 plone.app.imaging is no dependency anymore.
   [thet]
diff --git a/Products/CMFPlone/tests/testSecurity.py b/Products/CMFPlone/tests/testSecurity.py
index ac7f7dc74..cd0567c96 100644
--- a/Products/CMFPlone/tests/testSecurity.py
+++ b/Products/CMFPlone/tests/testSecurity.py
@@ -10,15 +10,6 @@
 
 class TestAttackVectorsUnit(unittest.TestCase):
 
-    def test_gtbn_funcglobals(self):
-        from Products.CMFPlone.utils import getToolByName
-        try:
-            getToolByName(self.assertTrue, 'func_globals')['__builtins__']
-        except TypeError:
-            pass
-        else:
-            self.fail('getToolByName should block access to non CMF tools')
-
     def test_setHeader_drops_LF(self):
         from ZPublisher.HTTPResponse import HTTPResponse
         response = HTTPResponse()
@@ -61,6 +52,15 @@ def test_get_request_var_or_attr_disallowed(self):
 
 class TestAttackVectorsFunctional(PloneTestCase):
 
+    def test_gtbn_funcglobals(self):
+        from Products.CMFPlone.utils import getToolByName
+        try:
+            getToolByName(self.assertTrue, 'func_globals')['__builtins__']
+        except TypeError:
+            pass
+        else:
+            self.fail('getToolByName should block access to non CMF tools')
+
     def test_widget_traversal_1(self):
         res = self.publish(
             '/plone/@@discussion-settings/++widget++moderator_email')


