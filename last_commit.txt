Repository: mockup


Branch: refs/heads/master
Date: 2018-06-06T17:41:23+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/886865e85426ec91e82fc04b70c6a9a89e368636

pat-contentloader: Add content-load-error to other exit-cases too. Clean up classes on initialization.

Files changed:
M CHANGES.rst
M mockup/patterns/contentloader/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index 83097a4f..eae1c3a5 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -18,6 +18,7 @@ Bug fixes:
 
 - pat-contentloader: When the content which replaces the target is empty, empty the target instead of removing it.
   This fixes a problem, where an empty result didn't did remove the ability to successfully replace the target for subsequent content loads.
+- pat-contentloader: Add 'content-load-error' to other exit-cases too. Clean up classes on initialization.
   [thet]
 
 - Relateditems: Do not filter out current context.
diff --git a/mockup/patterns/contentloader/pattern.js b/mockup/patterns/contentloader/pattern.js
index 1515dabe..7f3a0d85 100644
--- a/mockup/patterns/contentloader/pattern.js
+++ b/mockup/patterns/contentloader/pattern.js
@@ -53,6 +53,8 @@ define([
       if(that.options.url === 'el' && that.$el[0].tagName === 'A'){
         that.options.url = that.$el.attr('href');
       }
+      that.$el.removeClass('loading-content');
+      that.$el.removeClass('content-load-error');
       if(that.options.trigger === 'immediate'){
         that._load();
       }else{
@@ -92,7 +94,8 @@ define([
             try{
               $el = $(_.template(that.options.template)(data));
             }catch(e){
-              // log this
+              that.$el.removeClass('loading-content');
+              that.$el.addClass('content-load-error');
               log.warn('error rendering template. pat-contentloader will not work');
               return;
             }
@@ -101,9 +104,9 @@ define([
             $el = $el.find(that.options.content);
           }
           that.loadLocal($el);
-          that.$el.removeClass('loading-content');
         },
         error: function(){
+          that.$el.removeClass('loading-content');
           that.$el.addClass('content-load-error');
         }
       });
@@ -111,6 +114,8 @@ define([
     loadLocal: function($content){
       var that = this;
       if(!$content && that.options.content === null){
+        that.$el.removeClass('loading-content');
+        that.$el.addClass('content-load-error');
         log.warn('No selector configured');
         return;
       }
@@ -118,6 +123,8 @@ define([
       if(that.options.target !== null){
         $target = $(that.options.target);
         if($target.size() === 0){
+          that.$el.removeClass('loading-content');
+          that.$el.addClass('content-load-error');
           log.warn('No target nodes found');
           return;
         }


Repository: mockup


Branch: refs/heads/master
Date: 2018-06-06T17:43:05+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/mockup/commit/45a2bebd8496ad9e6d2f479ebdf106865d4497b7

pat-contentloader: Add ``loading-done`` event.

Files changed:
M CHANGES.rst
M mockup/patterns/contentloader/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index eae1c3a5..7a83177b 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,11 +14,16 @@ New features:
   https://developers.google.com/web/tools/lighthouse/audits/noopener
   [mamico]
 
+- pat-contentloader: Add ``loading-done`` event.
+  [agitator, thet]
+
 Bug fixes:
 
+- pat-contentloader: Add 'content-load-error' to other exit-cases too. Clean up classes on initialization.
+  [thet]
+
 - pat-contentloader: When the content which replaces the target is empty, empty the target instead of removing it.
   This fixes a problem, where an empty result didn't did remove the ability to successfully replace the target for subsequent content loads.
-- pat-contentloader: Add 'content-load-error' to other exit-cases too. Clean up classes on initialization.
   [thet]
 
 - Relateditems: Do not filter out current context.
diff --git a/mockup/patterns/contentloader/pattern.js b/mockup/patterns/contentloader/pattern.js
index 7f3a0d85..114e68c3 100644
--- a/mockup/patterns/contentloader/pattern.js
+++ b/mockup/patterns/contentloader/pattern.js
@@ -144,6 +144,7 @@ define([
       }
 
       that.$el.removeClass('loading-content');
+      that.emit('loading-done');
     }
   });
 


Repository: mockup


Branch: refs/heads/master
Date: 2018-06-08T07:40:01+02:00
Author: agitator (agitator) <agitator@users.noreply.github.com>
Commit: https://github.com/plone/mockup/commit/10e6347086bb5334128f644a4800b6264a089a47

Merge pull request #852 from plone/contentloader-add-load-done-event

add load done event

Files changed:
M CHANGES.rst
M mockup/patterns/contentloader/pattern.js

diff --git a/CHANGES.rst b/CHANGES.rst
index f8d6fcfc..a25f9b73 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -14,8 +14,14 @@ New features:
   https://developers.google.com/web/tools/lighthouse/audits/noopener
   [mamico]
 
+- pat-contentloader: Add ``loading-done`` event.
+  [agitator, thet]
+
 Bug fixes:
 
+- pat-contentloader: Add 'content-load-error' to other exit-cases too. Clean up classes on initialization.
+  [thet]
+
 - pat-contentloader: When the content which replaces the target is empty, empty the target instead of removing it.
   This fixes a problem, where an empty result didn't did remove the ability to successfully replace the target for subsequent content loads.
   [thet]
diff --git a/mockup/patterns/contentloader/pattern.js b/mockup/patterns/contentloader/pattern.js
index 1515dabe..114e68c3 100644
--- a/mockup/patterns/contentloader/pattern.js
+++ b/mockup/patterns/contentloader/pattern.js
@@ -53,6 +53,8 @@ define([
       if(that.options.url === 'el' && that.$el[0].tagName === 'A'){
         that.options.url = that.$el.attr('href');
       }
+      that.$el.removeClass('loading-content');
+      that.$el.removeClass('content-load-error');
       if(that.options.trigger === 'immediate'){
         that._load();
       }else{
@@ -92,7 +94,8 @@ define([
             try{
               $el = $(_.template(that.options.template)(data));
             }catch(e){
-              // log this
+              that.$el.removeClass('loading-content');
+              that.$el.addClass('content-load-error');
               log.warn('error rendering template. pat-contentloader will not work');
               return;
             }
@@ -101,9 +104,9 @@ define([
             $el = $el.find(that.options.content);
           }
           that.loadLocal($el);
-          that.$el.removeClass('loading-content');
         },
         error: function(){
+          that.$el.removeClass('loading-content');
           that.$el.addClass('content-load-error');
         }
       });
@@ -111,6 +114,8 @@ define([
     loadLocal: function($content){
       var that = this;
       if(!$content && that.options.content === null){
+        that.$el.removeClass('loading-content');
+        that.$el.addClass('content-load-error');
         log.warn('No selector configured');
         return;
       }
@@ -118,6 +123,8 @@ define([
       if(that.options.target !== null){
         $target = $(that.options.target);
         if($target.size() === 0){
+          that.$el.removeClass('loading-content');
+          that.$el.addClass('content-load-error');
           log.warn('No target nodes found');
           return;
         }
@@ -137,6 +144,7 @@ define([
       }
 
       that.$el.removeClass('loading-content');
+      that.emit('loading-done');
     }
   });
 


