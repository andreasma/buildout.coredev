Repository: plone.recipe.zope2instance


Branch: refs/heads/4.x
Date: 2018-05-29T13:01:20+02:00
Author: Tobias Herp (tobiasherp) <tobias.herp@stein.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/101c7d731556337f8315c8854aa6dcf793021668

Improved error message for invalid comments

When invalid comments are found in the assigment to the zcml variable
(i.e. those prepended by whitespace in the same line), the recipe
complains about "Invalid zcml" and a "package" which is named
'#firstword' or (even worse, if the '#' is followed by whitespace) '#',
and the rest of the comment is silently taken as package names as well.
(issue 46)

This change explicitly creates a hopefully much more useful error
message.

Files changed:
M CHANGES.rst
M src/plone/recipe/zope2instance/__init__.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2cc3a1b..ea24420 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Improved error message for invalid comments in zcml variable assignment\n+  [tobiasherp]\n \n \n 4.4.0 (2018-04-24)\ndiff --git a/src/plone/recipe/zope2instance/__init__.py b/src/plone/recipe/zope2instance/__init__.py\nindex 2c901fa..2ee64ba 100644\n--- a/src/plone/recipe/zope2instance/__init__.py\n+++ b/src/plone/recipe/zope2instance/__init__.py\n@@ -758,6 +758,15 @@ def build_package_includes(self):\n             n = 1 # 001 is reserved for an optional locales-configure\n             package_match = re.compile('\\w+([.]\\w+)*$').match\n             for package in zcml:\n+                if package.startswith('#'):\n+                    comment_snippet = zcml[n-1:n+5]\n+                    if zcml[n+5:]:\n+                        comment_snippet.append('(...)')\n+                    comment_snippet = ' '.join(comment_snippet)\n+                    raise ValueError('Invalid comment in zcml assignment'\n+                                     ' (must start in first column; something like'\n+                                     ' %(comment_snippet)r)'\n+                                     % locals())\n                 n += 1\n                 orig = package\n                 if ':' in package:\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/4.x
Date: 2018-05-29T15:31:33+02:00
Author: Tobias Herp (tobiasherp) <tobias.herp@stein.de>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/59a5fed66caf81e41e2a7ecf9e834f3603151ed3

Link to issue 46

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex ea24420..e10ecc7 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,7 @@ New features:\n \n Bug fixes:\n \n-- Improved error message for invalid comments in zcml variable assignment\n+- Improved error message for invalid comments in zcml variable assignment; fixes #46\n   [tobiasherp]\n \n \n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/4.x
Date: 2018-07-24T13:37:58+02:00
Author: Tobias Herp (tobiasherp) <tobias.herp@visaplan.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/6028a5bba9593bcf531e1b481e8ab6bfa898eeda

Shortened the comment_snippet

... which is presented in the ValueError, to one whitespace-separated
"word" only ('#word' or '# word').

Reordered the error message.

Files changed:
M src/plone/recipe/zope2instance/__init__.py

b"diff --git a/src/plone/recipe/zope2instance/__init__.py b/src/plone/recipe/zope2instance/__init__.py\nindex 2ee64ba..18f8ef9 100644\n--- a/src/plone/recipe/zope2instance/__init__.py\n+++ b/src/plone/recipe/zope2instance/__init__.py\n@@ -759,13 +759,17 @@ def build_package_includes(self):\n             package_match = re.compile('\\w+([.]\\w+)*$').match\n             for package in zcml:\n                 if package.startswith('#'):\n-                    comment_snippet = zcml[n-1:n+5]\n-                    if zcml[n+5:]:\n+                    if package == '#':  # likely space and text following:\n+                        nend = n + 1\n+                    else:\n+                        nend = n\n+                    comment_snippet = zcml[n-1:nend]\n+                    if zcml[nend:]:\n                         comment_snippet.append('(...)')\n                     comment_snippet = ' '.join(comment_snippet)\n                     raise ValueError('Invalid comment in zcml assignment'\n-                                     ' (must start in first column; something like'\n-                                     ' %(comment_snippet)r)'\n+                                     ' (must start in first column); '\n+                                     'something like %(comment_snippet)r'\n                                      % locals())\n                 n += 1\n                 orig = package\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/4.x
Date: 2018-07-24T13:41:42+02:00
Author: Tobias Herp (tobiasherp) <tobias.herp@visaplan.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/843bee2d478def49f99622d4e04ce6c7d7ba7ba6

Accept the comment if it contains whitespace

Currently, the value is simply split by whitespace; thus, the "package"
cannot contain blanks, and we can't tell how many of the following words
are part of the comment.

If the zcml value one day would be split by lines only, we would be able
to safely skip the end of the line, following the '#'.

If the comment doesn't contain blanks, we can't know this;
but the only way for a comment to contain blanks is splitting by lines.
So we can safely accept the '#text with blanks' or '# text with blanks'
"package" as a comment and skip it.

Files changed:
M src/plone/recipe/zope2instance/__init__.py

b"diff --git a/src/plone/recipe/zope2instance/__init__.py b/src/plone/recipe/zope2instance/__init__.py\nindex 18f8ef9..fd2c97d 100644\n--- a/src/plone/recipe/zope2instance/__init__.py\n+++ b/src/plone/recipe/zope2instance/__init__.py\n@@ -761,6 +761,8 @@ def build_package_includes(self):\n                 if package.startswith('#'):\n                     if package == '#':  # likely space and text following:\n                         nend = n + 1\n+                    elif ' ' in package:  # OK: line-based split!\n+                        continue\n                     else:\n                         nend = n\n                     comment_snippet = zcml[n-1:nend]\n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/4.x
Date: 2018-07-24T15:12:15+02:00
Author: Tobias Herp (tobiasherp) <tobias.herp@visaplan.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/7738045b441f7b20727710381ec64aec01c0ad27

Function nocomments_split, and use to split zcml

Instead of performing complicated checks of package names starting with
'#' characters, we can quite as well make line comments work.

The function nocomments_split first splits the value by line separators,
and then removes everything after the '#' (see doctest).

Files changed:
M src/plone/recipe/zope2instance/__init__.py

b'diff --git a/src/plone/recipe/zope2instance/__init__.py b/src/plone/recipe/zope2instance/__init__.py\nindex fd2c97d..24a8fb8 100644\n--- a/src/plone/recipe/zope2instance/__init__.py\n+++ b/src/plone/recipe/zope2instance/__init__.py\n@@ -58,6 +58,36 @@ def handle_singleline_env_vars(vars_):\n     return vars_\n \n \n+def nocomments_split(s):\n+    r"""\n+    Split a multiline string, skipping comments.\n+\n+    >>> f = nocomments_split\n+    >>> f(\'\'\'one.two three\n+    ... # ignored comment line\n+    ... four # ignored trailing comment\n+    ...    # another comment line\n+    ... five\n+    ... \'\'\')\n+    [\'one.two\', \'three\', \'four\', \'five\']\n+    >>> f(\'  \\t\')\n+    []\n+    >>> f(\'  # ignored\')\n+    []\n+\n+    Mixed eol styles don\'t matter:\n+    >>> f(\'one\\r\\n  # ignored \\rtwo \\n  # another comment\\n three\')\n+    [\'one\', \'two\', \'three\']\n+    """\n+    res = []\n+    for line in s.splitlines():\n+        if \'#\' in line:\n+            line, comment = line.split(\'#\', 1)\n+        for word in line.split():\n+            res.append(word)\n+    return res\n+\n+\n class Recipe(Scripts):\n \n     def __init__(self, buildout, name, options):\n@@ -713,7 +743,7 @@ def build_package_includes(self):\n             return\n \n         if zcml:\n-            zcml = zcml.split()\n+            zcml = nocomments_split(zcml)\n \n         if additional_zcml or resources or locales or zcml:\n             includes_path = os.path.join(location, \'etc\', \'package-includes\')\n@@ -758,21 +788,6 @@ def build_package_includes(self):\n             n = 1 # 001 is reserved for an optional locales-configure\n             package_match = re.compile(\'\\w+([.]\\w+)*$\').match\n             for package in zcml:\n-                if package.startswith(\'#\'):\n-                    if package == \'#\':  # likely space and text following:\n-                        nend = n + 1\n-                    elif \' \' in package:  # OK: line-based split!\n-                        continue\n-                    else:\n-                        nend = n\n-                    comment_snippet = zcml[n-1:nend]\n-                    if zcml[nend:]:\n-                        comment_snippet.append(\'(...)\')\n-                    comment_snippet = \' \'.join(comment_snippet)\n-                    raise ValueError(\'Invalid comment in zcml assignment\'\n-                                     \' (must start in first column); \'\n-                                     \'something like %(comment_snippet)r\'\n-                                     % locals())\n                 n += 1\n                 orig = package\n                 if \':\' in package:\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/4.x
Date: 2018-07-24T15:27:37+02:00
Author: Tobias Herp (tobiasherp) <tobias.herp@visaplan.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/3c934dca0147f8c8c34210c6ad8dfde4009abd1c

Changed the description

With the nocomments_split function, the mentioned error message is not
necessary anymore, since comments are weeded out above.

Files changed:
M CHANGES.rst

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex e10ecc7..7b83387 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,8 @@ New features:\n \n Bug fixes:\n \n-- Improved error message for invalid comments in zcml variable assignment; fixes #46\n+- Make comments in zcml values work, even if not starting at the beginning of the line;\n+  before, we had a confusing error message. Fixes #46\n   [tobiasherp]\n \n \n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/4.x
Date: 2018-08-03T23:27:03+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/e96bdac6dc11a2d8c98d9fb32cc7d76a27ee7a4d

Merge pull request #47 from visaplan/4.x

Improved error message for invalid comments

Files changed:
M CHANGES.rst
M src/plone/recipe/zope2instance/__init__.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 2cc3a1b..7b83387 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,9 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Make comments in zcml values work, even if not starting at the beginning of the line;\n+  before, we had a confusing error message. Fixes #46\n+  [tobiasherp]\n \n \n 4.4.0 (2018-04-24)\ndiff --git a/src/plone/recipe/zope2instance/__init__.py b/src/plone/recipe/zope2instance/__init__.py\nindex 2c901fa..24a8fb8 100644\n--- a/src/plone/recipe/zope2instance/__init__.py\n+++ b/src/plone/recipe/zope2instance/__init__.py\n@@ -58,6 +58,36 @@ def handle_singleline_env_vars(vars_):\n     return vars_\n \n \n+def nocomments_split(s):\n+    r"""\n+    Split a multiline string, skipping comments.\n+\n+    >>> f = nocomments_split\n+    >>> f(\'\'\'one.two three\n+    ... # ignored comment line\n+    ... four # ignored trailing comment\n+    ...    # another comment line\n+    ... five\n+    ... \'\'\')\n+    [\'one.two\', \'three\', \'four\', \'five\']\n+    >>> f(\'  \\t\')\n+    []\n+    >>> f(\'  # ignored\')\n+    []\n+\n+    Mixed eol styles don\'t matter:\n+    >>> f(\'one\\r\\n  # ignored \\rtwo \\n  # another comment\\n three\')\n+    [\'one\', \'two\', \'three\']\n+    """\n+    res = []\n+    for line in s.splitlines():\n+        if \'#\' in line:\n+            line, comment = line.split(\'#\', 1)\n+        for word in line.split():\n+            res.append(word)\n+    return res\n+\n+\n class Recipe(Scripts):\n \n     def __init__(self, buildout, name, options):\n@@ -713,7 +743,7 @@ def build_package_includes(self):\n             return\n \n         if zcml:\n-            zcml = zcml.split()\n+            zcml = nocomments_split(zcml)\n \n         if additional_zcml or resources or locales or zcml:\n             includes_path = os.path.join(location, \'etc\', \'package-includes\')\n'

