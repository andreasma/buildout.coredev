Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-01T14:41:46+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.Archetypes/commit/b913832d8fc4d3d4fd3cafe8f427304ef3f6d143

Make sure the 'at_ordered_refs' dict changes are persisted when setting references by manually setting '_p_changed=1'.

Files changed:
M CHANGES.rst
M Products/Archetypes/Field.py
M Products/Archetypes/tests/test_referenceable.py

diff --git a/CHANGES.rst b/CHANGES.rst
index 1eadbc3d..334c80df 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,11 @@ Changelog
 1.9.18 (unreleased)
 -------------------
 
-- Nothing changed yet.
+Bug fixes:
+
+- Make sure the 'at_ordered_refs' dict changes are persisted when setting
+  references by manually setting '_p_changed=1'.
+  [gbastien]
 
 
 1.9.17 (2017-06-26)
diff --git a/Products/Archetypes/Field.py b/Products/Archetypes/Field.py
index b5dc9ac0..6ba9f4ab 100644
--- a/Products/Archetypes/Field.py
+++ b/Products/Archetypes/Field.py
@@ -1999,7 +1999,10 @@ def set(self, instance, value, **kwargs):
             if not hasattr(aq_base(instance), 'at_ordered_refs'):
                 instance.at_ordered_refs = {}
 
-            instance.at_ordered_refs[self.relationship] = tuple(filter(None, uids))
+            instance.at_ordered_refs[
+                self.relationship] = tuple(filter(None, uids))
+            # persist changes that occured in at_ordered_refs
+            instance._p_changed = 1
 
         if self.callStorageOnSet:
             #if this option is set the reference fields's values get written
diff --git a/Products/Archetypes/tests/test_referenceable.py b/Products/Archetypes/tests/test_referenceable.py
index 48988307..714b0a76 100644
--- a/Products/Archetypes/tests/test_referenceable.py
+++ b/Products/Archetypes/tests/test_referenceable.py
@@ -624,6 +624,25 @@ def test_copyKeepsReferences(self):
         # Original non-copied object should point to both the original and the copied object
         self.assertEqual(b.getBRefs(), [a, copy_a])
 
+    def test_at_ordered_refs_changes_are_persisted(self):
+        # when using 'referencesSortable' order is saved in
+        # instance.at_ordered_refs, as it is a dict, we make sure it is
+        # correctly persisted by using _p_changed upon changes
+        a = makeContent(self.folder, portal_type='DDocument', id='a')
+        b = makeContent(self.folder, portal_type='DDocument', id='b')
+        transaction.commit()
+        import ipdb; ipdb.set_trace()
+
+        related_field = a.getField('related')
+        related_field.referencesSortable = True
+        # first time it is set, at_ordered_refs dict is added
+        related_field.set(a, [b.UID()])
+        self.assertTrue(a._p_changed)
+        transaction.commit()
+        # second time changes occured, it is _p_changed too
+        related_field.set(a, [])
+        self.assertTrue(a._p_changed)
+
     def test_copyPasteSupport(self):
         # copy/paste behaviour test
         # in another folder, pasted object should lose all references


Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-01T14:50:39+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.Archetypes/commit/f01b17844649b0d4490e7622e1b3057987aae7a3

Fix Travis with allow-hosts

Files changed:
M travis.cfg

diff --git a/travis.cfg b/travis.cfg
index 1603b236..38121568 100644
--- a/travis.cfg
+++ b/travis.cfg
@@ -1,6 +1,9 @@
 [buildout]
 extends = buildout.cfg
 
+allow-hosts +=
+    *.org
+
 # caches, see also .travis.yaml
 # one should not depend on '/home/travis' but it seems stable in containers.
 eggs-directory = /home/travis/buildout-cache/eggs


Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-01T14:56:23+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.Archetypes/commit/39818a14526106ed7f518375fdb52619453c4b24

Reverted Travis fix

Files changed:
M travis.cfg

diff --git a/travis.cfg b/travis.cfg
index 38121568..1603b236 100644
--- a/travis.cfg
+++ b/travis.cfg
@@ -1,9 +1,6 @@
 [buildout]
 extends = buildout.cfg
 
-allow-hosts +=
-    *.org
-
 # caches, see also .travis.yaml
 # one should not depend on '/home/travis' but it seems stable in containers.
 eggs-directory = /home/travis/buildout-cache/eggs


Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-01T20:28:56+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.Archetypes/commit/6393b7e3da7b13669b3044da5392bbfefed4a412

Use correct index for Travis

Files changed:
M travis.cfg

diff --git a/travis.cfg b/travis.cfg
index 1603b236..c8876b7d 100644
--- a/travis.cfg
+++ b/travis.cfg
@@ -1,4 +1,7 @@
 [buildout]
+
+index = https://pypi.org/simple/
+
 extends = buildout.cfg
 
 # caches, see also .travis.yaml


Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-01T20:35:26+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.Archetypes/commit/9fd8fc24784b02f0964e5bf82a68a38bdacdf0d8

Try to fix Travis

Files changed:
M .travis.yml
M buildout.cfg

diff --git a/.travis.yml b/.travis.yml
index b5d9211a..926873d3 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -8,7 +8,8 @@ cache:
 before_install:
   - mkdir -p $HOME/buildout-cache/{eggs,downloads}
   - virtualenv .
-  - bin/python bootstrap.py --setuptools-version=26.1.1 --buildout-version=1.7.1  #from http://dist.plone.org/release/4.3-latest/versions.cfg 2017-05-30 11:30
+  # Keep in sync with buildout.cfg:
+  - bin/python bootstrap.py --setuptools-version=38.2.4 --buildout-version=2.11.3
 install:
   - bin/buildout -Nvt 5 -c travis.cfg
 script:
diff --git a/buildout.cfg b/buildout.cfg
index 8d2a10cb..ce215b39 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -5,6 +5,9 @@ extends = http://dist.plone.org/release/4.3-latest/versions.cfg
 
 [versions]
 Products.Archetypes =
+# Keep in sync with .travis.yml:
+setuptools = 38.2.4
+zc.buildout = 2.11.3
 
 [test]
 recipe = zc.recipe.testrunner


Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-01T20:36:27+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.Archetypes/commit/fe2b516a9bcd43337e99efce3aefad480bbb84ae

Removed ipdb...

Files changed:
M Products/Archetypes/tests/test_referenceable.py

diff --git a/Products/Archetypes/tests/test_referenceable.py b/Products/Archetypes/tests/test_referenceable.py
index 714b0a76..0e684808 100644
--- a/Products/Archetypes/tests/test_referenceable.py
+++ b/Products/Archetypes/tests/test_referenceable.py
@@ -631,7 +631,6 @@ def test_at_ordered_refs_changes_are_persisted(self):
         a = makeContent(self.folder, portal_type='DDocument', id='a')
         b = makeContent(self.folder, portal_type='DDocument', id='b')
         transaction.commit()
-        import ipdb; ipdb.set_trace()
 
         related_field = a.getField('related')
         related_field.referencesSortable = True


Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-01T21:06:15+02:00
Author: Gauthier Bastien (gbastien) <g.bastien@imio.be>
Commit: https://github.com/plone/Products.Archetypes/commit/9749b1e2422f21f684f0379600ee03444a84291f

Use transaction.savepoint instead transaction.commit to avoid test isolation problems

Files changed:
M Products/Archetypes/tests/test_referenceable.py

diff --git a/Products/Archetypes/tests/test_referenceable.py b/Products/Archetypes/tests/test_referenceable.py
index 0e684808..999c790c 100644
--- a/Products/Archetypes/tests/test_referenceable.py
+++ b/Products/Archetypes/tests/test_referenceable.py
@@ -630,14 +630,14 @@ def test_at_ordered_refs_changes_are_persisted(self):
         # correctly persisted by using _p_changed upon changes
         a = makeContent(self.folder, portal_type='DDocument', id='a')
         b = makeContent(self.folder, portal_type='DDocument', id='b')
-        transaction.commit()
+        transaction.savepoint(optimistic=True)
 
         related_field = a.getField('related')
         related_field.referencesSortable = True
         # first time it is set, at_ordered_refs dict is added
         related_field.set(a, [b.UID()])
         self.assertTrue(a._p_changed)
-        transaction.commit()
+        transaction.savepoint(optimistic=True)
         # second time changes occured, it is _p_changed too
         related_field.set(a, [])
         self.assertTrue(a._p_changed)


Repository: Products.Archetypes


Branch: refs/heads/1.9.x
Date: 2018-05-02T13:37:36+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.Archetypes/commit/3e1b930eefbd8c9a3f21f363d0dc044ccb18f48f

Merge pull request #106 from plone/1.9-persist_at_ordered_refs

1.9 persist at ordered refs

Files changed:
M .travis.yml
M CHANGES.rst
M Products/Archetypes/Field.py
M Products/Archetypes/tests/test_referenceable.py
M buildout.cfg
M travis.cfg

diff --git a/.travis.yml b/.travis.yml
index b5d9211a..926873d3 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -8,7 +8,8 @@ cache:
 before_install:
   - mkdir -p $HOME/buildout-cache/{eggs,downloads}
   - virtualenv .
-  - bin/python bootstrap.py --setuptools-version=26.1.1 --buildout-version=1.7.1  #from http://dist.plone.org/release/4.3-latest/versions.cfg 2017-05-30 11:30
+  # Keep in sync with buildout.cfg:
+  - bin/python bootstrap.py --setuptools-version=38.2.4 --buildout-version=2.11.3
 install:
   - bin/buildout -Nvt 5 -c travis.cfg
 script:
diff --git a/CHANGES.rst b/CHANGES.rst
index 1eadbc3d..334c80df 100644
--- a/CHANGES.rst
+++ b/CHANGES.rst
@@ -4,7 +4,11 @@ Changelog
 1.9.18 (unreleased)
 -------------------
 
-- Nothing changed yet.
+Bug fixes:
+
+- Make sure the 'at_ordered_refs' dict changes are persisted when setting
+  references by manually setting '_p_changed=1'.
+  [gbastien]
 
 
 1.9.17 (2017-06-26)
diff --git a/Products/Archetypes/Field.py b/Products/Archetypes/Field.py
index b5dc9ac0..6ba9f4ab 100644
--- a/Products/Archetypes/Field.py
+++ b/Products/Archetypes/Field.py
@@ -1999,7 +1999,10 @@ def set(self, instance, value, **kwargs):
             if not hasattr(aq_base(instance), 'at_ordered_refs'):
                 instance.at_ordered_refs = {}
 
-            instance.at_ordered_refs[self.relationship] = tuple(filter(None, uids))
+            instance.at_ordered_refs[
+                self.relationship] = tuple(filter(None, uids))
+            # persist changes that occured in at_ordered_refs
+            instance._p_changed = 1
 
         if self.callStorageOnSet:
             #if this option is set the reference fields's values get written
diff --git a/Products/Archetypes/tests/test_referenceable.py b/Products/Archetypes/tests/test_referenceable.py
index 48988307..999c790c 100644
--- a/Products/Archetypes/tests/test_referenceable.py
+++ b/Products/Archetypes/tests/test_referenceable.py
@@ -624,6 +624,24 @@ def test_copyKeepsReferences(self):
         # Original non-copied object should point to both the original and the copied object
         self.assertEqual(b.getBRefs(), [a, copy_a])
 
+    def test_at_ordered_refs_changes_are_persisted(self):
+        # when using 'referencesSortable' order is saved in
+        # instance.at_ordered_refs, as it is a dict, we make sure it is
+        # correctly persisted by using _p_changed upon changes
+        a = makeContent(self.folder, portal_type='DDocument', id='a')
+        b = makeContent(self.folder, portal_type='DDocument', id='b')
+        transaction.savepoint(optimistic=True)
+
+        related_field = a.getField('related')
+        related_field.referencesSortable = True
+        # first time it is set, at_ordered_refs dict is added
+        related_field.set(a, [b.UID()])
+        self.assertTrue(a._p_changed)
+        transaction.savepoint(optimistic=True)
+        # second time changes occured, it is _p_changed too
+        related_field.set(a, [])
+        self.assertTrue(a._p_changed)
+
     def test_copyPasteSupport(self):
         # copy/paste behaviour test
         # in another folder, pasted object should lose all references
diff --git a/buildout.cfg b/buildout.cfg
index 8d2a10cb..ce215b39 100644
--- a/buildout.cfg
+++ b/buildout.cfg
@@ -5,6 +5,9 @@ extends = http://dist.plone.org/release/4.3-latest/versions.cfg
 
 [versions]
 Products.Archetypes =
+# Keep in sync with .travis.yml:
+setuptools = 38.2.4
+zc.buildout = 2.11.3
 
 [test]
 recipe = zc.recipe.testrunner
diff --git a/travis.cfg b/travis.cfg
index 1603b236..c8876b7d 100644
--- a/travis.cfg
+++ b/travis.cfg
@@ -1,4 +1,7 @@
 [buildout]
+
+index = https://pypi.org/simple/
+
 extends = buildout.cfg
 
 # caches, see also .travis.yaml


