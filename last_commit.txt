Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-05-15T19:31:22+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/f00421f8fec2aea34d77610486e755a69217669f

fix UTF8Property in py3

Files changed:
M plone/app/dexterity/browser/utils.py

diff --git a/plone/app/dexterity/browser/utils.py b/plone/app/dexterity/browser/utils.py
index e2429ab..0107441 100644
--- a/plone/app/dexterity/browser/utils.py
+++ b/plone/app/dexterity/browser/utils.py
@@ -9,11 +9,11 @@ def __init__(self, name):
 
     def __get__(self, inst, type=None):
         value = getattr(inst.context, self.name)
-        if isinstance(value, str):
+        if six.PY2 and isinstance(value, six.binary_type):
             value = value.decode('utf8')
         return value
 
     def __set__(self, inst, value):
-        if isinstance(value, six.text_type):
+        if six.PY2 and isinstance(value, six.text_type):
             value = value.encode('utf8')
         setattr(inst.context, self.name, value)


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-05-15T19:33:09+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.dexterity/commit/a0d16a03b77b899fb1f912cd1164cc79ae1455c4

DCFieldProperties can be text in py3

Files changed:
M plone/app/dexterity/behaviors/metadata.py

diff --git a/plone/app/dexterity/behaviors/metadata.py b/plone/app/dexterity/behaviors/metadata.py
index 44089c6..743511b 100644
--- a/plone/app/dexterity/behaviors/metadata.py
+++ b/plone/app/dexterity/behaviors/metadata.py
@@ -309,13 +309,15 @@ def __get__(self, inst, klass):
             return
 
         if IText.providedBy(self._field):
-            return attribute.decode('utf-8')
+            if six.PY2:
+                return attribute.decode('utf-8')
 
         if ISequence.providedBy(self._field):
             if IText.providedBy(self._field.value_type):
-                return type(attribute)(
-                    item.decode('utf-8') for item in attribute
-                )
+                if six.PY2:
+                    return type(attribute)(
+                        item.decode('utf-8') for item in attribute
+                    )
 
         return attribute
 
@@ -331,13 +333,15 @@ def __set__(self, inst, value):
                              value.hour, value.minute)
         elif value is not None:
             if IText.providedBy(self._field):
-                value = value.encode('utf-8')
+                if six.PY2:
+                    value = value.encode('utf-8')
 
             elif ISequence.providedBy(self._field):
                 if IText.providedBy(self._field.value_type):
-                    value = type(value)(
-                        item.encode('utf-8') for item in value
-                    )
+                    if six.PY2:
+                        value = type(value)(
+                            item.encode('utf-8') for item in value
+                        )
 
         if self._set_name:
             getattr(inst.context, self._set_name)(value)


