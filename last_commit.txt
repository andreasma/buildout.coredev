Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-04-17T17:25:12+02:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/ff1a3c4fb5976827330c147b375ceadd3e00fdff

Update intro.rst

Files changed:
M docs/behaviors/intro.rst

diff --git a/docs/behaviors/intro.rst b/docs/behaviors/intro.rst
index d7d9303..163c9b7 100644
--- a/docs/behaviors/intro.rst
+++ b/docs/behaviors/intro.rst
@@ -20,7 +20,7 @@ Behaviors are normally used when:
    Behaviors allow you to write a schema and associated components (e.g. adapters, event handlers, views, viwelets) once and re-use them easily.
 -  A more experienced developer is making functionality available for re-use by less experienced integrators.
    For example, a behavior can be packaged up and release as an add-on product.
-   Integators can then install that product and use the behavior in their own types, either in code or through-the-web.
+   Integrators can then install that product and use the behavior in their own types, either in code or through-the-web.
 
 This manual is aimed at developers who want to write new behaviors.
 This is a slightly more advanced topic than the writing of custom content types.


Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2018-04-17T17:28:33+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.dexterity/commit/b3f92a9483f7c2f69bdad458291733ce4665055f

Merge pull request #272 from plone/ale-rt-patch-1

Fix typo

Files changed:
M docs/behaviors/intro.rst

diff --git a/docs/behaviors/intro.rst b/docs/behaviors/intro.rst
index d7d9303..163c9b7 100644
--- a/docs/behaviors/intro.rst
+++ b/docs/behaviors/intro.rst
@@ -20,7 +20,7 @@ Behaviors are normally used when:
    Behaviors allow you to write a schema and associated components (e.g. adapters, event handlers, views, viwelets) once and re-use them easily.
 -  A more experienced developer is making functionality available for re-use by less experienced integrators.
    For example, a behavior can be packaged up and release as an add-on product.
-   Integators can then install that product and use the behavior in their own types, either in code or through-the-web.
+   Integrators can then install that product and use the behavior in their own types, either in code or through-the-web.
 
 This manual is aimed at developers who want to write new behaviors.
 This is a slightly more advanced topic than the writing of custom content types.


